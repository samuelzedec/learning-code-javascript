{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/dev/hot-reloader-types.ts"],"sourcesContent":["import type { IncomingMessage, ServerResponse } from 'http'\nimport type { UrlObject } from 'url'\nimport type { Duplex } from 'stream'\nimport type { webpack } from 'next/dist/compiled/webpack/webpack'\nimport type getBaseWebpackConfig from '../../build/webpack-config'\nimport type { RouteDefinition } from '../route-definitions/route-definition'\nimport type { Project, Update as TurbopackUpdate } from '../../build/swc/types'\nimport type { VersionInfo } from './parse-version-info'\nimport type { DebugInfo } from '../../client/components/react-dev-overlay/types'\n\nexport const enum HMR_ACTIONS_SENT_TO_BROWSER {\n  ADDED_PAGE = 'addedPage',\n  REMOVED_PAGE = 'removedPage',\n  RELOAD_PAGE = 'reloadPage',\n  SERVER_COMPONENT_CHANGES = 'serverComponentChanges',\n  MIDDLEWARE_CHANGES = 'middlewareChanges',\n  CLIENT_CHANGES = 'clientChanges',\n  SERVER_ONLY_CHANGES = 'serverOnlyChanges',\n  SYNC = 'sync',\n  BUILT = 'built',\n  BUILDING = 'building',\n  DEV_PAGES_MANIFEST_UPDATE = 'devPagesManifestUpdate',\n  TURBOPACK_MESSAGE = 'turbopack-message',\n  SERVER_ERROR = 'serverError',\n  TURBOPACK_CONNECTED = 'turbopack-connected',\n  APP_ISR_MANIFEST = 'appIsrManifest',\n}\n\ninterface ServerErrorAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.SERVER_ERROR\n  errorJSON: string\n}\n\nexport interface TurbopackMessageAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_MESSAGE\n  data: TurbopackUpdate | TurbopackUpdate[]\n}\n\ninterface BuildingAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.BUILDING\n}\n\nexport interface CompilationError {\n  moduleName?: string\n  message: string\n  details?: string\n  moduleTrace?: Array<{ moduleName?: string }>\n  stack?: string\n}\nexport interface SyncAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.SYNC\n  hash: string\n  errors: ReadonlyArray<CompilationError>\n  warnings: ReadonlyArray<CompilationError>\n  versionInfo: VersionInfo\n  updatedModules?: ReadonlyArray<string>\n  debug?: DebugInfo\n}\ninterface BuiltAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.BUILT\n  hash: string\n  errors: ReadonlyArray<CompilationError>\n  warnings: ReadonlyArray<CompilationError>\n  updatedModules?: ReadonlyArray<string>\n}\n\ninterface AddedPageAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.ADDED_PAGE\n  data: [page: string | null]\n}\n\ninterface RemovedPageAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.REMOVED_PAGE\n  data: [page: string | null]\n}\n\nexport interface ReloadPageAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE\n  data: string\n}\n\ninterface ServerComponentChangesAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.SERVER_COMPONENT_CHANGES\n}\n\ninterface MiddlewareChangesAction {\n  event: HMR_ACTIONS_SENT_TO_BROWSER.MIDDLEWARE_CHANGES\n}\n\ninterface ClientChangesAction {\n  event: HMR_ACTIONS_SENT_TO_BROWSER.CLIENT_CHANGES\n}\n\ninterface ServerOnlyChangesAction {\n  event: HMR_ACTIONS_SENT_TO_BROWSER.SERVER_ONLY_CHANGES\n  pages: ReadonlyArray<string>\n}\n\ninterface DevPagesManifestUpdateAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.DEV_PAGES_MANIFEST_UPDATE\n  data: [\n    {\n      devPagesManifest: true\n    },\n  ]\n}\n\nexport interface TurbopackConnectedAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_CONNECTED\n  data: { sessionId: number }\n}\n\nexport interface AppIsrManifestAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.APP_ISR_MANIFEST\n  data: Record<string, boolean>\n}\n\nexport type HMR_ACTION_TYPES =\n  | TurbopackMessageAction\n  | TurbopackConnectedAction\n  | BuildingAction\n  | SyncAction\n  | BuiltAction\n  | AddedPageAction\n  | RemovedPageAction\n  | ReloadPageAction\n  | ServerComponentChangesAction\n  | ClientChangesAction\n  | MiddlewareChangesAction\n  | ServerOnlyChangesAction\n  | DevPagesManifestUpdateAction\n  | ServerErrorAction\n  | AppIsrManifestAction\n\nexport type TurbopackMsgToBrowser =\n  | { type: HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_MESSAGE; data: any }\n  | {\n      type: HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_CONNECTED\n      data: { sessionId: number }\n    }\n\nexport interface NextJsHotReloaderInterface {\n  turbopackProject?: Project\n  activeWebpackConfigs?: Array<Awaited<ReturnType<typeof getBaseWebpackConfig>>>\n  serverStats: webpack.Stats | null\n  edgeServerStats: webpack.Stats | null\n  run(\n    req: IncomingMessage,\n    res: ServerResponse,\n    parsedUrl: UrlObject\n  ): Promise<{ finished?: true }>\n\n  setHmrServerError(error: Error | null): void\n  clearHmrServerError(): void\n  start(): Promise<void>\n  stop(): Promise<void>\n  send(action: HMR_ACTION_TYPES): void\n  getCompilationErrors(page: string): Promise<any[]>\n  onHMR(\n    req: IncomingMessage,\n    _socket: Duplex,\n    head: Buffer,\n    onUpgrade: (client: { send(data: string): void }) => void\n  ): void\n  invalidate({\n    reloadAfterInvalidation,\n  }: {\n    reloadAfterInvalidation: boolean\n  }): Promise<void> | void\n  buildFallbackError(): Promise<void>\n  ensurePage({\n    page,\n    clientOnly,\n    appPaths,\n    definition,\n    isApp,\n    url,\n  }: {\n    page: string\n    clientOnly: boolean\n    appPaths?: ReadonlyArray<string> | null\n    isApp?: boolean\n    definition: RouteDefinition | undefined\n    url?: string\n  }): Promise<void>\n}\n"],"names":["HMR_ACTIONS_SENT_TO_BROWSER"],"mappings":";;;;+BAUkBA,+BAAAA;;;eAAAA;;;AAAX,IAAWA,8BAAAA,WAAAA,GAAAA,SAAAA,2BAAAA;;;;;;;;;;;;;;;;WAAAA","ignoreList":[0]}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/dev/turbopack/entry-key.ts"],"sourcesContent":["/**\n * `app` -> app dir\n * `pages` -> pages dir\n * `root` -> middleware / instrumentation\n * `assets` -> assets\n */\nexport type EntryKeyType = 'app' | 'pages' | 'root' | 'assets'\nexport type EntryKeySide = 'client' | 'server'\n\n// custom type to make sure you can't accidentally use a \"generic\" string\nexport type EntryKey =\n  `{\"type\":\"${EntryKeyType}\",\"side\":\"${EntryKeyType}\",\"page\":\"${string}\"}`\n\n/**\n * Get a key that's unique across all entrypoints.\n */\nexport function getEntryKey(\n  type: EntryKeyType,\n  side: EntryKeySide,\n  page: string\n): EntryKey {\n  return JSON.stringify({ type, side, page }) as EntryKey\n}\n\n/**\n * Split an `EntryKey` up into its components.\n */\nexport function splitEntryKey(key: EntryKey): {\n  type: EntryKeyType\n  side: EntryKeySide\n  page: string\n} {\n  return JSON.parse(key)\n}\n"],"names":["getEntryKey","splitEntryKey","type","side","page","JSON","stringify","key","parse"],"mappings":"AAAA;;;;;CAKC,GAAA;;;;;;;;;;;;;;;IAWeA,WAAW,EAAA;eAAXA;;IAWAC,aAAa,EAAA;eAAbA;;;AAXT,SAASD,YACdE,IAAkB,EAClBC,IAAkB,EAClBC,IAAY;IAEZ,OAAOC,KAAKC,SAAS,CAAC;QAAEJ;QAAMC;QAAMC;IAAK;AAC3C;AAKO,SAASH,cAAcM,GAAa;IAKzC,OAAOF,KAAKG,KAAK,CAACD;AACpB","ignoreList":[0]}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/dev/turbopack-utils.ts"],"sourcesContent":["import type { NextConfigComplete } from '../config-shared'\nimport loadJsConfig from '../../build/load-jsconfig'\nimport type {\n  ServerFields,\n  SetupOpts,\n} from '../lib/router-utils/setup-dev-bundler'\nimport type {\n  Issue,\n  StyledString,\n  TurbopackResult,\n  Endpoint,\n  Entrypoints as RawEntrypoints,\n  Update as TurbopackUpdate,\n  WrittenEndpoint,\n} from '../../build/swc/types'\nimport {\n  decodeMagicIdentifier,\n  MAGIC_IDENTIFIER_REGEX,\n} from '../../shared/lib/magic-identifier'\nimport { bold, green, magenta, red } from '../../lib/picocolors'\nimport {\n  type HMR_ACTION_TYPES,\n  HMR_ACTIONS_SENT_TO_BROWSER,\n} from './hot-reloader-types'\nimport * as Log from '../../build/output/log'\nimport type { PropagateToWorkersField } from '../lib/router-utils/types'\nimport type { TurbopackManifestLoader } from './turbopack/manifest-loader'\nimport type { AppRoute, Entrypoints, PageRoute } from './turbopack/types'\nimport {\n  type EntryKey,\n  getEntryKey,\n  splitEntryKey,\n} from './turbopack/entry-key'\nimport type ws from 'next/dist/compiled/ws'\nimport isInternal from '../../shared/lib/is-internal'\nimport { isMetadataRoute } from '../../lib/metadata/is-metadata-route'\nimport type { CustomRoutes } from '../../lib/load-custom-routes'\n\nexport async function getTurbopackJsConfig(\n  dir: string,\n  nextConfig: NextConfigComplete\n) {\n  const { jsConfig } = await loadJsConfig(dir, nextConfig)\n  return jsConfig ?? { compilerOptions: {} }\n}\n\n// An error generated from emitted Turbopack issues. This can include build\n// errors caused by issues with user code.\nexport class ModuleBuildError extends Error {\n  name = 'ModuleBuildError'\n}\n\n// An error caused by an internal issue in Turbopack. These should be written\n// to a log file and details should not be shown to the user.\nexport class TurbopackInternalError extends Error {\n  name = 'TurbopackInternalError'\n\n  constructor(cause: Error) {\n    super(cause.message)\n    this.stack = cause.stack\n  }\n}\n\n/**\n * Thin stopgap workaround layer to mimic existing wellknown-errors-plugin in webpack's build\n * to emit certain type of errors into cli.\n */\nexport function isWellKnownError(issue: Issue): boolean {\n  const { title } = issue\n  const formattedTitle = renderStyledStringToErrorAnsi(title)\n  // TODO: add more well known errors\n  if (\n    formattedTitle.includes('Module not found') ||\n    formattedTitle.includes('Unknown module type')\n  ) {\n    return true\n  }\n\n  return false\n}\n\nconst onceErrorSet = new Set()\n/**\n * Check if given issue is a warning to be display only once.\n * This mimics behavior of get-page-static-info's warnOnce.\n * @param issue\n * @returns\n */\nfunction shouldEmitOnceWarning(issue: Issue): boolean {\n  const { severity, title, stage } = issue\n  if (severity === 'warning' && title.value === 'Invalid page configuration') {\n    if (onceErrorSet.has(issue)) {\n      return false\n    }\n    onceErrorSet.add(issue)\n  }\n  if (\n    severity === 'warning' &&\n    stage === 'config' &&\n    renderStyledStringToErrorAnsi(issue.title).includes(\"can't be external\")\n  ) {\n    if (onceErrorSet.has(issue)) {\n      return false\n    }\n    onceErrorSet.add(issue)\n  }\n\n  return true\n}\n\n/// Print out an issue to the console which should not block\n/// the build by throwing out or blocking error overlay.\nexport function printNonFatalIssue(issue: Issue) {\n  if (isRelevantWarning(issue) && shouldEmitOnceWarning(issue)) {\n    Log.warn(formatIssue(issue))\n  }\n}\n\nfunction isNodeModulesIssue(issue: Issue): boolean {\n  if (issue.severity === 'warning' && issue.stage === 'config') {\n    // Override for the externalize issue\n    // `Package foo (serverExternalPackages or default list) can't be external`\n    if (\n      renderStyledStringToErrorAnsi(issue.title).includes(\"can't be external\")\n    ) {\n      return false\n    }\n  }\n\n  return (\n    issue.severity === 'warning' &&\n    (issue.filePath.match(/^(?:.*[\\\\/])?node_modules(?:[\\\\/].*)?$/) !== null ||\n      // Ignore Next.js itself when running next directly in the monorepo where it is not inside\n      // node_modules anyway.\n      // TODO(mischnic) prevent matches when this is published to npm\n      issue.filePath.startsWith('[project]/packages/next/'))\n  )\n}\n\nexport function isRelevantWarning(issue: Issue): boolean {\n  return issue.severity === 'warning' && !isNodeModulesIssue(issue)\n}\n\nexport function formatIssue(issue: Issue) {\n  const { filePath, title, description, source } = issue\n  let { documentationLink } = issue\n  let formattedTitle = renderStyledStringToErrorAnsi(title).replace(\n    /\\n/g,\n    '\\n    '\n  )\n\n  // TODO: Use error codes to identify these\n  // TODO: Generalize adapting Turbopack errors to Next.js errors\n  if (formattedTitle.includes('Module not found')) {\n    // For compatiblity with webpack\n    // TODO: include columns in webpack errors.\n    documentationLink = 'https://nextjs.org/docs/messages/module-not-found'\n  }\n\n  let formattedFilePath = filePath\n    .replace('[project]/', './')\n    .replaceAll('/./', '/')\n    .replace('\\\\\\\\?\\\\', '')\n\n  let message = ''\n\n  if (source && source.range) {\n    const { start } = source.range\n    message = `${formattedFilePath}:${start.line + 1}:${\n      start.column + 1\n    }\\n${formattedTitle}`\n  } else if (formattedFilePath) {\n    message = `${formattedFilePath}\\n${formattedTitle}`\n  } else {\n    message = formattedTitle\n  }\n  message += '\\n'\n\n  if (\n    source?.range &&\n    source.source.content &&\n    // ignore Next.js/React internals, as these can often be huge bundled files.\n    !isInternal(filePath)\n  ) {\n    const { start, end } = source.range\n    const { codeFrameColumns } = require('next/dist/compiled/babel/code-frame')\n\n    message +=\n      codeFrameColumns(\n        source.source.content,\n        {\n          start: {\n            line: start.line + 1,\n            column: start.column + 1,\n          },\n          end: {\n            line: end.line + 1,\n            column: end.column + 1,\n          },\n        },\n        { forceColor: true }\n      ).trim() + '\\n\\n'\n  }\n\n  if (description) {\n    message += renderStyledStringToErrorAnsi(description) + '\\n\\n'\n  }\n\n  // TODO: make it possible to enable this for debugging, but not in tests.\n  // if (detail) {\n  //   message += renderStyledStringToErrorAnsi(detail) + '\\n\\n'\n  // }\n\n  // TODO: Include a trace from the issue.\n\n  if (documentationLink) {\n    message += documentationLink + '\\n\\n'\n  }\n\n  return message\n}\n\ntype IssueKey = `${Issue['severity']}-${Issue['filePath']}-${string}-${string}`\nexport type IssuesMap = Map<IssueKey, Issue>\nexport type EntryIssuesMap = Map<EntryKey, IssuesMap>\nexport type TopLevelIssuesMap = IssuesMap\n\nfunction getIssueKey(issue: Issue): IssueKey {\n  return `${issue.severity}-${issue.filePath}-${JSON.stringify(\n    issue.title\n  )}-${JSON.stringify(issue.description)}`\n}\n\nexport function processTopLevelIssues(\n  currentTopLevelIssues: TopLevelIssuesMap,\n  result: TurbopackResult\n) {\n  currentTopLevelIssues.clear()\n\n  for (const issue of result.issues) {\n    const issueKey = getIssueKey(issue)\n    currentTopLevelIssues.set(issueKey, issue)\n  }\n}\n\nexport function processIssues(\n  currentEntryIssues: EntryIssuesMap,\n  key: EntryKey,\n  result: TurbopackResult,\n  throwIssue: boolean,\n  logErrors: boolean\n) {\n  const newIssues = new Map<IssueKey, Issue>()\n  currentEntryIssues.set(key, newIssues)\n\n  const relevantIssues = new Set()\n\n  for (const issue of result.issues) {\n    if (\n      issue.severity !== 'error' &&\n      issue.severity !== 'fatal' &&\n      issue.severity !== 'warning'\n    )\n      continue\n\n    const issueKey = getIssueKey(issue)\n    newIssues.set(issueKey, issue)\n\n    if (issue.severity !== 'warning') {\n      if (throwIssue) {\n        const formatted = formatIssue(issue)\n        relevantIssues.add(formatted)\n      }\n      // if we throw the issue it will most likely get handed and logged elsewhere\n      else if (logErrors && isWellKnownError(issue)) {\n        const formatted = formatIssue(issue)\n        Log.error(formatted)\n      }\n    }\n  }\n\n  if (relevantIssues.size && throwIssue) {\n    throw new ModuleBuildError([...relevantIssues].join('\\n\\n'))\n  }\n}\n\nexport function renderStyledStringToErrorAnsi(string: StyledString): string {\n  function decodeMagicIdentifiers(str: string): string {\n    return str.replaceAll(MAGIC_IDENTIFIER_REGEX, (ident) => {\n      try {\n        return magenta(`{${decodeMagicIdentifier(ident)}}`)\n      } catch (e) {\n        return magenta(`{${ident} (decoding failed: ${e})}`)\n      }\n    })\n  }\n\n  switch (string.type) {\n    case 'text':\n      return decodeMagicIdentifiers(string.value)\n    case 'strong':\n      return bold(red(decodeMagicIdentifiers(string.value)))\n    case 'code':\n      return green(decodeMagicIdentifiers(string.value))\n    case 'line':\n      return string.value.map(renderStyledStringToErrorAnsi).join('')\n    case 'stack':\n      return string.value.map(renderStyledStringToErrorAnsi).join('\\n')\n    default:\n      throw new Error('Unknown StyledString type', string)\n  }\n}\n\nconst MILLISECONDS_IN_NANOSECOND = BigInt(1_000_000)\n\nexport function msToNs(ms: number): bigint {\n  return BigInt(Math.floor(ms)) * MILLISECONDS_IN_NANOSECOND\n}\n\nexport type ChangeSubscriptions = Map<\n  EntryKey,\n  Promise<AsyncIterableIterator<TurbopackResult>>\n>\n\nexport type HandleWrittenEndpoint = (\n  key: EntryKey,\n  result: TurbopackResult<WrittenEndpoint>\n) => void\n\nexport type StartChangeSubscription = (\n  key: EntryKey,\n  includeIssues: boolean,\n  endpoint: Endpoint,\n  makePayload: (\n    change: TurbopackResult\n  ) => Promise<HMR_ACTION_TYPES> | HMR_ACTION_TYPES | void,\n  onError?: (e: Error) => Promise<HMR_ACTION_TYPES> | HMR_ACTION_TYPES | void\n) => Promise<void>\n\nexport type StopChangeSubscription = (key: EntryKey) => Promise<void>\n\nexport type SendHmr = (id: string, payload: HMR_ACTION_TYPES) => void\n\nexport type StartBuilding = (\n  id: string,\n  requestUrl: string | undefined,\n  forceRebuild: boolean\n) => () => void\n\nexport type ReadyIds = Set<string>\n\nexport type ClientState = {\n  clientIssues: EntryIssuesMap\n  hmrPayloads: Map<string, HMR_ACTION_TYPES>\n  turbopackUpdates: TurbopackUpdate[]\n  subscriptions: Map<string, AsyncIterator<any>>\n}\n\nexport type ClientStateMap = WeakMap<ws, ClientState>\n\n// hooks only used by the dev server.\ntype HandleRouteTypeHooks = {\n  handleWrittenEndpoint: HandleWrittenEndpoint\n  subscribeToChanges: StartChangeSubscription\n}\n\nexport async function handleRouteType({\n  dev,\n  page,\n  pathname,\n  route,\n  currentEntryIssues,\n  entrypoints,\n  manifestLoader,\n  readyIds,\n  devRewrites,\n  productionRewrites,\n  hooks,\n  logErrors,\n}: {\n  dev: boolean\n  page: string\n  pathname: string\n  route: PageRoute | AppRoute\n\n  currentEntryIssues: EntryIssuesMap\n  entrypoints: Entrypoints\n  manifestLoader: TurbopackManifestLoader\n  devRewrites: SetupOpts['fsChecker']['rewrites'] | undefined\n  productionRewrites: CustomRoutes['rewrites'] | undefined\n  logErrors: boolean\n\n  readyIds?: ReadyIds // dev\n\n  hooks?: HandleRouteTypeHooks // dev\n}) {\n  const shouldCreateWebpackStats = process.env.TURBOPACK_STATS != null\n\n  switch (route.type) {\n    case 'page': {\n      const clientKey = getEntryKey('pages', 'client', page)\n      const serverKey = getEntryKey('pages', 'server', page)\n\n      try {\n        if (entrypoints.global.app) {\n          const key = getEntryKey('pages', 'server', '_app')\n\n          const writtenEndpoint = await entrypoints.global.app.writeToDisk()\n          hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n          processIssues(\n            currentEntryIssues,\n            key,\n            writtenEndpoint,\n            false,\n            logErrors\n          )\n        }\n        await manifestLoader.loadBuildManifest('_app')\n        await manifestLoader.loadPagesManifest('_app')\n\n        if (entrypoints.global.document) {\n          const key = getEntryKey('pages', 'server', '_document')\n\n          const writtenEndpoint =\n            await entrypoints.global.document.writeToDisk()\n          hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n          processIssues(\n            currentEntryIssues,\n            key,\n            writtenEndpoint,\n            false,\n            logErrors\n          )\n        }\n        await manifestLoader.loadPagesManifest('_document')\n\n        const writtenEndpoint = await route.htmlEndpoint.writeToDisk()\n        hooks?.handleWrittenEndpoint(serverKey, writtenEndpoint)\n\n        const type = writtenEndpoint?.type\n\n        await manifestLoader.loadBuildManifest(page)\n        await manifestLoader.loadPagesManifest(page)\n        if (type === 'edge') {\n          await manifestLoader.loadMiddlewareManifest(page, 'pages')\n        } else {\n          manifestLoader.deleteMiddlewareManifest(serverKey)\n        }\n        await manifestLoader.loadFontManifest('/_app', 'pages')\n        await manifestLoader.loadFontManifest(page, 'pages')\n        await manifestLoader.loadLoadableManifest(page, 'pages')\n\n        if (shouldCreateWebpackStats) {\n          await manifestLoader.loadWebpackStats(page, 'pages')\n        }\n\n        await manifestLoader.writeManifests({\n          devRewrites,\n          productionRewrites,\n          entrypoints,\n        })\n\n        processIssues(\n          currentEntryIssues,\n          serverKey,\n          writtenEndpoint,\n          false,\n          logErrors\n        )\n      } finally {\n        if (dev) {\n          // TODO subscriptions should only be caused by the WebSocket connections\n          // otherwise we don't known when to unsubscribe and this leaking\n          hooks?.subscribeToChanges(\n            serverKey,\n            false,\n            route.dataEndpoint,\n            () => {\n              // Report the next compilation again\n              readyIds?.delete(pathname)\n              return {\n                event: HMR_ACTIONS_SENT_TO_BROWSER.SERVER_ONLY_CHANGES,\n                pages: [page],\n              }\n            },\n            (e) => {\n              return {\n                action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE,\n                data: `error in ${page} data subscription: ${e}`,\n              }\n            }\n          )\n          hooks?.subscribeToChanges(\n            clientKey,\n            false,\n            route.htmlEndpoint,\n            () => {\n              return {\n                event: HMR_ACTIONS_SENT_TO_BROWSER.CLIENT_CHANGES,\n              }\n            },\n            (e) => {\n              return {\n                action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE,\n                data: `error in ${page} html subscription: ${e}`,\n              }\n            }\n          )\n          if (entrypoints.global.document) {\n            hooks?.subscribeToChanges(\n              getEntryKey('pages', 'server', '_document'),\n              false,\n              entrypoints.global.document,\n              () => {\n                return {\n                  action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE,\n                  data: '_document has changed (page route)',\n                }\n              },\n              (e) => {\n                return {\n                  action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE,\n                  data: `error in _document subscription (page route): ${e}`,\n                }\n              }\n            )\n          }\n        }\n      }\n\n      break\n    }\n    case 'page-api': {\n      const key = getEntryKey('pages', 'server', page)\n\n      const writtenEndpoint = await route.endpoint.writeToDisk()\n      hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n\n      const type = writtenEndpoint.type\n\n      await manifestLoader.loadPagesManifest(page)\n      if (type === 'edge') {\n        await manifestLoader.loadMiddlewareManifest(page, 'pages')\n      } else {\n        manifestLoader.deleteMiddlewareManifest(key)\n      }\n      await manifestLoader.loadLoadableManifest(page, 'pages')\n\n      await manifestLoader.writeManifests({\n        devRewrites,\n        productionRewrites,\n        entrypoints,\n      })\n\n      processIssues(currentEntryIssues, key, writtenEndpoint, true, logErrors)\n\n      break\n    }\n    case 'app-page': {\n      const key = getEntryKey('app', 'server', page)\n\n      const writtenEndpoint = await route.htmlEndpoint.writeToDisk()\n      hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n\n      if (dev) {\n        // TODO subscriptions should only be caused by the WebSocket connections\n        // otherwise we don't known when to unsubscribe and this leaking\n        hooks?.subscribeToChanges(\n          key,\n          true,\n          route.rscEndpoint,\n          (change) => {\n            if (change.issues.some((issue) => issue.severity === 'error')) {\n              // Ignore any updates that has errors\n              // There will be another update without errors eventually\n              return\n            }\n            // Report the next compilation again\n            readyIds?.delete(pathname)\n            return {\n              action: HMR_ACTIONS_SENT_TO_BROWSER.SERVER_COMPONENT_CHANGES,\n            }\n          },\n          () => {\n            return {\n              action: HMR_ACTIONS_SENT_TO_BROWSER.SERVER_COMPONENT_CHANGES,\n            }\n          }\n        )\n      }\n\n      const type = writtenEndpoint.type\n\n      if (type === 'edge') {\n        await manifestLoader.loadMiddlewareManifest(page, 'app')\n      } else {\n        manifestLoader.deleteMiddlewareManifest(key)\n      }\n\n      await manifestLoader.loadAppBuildManifest(page)\n      await manifestLoader.loadBuildManifest(page, 'app')\n      await manifestLoader.loadAppPathsManifest(page)\n      await manifestLoader.loadActionManifest(page)\n      await manifestLoader.loadLoadableManifest(page, 'app')\n      await manifestLoader.loadFontManifest(page, 'app')\n\n      if (shouldCreateWebpackStats) {\n        await manifestLoader.loadWebpackStats(page, 'app')\n      }\n\n      await manifestLoader.writeManifests({\n        devRewrites,\n        productionRewrites,\n        entrypoints,\n      })\n\n      processIssues(currentEntryIssues, key, writtenEndpoint, dev, logErrors)\n\n      break\n    }\n    case 'app-route': {\n      const key = getEntryKey('app', 'server', page)\n\n      const writtenEndpoint = await route.endpoint.writeToDisk()\n      hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n\n      const type = writtenEndpoint.type\n\n      await manifestLoader.loadAppPathsManifest(page)\n\n      if (type === 'edge') {\n        await manifestLoader.loadMiddlewareManifest(page, 'app')\n      } else {\n        manifestLoader.deleteMiddlewareManifest(key)\n      }\n\n      await manifestLoader.writeManifests({\n        devRewrites,\n        productionRewrites,\n        entrypoints,\n      })\n      processIssues(currentEntryIssues, key, writtenEndpoint, true, logErrors)\n\n      break\n    }\n    default: {\n      throw new Error(`unknown route type ${(route as any).type} for ${page}`)\n    }\n  }\n}\n\n/**\n * Maintains a mapping between entrypoins and the corresponding client asset paths.\n */\nexport class AssetMapper {\n  private entryMap: Map<EntryKey, Set<string>> = new Map()\n  private assetMap: Map<string, Set<EntryKey>> = new Map()\n\n  /**\n   * Overrides asset paths for a key and updates the mapping from path to key.\n   *\n   * @param key\n   * @param assetPaths asset paths relative to the .next directory\n   */\n  setPathsForKey(key: EntryKey, assetPaths: string[]): void {\n    this.delete(key)\n\n    const newAssetPaths = new Set(assetPaths)\n    this.entryMap.set(key, newAssetPaths)\n\n    for (const assetPath of newAssetPaths) {\n      let assetPathKeys = this.assetMap.get(assetPath)\n      if (!assetPathKeys) {\n        assetPathKeys = new Set()\n        this.assetMap.set(assetPath, assetPathKeys)\n      }\n\n      assetPathKeys!.add(key)\n    }\n  }\n\n  /**\n   * Deletes the key and any asset only referenced by this key.\n   *\n   * @param key\n   */\n  delete(key: EntryKey) {\n    for (const assetPath of this.getAssetPathsByKey(key)) {\n      const assetPathKeys = this.assetMap.get(assetPath)\n\n      assetPathKeys?.delete(key)\n\n      if (!assetPathKeys?.size) {\n        this.assetMap.delete(assetPath)\n      }\n    }\n\n    this.entryMap.delete(key)\n  }\n\n  getAssetPathsByKey(key: EntryKey): string[] {\n    return Array.from(this.entryMap.get(key) ?? [])\n  }\n\n  getKeysByAsset(path: string): EntryKey[] {\n    return Array.from(this.assetMap.get(path) ?? [])\n  }\n\n  keys(): IterableIterator<EntryKey> {\n    return this.entryMap.keys()\n  }\n}\n\nexport function hasEntrypointForKey(\n  entrypoints: Entrypoints,\n  key: EntryKey,\n  assetMapper: AssetMapper | undefined\n): boolean {\n  const { type, page } = splitEntryKey(key)\n\n  switch (type) {\n    case 'app':\n      return entrypoints.app.has(page)\n    case 'pages':\n      switch (page) {\n        case '_app':\n          return entrypoints.global.app != null\n        case '_document':\n          return entrypoints.global.document != null\n        case '_error':\n          return entrypoints.global.error != null\n        default:\n          return entrypoints.page.has(page)\n      }\n    case 'root':\n      switch (page) {\n        case 'middleware':\n          return entrypoints.global.middleware != null\n        case 'instrumentation':\n          return entrypoints.global.instrumentation != null\n        default:\n          return false\n      }\n    case 'assets':\n      if (!assetMapper) {\n        return false\n      }\n\n      return assetMapper\n        .getKeysByAsset(page)\n        .some((pageKey) =>\n          hasEntrypointForKey(entrypoints, pageKey, assetMapper)\n        )\n    default: {\n      // validation that we covered all cases, this should never run.\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const _: never = type\n      return false\n    }\n  }\n}\n\n// hooks only used by the dev server.\ntype HandleEntrypointsHooks = {\n  handleWrittenEndpoint: HandleWrittenEndpoint\n  propagateServerField: (\n    field: PropagateToWorkersField,\n    args: any\n  ) => Promise<void>\n  sendHmr: SendHmr\n  startBuilding: StartBuilding\n  subscribeToChanges: StartChangeSubscription\n  unsubscribeFromChanges: StopChangeSubscription\n  unsubscribeFromHmrEvents: (client: ws, id: string) => void\n}\n\ntype HandleEntrypointsDevOpts = {\n  assetMapper: AssetMapper\n  changeSubscriptions: ChangeSubscriptions\n  clients: Set<ws>\n  clientStates: ClientStateMap\n  serverFields: ServerFields\n\n  hooks: HandleEntrypointsHooks\n}\n\nexport async function handleEntrypoints({\n  entrypoints,\n\n  currentEntrypoints,\n\n  currentEntryIssues,\n  manifestLoader,\n  devRewrites,\n  productionRewrites,\n  logErrors,\n  dev,\n}: {\n  entrypoints: TurbopackResult<RawEntrypoints>\n\n  currentEntrypoints: Entrypoints\n\n  currentEntryIssues: EntryIssuesMap\n  manifestLoader: TurbopackManifestLoader\n  devRewrites: SetupOpts['fsChecker']['rewrites'] | undefined\n  productionRewrites: CustomRoutes['rewrites'] | undefined\n  logErrors: boolean\n\n  dev?: HandleEntrypointsDevOpts\n}) {\n  currentEntrypoints.global.app = entrypoints.pagesAppEndpoint\n  currentEntrypoints.global.document = entrypoints.pagesDocumentEndpoint\n  currentEntrypoints.global.error = entrypoints.pagesErrorEndpoint\n\n  currentEntrypoints.global.instrumentation = entrypoints.instrumentation\n\n  currentEntrypoints.page.clear()\n  currentEntrypoints.app.clear()\n\n  for (const [pathname, route] of entrypoints.routes) {\n    switch (route.type) {\n      case 'page':\n      case 'page-api':\n        currentEntrypoints.page.set(pathname, route)\n        break\n      case 'app-page': {\n        route.pages.forEach((page) => {\n          currentEntrypoints.app.set(page.originalName, {\n            type: 'app-page',\n            ...page,\n          })\n        })\n        break\n      }\n      case 'app-route': {\n        currentEntrypoints.app.set(route.originalName, route)\n        break\n      }\n      default:\n        Log.info(`skipping ${pathname} (${route.type})`)\n        break\n    }\n  }\n\n  if (dev) {\n    await handleEntrypointsDevCleanup({\n      currentEntryIssues,\n      currentEntrypoints,\n\n      ...dev,\n    })\n  }\n\n  const { middleware, instrumentation } = entrypoints\n\n  // We check for explicit true/false, since it's initialized to\n  // undefined during the first loop (middlewareChanges event is\n  // unnecessary during the first serve)\n  if (currentEntrypoints.global.middleware && !middleware) {\n    const key = getEntryKey('root', 'server', 'middleware')\n    // Went from middleware to no middleware\n    await dev?.hooks.unsubscribeFromChanges(key)\n    currentEntryIssues.delete(key)\n    dev?.hooks.sendHmr('middleware', {\n      event: HMR_ACTIONS_SENT_TO_BROWSER.MIDDLEWARE_CHANGES,\n    })\n  } else if (!currentEntrypoints.global.middleware && middleware) {\n    // Went from no middleware to middleware\n    dev?.hooks.sendHmr('middleware', {\n      event: HMR_ACTIONS_SENT_TO_BROWSER.MIDDLEWARE_CHANGES,\n    })\n  }\n\n  currentEntrypoints.global.middleware = middleware\n\n  if (instrumentation) {\n    const processInstrumentation = async (\n      name: string,\n      prop: 'nodeJs' | 'edge'\n    ) => {\n      const key = getEntryKey('root', 'server', name)\n\n      const writtenEndpoint = await instrumentation[prop].writeToDisk()\n      dev?.hooks.handleWrittenEndpoint(key, writtenEndpoint)\n      processIssues(currentEntryIssues, key, writtenEndpoint, false, logErrors)\n    }\n    await processInstrumentation('instrumentation.nodeJs', 'nodeJs')\n    await processInstrumentation('instrumentation.edge', 'edge')\n    await manifestLoader.loadMiddlewareManifest(\n      'instrumentation',\n      'instrumentation'\n    )\n    await manifestLoader.writeManifests({\n      devRewrites,\n      productionRewrites,\n      entrypoints: currentEntrypoints,\n    })\n\n    if (dev) {\n      dev.serverFields.actualInstrumentationHookFile = '/instrumentation'\n      await dev.hooks.propagateServerField(\n        'actualInstrumentationHookFile',\n        dev.serverFields.actualInstrumentationHookFile\n      )\n    }\n  } else {\n    if (dev) {\n      dev.serverFields.actualInstrumentationHookFile = undefined\n      await dev.hooks.propagateServerField(\n        'actualInstrumentationHookFile',\n        dev.serverFields.actualInstrumentationHookFile\n      )\n    }\n  }\n\n  if (middleware) {\n    const key = getEntryKey('root', 'server', 'middleware')\n\n    const endpoint = middleware.endpoint\n\n    async function processMiddleware() {\n      const writtenEndpoint = await endpoint.writeToDisk()\n      dev?.hooks.handleWrittenEndpoint(key, writtenEndpoint)\n      processIssues(currentEntryIssues, key, writtenEndpoint, false, logErrors)\n      await manifestLoader.loadMiddlewareManifest('middleware', 'middleware')\n      if (dev) {\n        dev.serverFields.middleware = {\n          match: null as any,\n          page: '/',\n          matchers:\n            manifestLoader.getMiddlewareManifest(key)?.middleware['/'].matchers,\n        }\n      }\n    }\n    await processMiddleware()\n\n    if (dev) {\n      dev?.hooks.subscribeToChanges(\n        key,\n        false,\n        endpoint,\n        async () => {\n          const finishBuilding = dev.hooks.startBuilding(\n            'middleware',\n            undefined,\n            true\n          )\n          await processMiddleware()\n          await dev.hooks.propagateServerField(\n            'actualMiddlewareFile',\n            dev.serverFields.actualMiddlewareFile\n          )\n          await dev.hooks.propagateServerField(\n            'middleware',\n            dev.serverFields.middleware\n          )\n          await manifestLoader.writeManifests({\n            devRewrites,\n            productionRewrites,\n            entrypoints: currentEntrypoints,\n          })\n\n          finishBuilding?.()\n          return { event: HMR_ACTIONS_SENT_TO_BROWSER.MIDDLEWARE_CHANGES }\n        },\n        () => {\n          return {\n            event: HMR_ACTIONS_SENT_TO_BROWSER.MIDDLEWARE_CHANGES,\n          }\n        }\n      )\n    }\n  } else {\n    manifestLoader.deleteMiddlewareManifest(\n      getEntryKey('root', 'server', 'middleware')\n    )\n    if (dev) {\n      dev.serverFields.actualMiddlewareFile = undefined\n      dev.serverFields.middleware = undefined\n    }\n  }\n\n  if (dev) {\n    await dev.hooks.propagateServerField(\n      'actualMiddlewareFile',\n      dev.serverFields.actualMiddlewareFile\n    )\n    await dev.hooks.propagateServerField(\n      'middleware',\n      dev.serverFields.middleware\n    )\n  }\n}\n\nasync function handleEntrypointsDevCleanup({\n  currentEntryIssues,\n  currentEntrypoints,\n\n  assetMapper,\n  changeSubscriptions,\n  clients,\n  clientStates,\n\n  hooks,\n}: {\n  currentEntrypoints: Entrypoints\n  currentEntryIssues: EntryIssuesMap\n} & HandleEntrypointsDevOpts) {\n  // this needs to be first as `hasEntrypointForKey` uses the `assetMapper`\n  for (const key of assetMapper.keys()) {\n    if (!hasEntrypointForKey(currentEntrypoints, key, assetMapper)) {\n      assetMapper.delete(key)\n    }\n  }\n\n  for (const key of changeSubscriptions.keys()) {\n    // middleware is handled separately\n    if (!hasEntrypointForKey(currentEntrypoints, key, assetMapper)) {\n      await hooks.unsubscribeFromChanges(key)\n    }\n  }\n\n  for (const [key] of currentEntryIssues) {\n    if (!hasEntrypointForKey(currentEntrypoints, key, assetMapper)) {\n      currentEntryIssues.delete(key)\n    }\n  }\n\n  for (const client of clients) {\n    const state = clientStates.get(client)\n    if (!state) {\n      continue\n    }\n\n    for (const key of state.clientIssues.keys()) {\n      if (!hasEntrypointForKey(currentEntrypoints, key, assetMapper)) {\n        state.clientIssues.delete(key)\n      }\n    }\n\n    for (const id of state.subscriptions.keys()) {\n      if (\n        !hasEntrypointForKey(\n          currentEntrypoints,\n          getEntryKey('assets', 'client', id),\n          assetMapper\n        )\n      ) {\n        hooks.unsubscribeFromHmrEvents(client, id)\n      }\n    }\n  }\n}\n\nexport async function handlePagesErrorRoute({\n  dev,\n  currentEntryIssues,\n  entrypoints,\n  manifestLoader,\n  devRewrites,\n  productionRewrites,\n  logErrors,\n\n  hooks,\n}: {\n  dev: boolean\n  currentEntryIssues: EntryIssuesMap\n  entrypoints: Entrypoints\n  manifestLoader: TurbopackManifestLoader\n  devRewrites: SetupOpts['fsChecker']['rewrites'] | undefined\n  productionRewrites: CustomRoutes['rewrites'] | undefined\n  logErrors: boolean\n\n  hooks?: HandleRouteTypeHooks // dev\n}) {\n  if (entrypoints.global.app) {\n    const key = getEntryKey('pages', 'server', '_app')\n\n    const writtenEndpoint = await entrypoints.global.app.writeToDisk()\n    hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n    if (dev) {\n      hooks?.subscribeToChanges(\n        key,\n        false,\n        entrypoints.global.app,\n        () => {\n          // There's a special case for this in `../client/page-bootstrap.ts`.\n          // https://github.com/vercel/next.js/blob/08d7a7e5189a835f5dcb82af026174e587575c0e/packages/next/src/client/page-bootstrap.ts#L69-L71\n          return { event: HMR_ACTIONS_SENT_TO_BROWSER.CLIENT_CHANGES }\n        },\n        () => {\n          return {\n            action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE,\n            data: '_app has changed (error route)',\n          }\n        }\n      )\n    }\n    processIssues(currentEntryIssues, key, writtenEndpoint, false, logErrors)\n  }\n  await manifestLoader.loadBuildManifest('_app')\n  await manifestLoader.loadPagesManifest('_app')\n  await manifestLoader.loadFontManifest('_app')\n\n  if (entrypoints.global.document) {\n    const key = getEntryKey('pages', 'server', '_document')\n\n    const writtenEndpoint = await entrypoints.global.document.writeToDisk()\n    hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n    if (dev) {\n      hooks?.subscribeToChanges(\n        key,\n        false,\n        entrypoints.global.document,\n        () => {\n          return {\n            action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE,\n            data: '_document has changed (error route)',\n          }\n        },\n        (e) => {\n          return {\n            action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE,\n            data: `error in _document subscription (error route): ${e}`,\n          }\n        }\n      )\n    }\n    processIssues(currentEntryIssues, key, writtenEndpoint, false, logErrors)\n  }\n  await manifestLoader.loadPagesManifest('_document')\n\n  if (entrypoints.global.error) {\n    const key = getEntryKey('pages', 'server', '_error')\n\n    const writtenEndpoint = await entrypoints.global.error.writeToDisk()\n    hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n    if (dev) {\n      hooks?.subscribeToChanges(\n        key,\n        false,\n        entrypoints.global.error,\n        () => {\n          // There's a special case for this in `../client/page-bootstrap.ts`.\n          // https://github.com/vercel/next.js/blob/08d7a7e5189a835f5dcb82af026174e587575c0e/packages/next/src/client/page-bootstrap.ts#L69-L71\n          return { event: HMR_ACTIONS_SENT_TO_BROWSER.CLIENT_CHANGES }\n        },\n        (e) => {\n          return {\n            action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE,\n            data: `error in _error subscription: ${e}`,\n          }\n        }\n      )\n    }\n    processIssues(currentEntryIssues, key, writtenEndpoint, false, logErrors)\n  }\n  await manifestLoader.loadBuildManifest('_error')\n  await manifestLoader.loadPagesManifest('_error')\n  await manifestLoader.loadFontManifest('_error')\n\n  await manifestLoader.writeManifests({\n    devRewrites,\n    productionRewrites,\n    entrypoints,\n  })\n}\n\nexport function removeRouteSuffix(route: string): string {\n  return route.replace(/\\/route$/, '')\n}\n\nexport function addRouteSuffix(route: string): string {\n  return route + '/route'\n}\n\nexport function addMetadataIdToRoute(route: string): string {\n  return route + '/[__metadata_id__]'\n}\n\n// Since turbopack will create app pages/route entries based on the structure,\n// which means the entry keys are based on file names.\n// But for special metadata conventions we'll change the page/pathname to a different path.\n// So we need this helper to map the new path back to original turbopack entry key.\nexport function normalizedPageToTurbopackStructureRoute(\n  route: string,\n  ext: string | false\n): string {\n  let entrypointKey = route\n  if (isMetadataRoute(entrypointKey)) {\n    entrypointKey = entrypointKey.endsWith('/route')\n      ? entrypointKey.slice(0, -'/route'.length)\n      : entrypointKey\n\n    if (ext) {\n      if (entrypointKey.endsWith('/[__metadata_id__]')) {\n        entrypointKey = entrypointKey.slice(0, -'/[__metadata_id__]'.length)\n      }\n      if (entrypointKey.endsWith('/sitemap.xml') && ext !== '.xml') {\n        // For dynamic sitemap route, remove the extension\n        entrypointKey = entrypointKey.slice(0, -'.xml'.length)\n      }\n    }\n    entrypointKey = entrypointKey + '/route'\n  }\n  return entrypointKey\n}\n\nexport function isPersistentCachingEnabled(\n  config: NextConfigComplete\n): boolean {\n  return config.experimental.turbo?.unstablePersistentCaching || false\n}\n"],"names":["AssetMapper","ModuleBuildError","TurbopackInternalError","addMetadataIdToRoute","addRouteSuffix","formatIssue","getTurbopackJsConfig","handleEntrypoints","handlePagesErrorRoute","handleRouteType","hasEntrypointForKey","isPersistentCachingEnabled","isRelevantWarning","isWellKnownError","msToNs","normalizedPageToTurbopackStructureRoute","printNonFatalIssue","processIssues","processTopLevelIssues","removeRouteSuffix","renderStyledStringToErrorAnsi","dir","nextConfig","jsConfig","loadJsConfig","compilerOptions","Error","name","constructor","cause","message","stack","issue","title","formattedTitle","includes","onceErrorSet","Set","shouldEmitOnceWarning","severity","stage","value","has","add","Log","warn","isNodeModulesIssue","filePath","match","startsWith","description","source","documentationLink","replace","formattedFilePath","replaceAll","range","start","line","column","content","isInternal","end","codeFrameColumns","require","forceColor","trim","getIssueKey","JSON","stringify","currentTopLevelIssues","result","clear","issues","issueKey","set","currentEntryIssues","key","throwIssue","logErrors","newIssues","Map","relevantIssues","formatted","error","size","join","string","decodeMagicIdentifiers","str","MAGIC_IDENTIFIER_REGEX","ident","magenta","decodeMagicIdentifier","e","type","bold","red","green","map","MILLISECONDS_IN_NANOSECOND","BigInt","ms","Math","floor","dev","page","pathname","route","entrypoints","manifestLoader","readyIds","devRewrites","productionRewrites","hooks","shouldCreateWebpackStats","process","env","TURBOPACK_STATS","clientKey","getEntryKey","serverKey","global","app","writtenEndpoint","writeToDisk","handleWrittenEndpoint","loadBuildManifest","loadPagesManifest","document","htmlEndpoint","loadMiddlewareManifest","deleteMiddlewareManifest","loadFontManifest","loadLoadableManifest","loadWebpackStats","writeManifests","subscribeToChanges","dataEndpoint","delete","event","HMR_ACTIONS_SENT_TO_BROWSER","SERVER_ONLY_CHANGES","pages","action","RELOAD_PAGE","data","CLIENT_CHANGES","endpoint","rscEndpoint","change","some","SERVER_COMPONENT_CHANGES","loadAppBuildManifest","loadAppPathsManifest","loadActionManifest","setPathsForKey","assetPaths","newAssetPaths","entryMap","assetPath","assetPathKeys","assetMap","get","getAssetPathsByKey","Array","from","getKeysByAsset","path","keys","assetMapper","splitEntryKey","middleware","instrumentation","pageKey","_","currentEntrypoints","pagesAppEndpoint","pagesDocumentEndpoint","pagesErrorEndpoint","routes","forEach","originalName","info","handleEntrypointsDevCleanup","unsubscribeFromChanges","sendHmr","MIDDLEWARE_CHANGES","processInstrumentation","prop","serverFields","actualInstrumentationHookFile","propagateServerField","undefined","processMiddleware","matchers","getMiddlewareManifest","finishBuilding","startBuilding","actualMiddlewareFile","changeSubscriptions","clients","clientStates","client","state","clientIssues","id","subscriptions","unsubscribeFromHmrEvents","ext","entrypointKey","isMetadataRoute","endsWith","slice","length","config","experimental","turbo","unstablePersistentCaching"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA8oBaA,WAAW,EAAA;eAAXA;;IA9lBAC,gBAAgB,EAAA;eAAhBA;;IAMAC,sBAAsB,EAAA;eAAtBA;;IAkmCGC,oBAAoB,EAAA;eAApBA;;IAJAC,cAAc,EAAA;eAAdA;;IArgCAC,WAAW,EAAA;eAAXA;;IAzGMC,oBAAoB,EAAA;eAApBA;;IA4uBAC,iBAAiB,EAAA;eAAjBA;;IA4QAC,qBAAqB,EAAA;eAArBA;;IAhrBAC,eAAe,EAAA;eAAfA;;IA2VNC,mBAAmB,EAAA;eAAnBA;;IA+eAC,0BAA0B,EAAA;eAA1BA;;IA7iCAC,iBAAiB,EAAA;eAAjBA;;IAxEAC,gBAAgB,EAAA;eAAhBA;;IAwPAC,MAAM,EAAA;eAANA;;IAq2BAC,uCAAuC,EAAA;eAAvCA;;IAhjCAC,kBAAkB,EAAA;eAAlBA;;IAqIAC,aAAa,EAAA;eAAbA;;IAZAC,qBAAqB,EAAA;eAArBA;;IAu6BAC,iBAAiB,EAAA;eAAjBA;;IAl3BAC,6BAA6B,EAAA;eAA7BA;;;qEA7RS;iCAiBlB;4BACmC;kCAInC;6DACc;0BAQd;mEAEgB;iCACS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGzB,eAAed,qBACpBe,GAAW,EACXC,UAA8B;IAE9B,MAAM,EAAEC,QAAQ,EAAE,GAAG,MAAMC,CAAAA,GAAAA,cAAAA,OAAY,EAACH,KAAKC;IAC7C,OAAOC,YAAY;QAAEE,iBAAiB,CAAC;IAAE;AAC3C;AAIO,MAAMxB,yBAAyByB;;QAA/B,KAAA,IAAA,OAAA,IAAA,CACLC,IAAAA,GAAO;;AACT;AAIO,MAAMzB,+BAA+BwB;IAG1CE,YAAYC,KAAY,CAAE;QACxB,KAAK,CAACA,MAAMC,OAAO,GAAA,IAAA,CAHrBH,IAAAA,GAAO;QAIL,IAAI,CAACI,KAAK,GAAGF,MAAME,KAAK;IAC1B;AACF;AAMO,SAASlB,iBAAiBmB,KAAY;IAC3C,MAAM,EAAEC,KAAK,EAAE,GAAGD;IAClB,MAAME,iBAAiBd,8BAA8Ba;IACrD,mCAAmC;IACnC,IACEC,eAAeC,QAAQ,CAAC,uBACxBD,eAAeC,QAAQ,CAAC,wBACxB;QACA,OAAO;IACT;IAEA,OAAO;AACT;AAEA,MAAMC,eAAe,IAAIC;AACzB;;;;;CAKC,GACD,SAASC,sBAAsBN,KAAY;IACzC,MAAM,EAAEO,QAAQ,EAAEN,KAAK,EAAEO,KAAK,EAAE,GAAGR;IACnC,IAAIO,aAAa,aAAaN,MAAMQ,KAAK,KAAK,8BAA8B;QAC1E,IAAIL,aAAaM,GAAG,CAACV,QAAQ;YAC3B,OAAO;QACT;QACAI,aAAaO,GAAG,CAACX;IACnB;IACA,IACEO,aAAa,aACbC,UAAU,YACVpB,8BAA8BY,MAAMC,KAAK,EAAEE,QAAQ,CAAC,sBACpD;QACA,IAAIC,aAAaM,GAAG,CAACV,QAAQ;YAC3B,OAAO;QACT;QACAI,aAAaO,GAAG,CAACX;IACnB;IAEA,OAAO;AACT;AAIO,SAAShB,mBAAmBgB,KAAY;IAC7C,IAAIpB,kBAAkBoB,UAAUM,sBAAsBN,QAAQ;QAC5DY,KAAIC,IAAI,CAACxC,YAAY2B;IACvB;AACF;AAEA,SAASc,mBAAmBd,KAAY;IACtC,IAAIA,MAAMO,QAAQ,KAAK,aAAaP,MAAMQ,KAAK,KAAK,UAAU;QAC5D,qCAAqC;QACrC,2EAA2E;QAC3E,IACEpB,8BAA8BY,MAAMC,KAAK,EAAEE,QAAQ,CAAC,sBACpD;YACA,OAAO;QACT;IACF;IAEA,OACEH,MAAMO,QAAQ,KAAK,aAClBP,CAAAA,MAAMe,QAAQ,CAACC,KAAK,CAAC,8CAA8C,QAClE,0FAA0F;IAC1F,uBAAuB;IACvB,+DAA+D;IAC/DhB,MAAMe,QAAQ,CAACE,UAAU,CAAC,2BAA0B;AAE1D;AAEO,SAASrC,kBAAkBoB,KAAY;IAC5C,OAAOA,MAAMO,QAAQ,KAAK,aAAa,CAACO,mBAAmBd;AAC7D;AAEO,SAAS3B,YAAY2B,KAAY;IACtC,MAAM,EAAEe,QAAQ,EAAEd,KAAK,EAAEiB,WAAW,EAAEC,MAAM,EAAE,GAAGnB;IACjD,IAAI,EAAEoB,iBAAiB,EAAE,GAAGpB;IAC5B,IAAIE,iBAAiBd,8BAA8Ba,OAAOoB,OAAO,CAC/D,OACA;IAGF,0CAA0C;IAC1C,+DAA+D;IAC/D,IAAInB,eAAeC,QAAQ,CAAC,qBAAqB;QAC/C,gCAAgC;QAChC,2CAA2C;QAC3CiB,oBAAoB;IACtB;IAEA,IAAIE,oBAAoBP,SACrBM,OAAO,CAAC,cAAc,MACtBE,UAAU,CAAC,OAAO,KAClBF,OAAO,CAAC,WAAW;IAEtB,IAAIvB,UAAU;IAEd,IAAIqB,UAAUA,OAAOK,KAAK,EAAE;QAC1B,MAAM,EAAEC,KAAK,EAAE,GAAGN,OAAOK,KAAK;QAC9B1B,UAAU,GAAGwB,kBAAkB,CAAC,EAAEG,MAAMC,IAAI,GAAG,EAAE,CAAC,EAChDD,MAAME,MAAM,GAAG,EAChB,EAAE,EAAEzB,gBAAgB;IACvB,OAAO,IAAIoB,mBAAmB;QAC5BxB,UAAU,GAAGwB,kBAAkB,EAAE,EAAEpB,gBAAgB;IACrD,OAAO;QACLJ,UAAUI;IACZ;IACAJ,WAAW;IAEX,IACEqB,CAAAA,UAAAA,OAAAA,KAAAA,IAAAA,OAAQK,KAAK,KACbL,OAAOA,MAAM,CAACS,OAAO,IACrB,4EAA4E;IAC5E,CAACC,CAAAA,GAAAA,YAAAA,OAAU,EAACd,WACZ;QACA,MAAM,EAAEU,KAAK,EAAEK,GAAG,EAAE,GAAGX,OAAOK,KAAK;QACnC,MAAM,EAAEO,gBAAgB,EAAE,GAAGC,QAAQ;QAErClC,WACEiC,iBACEZ,OAAOA,MAAM,CAACS,OAAO,EACrB;YACEH,OAAO;gBACLC,MAAMD,MAAMC,IAAI,GAAG;gBACnBC,QAAQF,MAAME,MAAM,GAAG;YACzB;YACAG,KAAK;gBACHJ,MAAMI,IAAIJ,IAAI,GAAG;gBACjBC,QAAQG,IAAIH,MAAM,GAAG;YACvB;QACF,GACA;YAAEM,YAAY;QAAK,GACnBC,IAAI,KAAK;IACf;IAEA,IAAIhB,aAAa;QACfpB,WAAWV,8BAA8B8B,eAAe;IAC1D;IAEA,yEAAyE;IACzE,gBAAgB;IAChB,8DAA8D;IAC9D,IAAI;IAEJ,wCAAwC;IAExC,IAAIE,mBAAmB;QACrBtB,WAAWsB,oBAAoB;IACjC;IAEA,OAAOtB;AACT;AAOA,SAASqC,YAAYnC,KAAY;IAC/B,OAAO,GAAGA,MAAMO,QAAQ,CAAC,CAAC,EAAEP,MAAMe,QAAQ,CAAC,CAAC,EAAEqB,KAAKC,SAAS,CAC1DrC,MAAMC,KAAK,EACX,CAAC,EAAEmC,KAAKC,SAAS,CAACrC,MAAMkB,WAAW,GAAG;AAC1C;AAEO,SAAShC,sBACdoD,qBAAwC,EACxCC,MAAuB;IAEvBD,sBAAsBE,KAAK;IAE3B,KAAK,MAAMxC,SAASuC,OAAOE,MAAM,CAAE;QACjC,MAAMC,WAAWP,YAAYnC;QAC7BsC,sBAAsBK,GAAG,CAACD,UAAU1C;IACtC;AACF;AAEO,SAASf,cACd2D,kBAAkC,EAClCC,GAAa,EACbN,MAAuB,EACvBO,UAAmB,EACnBC,SAAkB;IAElB,MAAMC,YAAY,IAAIC;IACtBL,mBAAmBD,GAAG,CAACE,KAAKG;IAE5B,MAAME,iBAAiB,IAAI7C;IAE3B,KAAK,MAAML,SAASuC,OAAOE,MAAM,CAAE;QACjC,IACEzC,MAAMO,QAAQ,KAAK,WACnBP,MAAMO,QAAQ,KAAK,WACnBP,MAAMO,QAAQ,KAAK,WAEnB;QAEF,MAAMmC,WAAWP,YAAYnC;QAC7BgD,UAAUL,GAAG,CAACD,UAAU1C;QAExB,IAAIA,MAAMO,QAAQ,KAAK,WAAW;YAChC,IAAIuC,YAAY;gBACd,MAAMK,YAAY9E,YAAY2B;gBAC9BkD,eAAevC,GAAG,CAACwC;YACrB,OAEK,IAAIJ,aAAalE,iBAAiBmB,QAAQ;gBAC7C,MAAMmD,YAAY9E,YAAY2B;gBAC9BY,KAAIwC,KAAK,CAACD;YACZ;QACF;IACF;IAEA,IAAID,eAAeG,IAAI,IAAIP,YAAY;QACrC,MAAM,IAAI7E,iBAAiB;eAAIiF;SAAe,CAACI,IAAI,CAAC;IACtD;AACF;AAEO,SAASlE,8BAA8BmE,MAAoB;IAChE,SAASC,uBAAuBC,GAAW;QACzC,OAAOA,IAAIlC,UAAU,CAACmC,iBAAAA,sBAAsB,EAAE,CAACC;YAC7C,IAAI;gBACF,OAAOC,CAAAA,GAAAA,YAAAA,OAAO,EAAC,CAAC,CAAC,EAAEC,CAAAA,GAAAA,iBAAAA,qBAAqB,EAACF,OAAO,CAAC,CAAC;YACpD,EAAE,OAAOG,GAAG;gBACV,OAAOF,CAAAA,GAAAA,YAAAA,OAAO,EAAC,CAAC,CAAC,EAAED,MAAM,mBAAmB,EAAEG,EAAE,EAAE,CAAC;YACrD;QACF;IACF;IAEA,OAAQP,OAAOQ,IAAI;QACjB,KAAK;YACH,OAAOP,uBAAuBD,OAAO9C,KAAK;QAC5C,KAAK;YACH,OAAOuD,CAAAA,GAAAA,YAAAA,IAAI,EAACC,CAAAA,GAAAA,YAAAA,GAAG,EAACT,uBAAuBD,OAAO9C,KAAK;QACrD,KAAK;YACH,OAAOyD,CAAAA,GAAAA,YAAAA,KAAK,EAACV,uBAAuBD,OAAO9C,KAAK;QAClD,KAAK;YACH,OAAO8C,OAAO9C,KAAK,CAAC0D,GAAG,CAAC/E,+BAA+BkE,IAAI,CAAC;QAC9D,KAAK;YACH,OAAOC,OAAO9C,KAAK,CAAC0D,GAAG,CAAC/E,+BAA+BkE,IAAI,CAAC;QAC9D;YACE,MAAM,IAAI5D,MAAM,6BAA6B6D;IACjD;AACF;AAEA,MAAMa,6BAA6BC,OAAO;AAEnC,SAASvF,OAAOwF,EAAU;IAC/B,OAAOD,OAAOE,KAAKC,KAAK,CAACF,OAAOF;AAClC;AAiDO,eAAe3F,gBAAgB,EACpCgG,GAAG,EACHC,IAAI,EACJC,QAAQ,EACRC,KAAK,EACLhC,kBAAkB,EAClBiC,WAAW,EACXC,cAAc,EACdC,QAAQ,EACRC,WAAW,EACXC,kBAAkB,EAClBC,KAAK,EACLnC,SAAS,EAiBV;IACC,MAAMoC,2BAA2BC,QAAQC,GAAG,CAACC,eAAe,IAAI;IAEhE,OAAQV,MAAMb,IAAI;QAChB,KAAK;YAAQ;gBACX,MAAMwB,YAAYC,CAAAA,GAAAA,UAAAA,WAAW,EAAC,SAAS,UAAUd;gBACjD,MAAMe,YAAYD,CAAAA,GAAAA,UAAAA,WAAW,EAAC,SAAS,UAAUd;gBAEjD,IAAI;oBACF,IAAIG,YAAYa,MAAM,CAACC,GAAG,EAAE;wBAC1B,MAAM9C,MAAM2C,CAAAA,GAAAA,UAAAA,WAAW,EAAC,SAAS,UAAU;wBAE3C,MAAMI,kBAAkB,MAAMf,YAAYa,MAAM,CAACC,GAAG,CAACE,WAAW;wBAChEX,SAAAA,OAAAA,KAAAA,IAAAA,MAAOY,qBAAqB,CAACjD,KAAK+C;wBAClC3G,cACE2D,oBACAC,KACA+C,iBACA,OACA7C;oBAEJ;oBACA,MAAM+B,eAAeiB,iBAAiB,CAAC;oBACvC,MAAMjB,eAAekB,iBAAiB,CAAC;oBAEvC,IAAInB,YAAYa,MAAM,CAACO,QAAQ,EAAE;wBAC/B,MAAMpD,MAAM2C,CAAAA,GAAAA,UAAAA,WAAW,EAAC,SAAS,UAAU;wBAE3C,MAAMI,kBACJ,MAAMf,YAAYa,MAAM,CAACO,QAAQ,CAACJ,WAAW;wBAC/CX,SAAAA,OAAAA,KAAAA,IAAAA,MAAOY,qBAAqB,CAACjD,KAAK+C;wBAClC3G,cACE2D,oBACAC,KACA+C,iBACA,OACA7C;oBAEJ;oBACA,MAAM+B,eAAekB,iBAAiB,CAAC;oBAEvC,MAAMJ,kBAAkB,MAAMhB,MAAMsB,YAAY,CAACL,WAAW;oBAC5DX,SAAAA,OAAAA,KAAAA,IAAAA,MAAOY,qBAAqB,CAACL,WAAWG;oBAExC,MAAM7B,OAAO6B,mBAAAA,OAAAA,KAAAA,IAAAA,gBAAiB7B,IAAI;oBAElC,MAAMe,eAAeiB,iBAAiB,CAACrB;oBACvC,MAAMI,eAAekB,iBAAiB,CAACtB;oBACvC,IAAIX,SAAS,QAAQ;wBACnB,MAAMe,eAAeqB,sBAAsB,CAACzB,MAAM;oBACpD,OAAO;wBACLI,eAAesB,wBAAwB,CAACX;oBAC1C;oBACA,MAAMX,eAAeuB,gBAAgB,CAAC,SAAS;oBAC/C,MAAMvB,eAAeuB,gBAAgB,CAAC3B,MAAM;oBAC5C,MAAMI,eAAewB,oBAAoB,CAAC5B,MAAM;oBAEhD,IAAIS,0BAA0B;wBAC5B,MAAML,eAAeyB,gBAAgB,CAAC7B,MAAM;oBAC9C;oBAEA,MAAMI,eAAe0B,cAAc,CAAC;wBAClCxB;wBACAC;wBACAJ;oBACF;oBAEA5F,cACE2D,oBACA6C,WACAG,iBACA,OACA7C;gBAEJ,SAAU;oBACR,IAAI0B,KAAK;wBACP,wEAAwE;wBACxE,gEAAgE;wBAChES,SAAAA,OAAAA,KAAAA,IAAAA,MAAOuB,kBAAkB,CACvBhB,WACA,OACAb,MAAM8B,YAAY,EAClB;4BACE,oCAAoC;4BACpC3B,YAAAA,OAAAA,KAAAA,IAAAA,SAAU4B,MAAM,CAAChC;4BACjB,OAAO;gCACLiC,OAAOC,kBAAAA,2BAA2B,CAACC,mBAAmB;gCACtDC,OAAO;oCAACrC;iCAAK;4BACf;wBACF,GACA,CAACZ;4BACC,OAAO;gCACLkD,QAAQH,kBAAAA,2BAA2B,CAACI,WAAW;gCAC/CC,MAAM,CAAC,SAAS,EAAExC,KAAK,oBAAoB,EAAEZ,GAAG;4BAClD;wBACF;wBAEFoB,SAAAA,OAAAA,KAAAA,IAAAA,MAAOuB,kBAAkB,CACvBlB,WACA,OACAX,MAAMsB,YAAY,EAClB;4BACE,OAAO;gCACLU,OAAOC,kBAAAA,2BAA2B,CAACM,cAAc;4BACnD;wBACF,GACA,CAACrD;4BACC,OAAO;gCACLkD,QAAQH,kBAAAA,2BAA2B,CAACI,WAAW;gCAC/CC,MAAM,CAAC,SAAS,EAAExC,KAAK,oBAAoB,EAAEZ,GAAG;4BAClD;wBACF;wBAEF,IAAIe,YAAYa,MAAM,CAACO,QAAQ,EAAE;4BAC/Bf,SAAAA,OAAAA,KAAAA,IAAAA,MAAOuB,kBAAkB,CACvBjB,CAAAA,GAAAA,UAAAA,WAAW,EAAC,SAAS,UAAU,cAC/B,OACAX,YAAYa,MAAM,CAACO,QAAQ,EAC3B;gCACE,OAAO;oCACLe,QAAQH,kBAAAA,2BAA2B,CAACI,WAAW;oCAC/CC,MAAM;gCACR;4BACF,GACA,CAACpD;gCACC,OAAO;oCACLkD,QAAQH,kBAAAA,2BAA2B,CAACI,WAAW;oCAC/CC,MAAM,CAAC,8CAA8C,EAAEpD,GAAG;gCAC5D;4BACF;wBAEJ;oBACF;gBACF;gBAEA;YACF;QACA,KAAK;YAAY;gBACf,MAAMjB,MAAM2C,CAAAA,GAAAA,UAAAA,WAAW,EAAC,SAAS,UAAUd;gBAE3C,MAAMkB,kBAAkB,MAAMhB,MAAMwC,QAAQ,CAACvB,WAAW;gBACxDX,SAAAA,OAAAA,KAAAA,IAAAA,MAAOY,qBAAqB,CAACjD,KAAK+C;gBAElC,MAAM7B,OAAO6B,gBAAgB7B,IAAI;gBAEjC,MAAMe,eAAekB,iBAAiB,CAACtB;gBACvC,IAAIX,SAAS,QAAQ;oBACnB,MAAMe,eAAeqB,sBAAsB,CAACzB,MAAM;gBACpD,OAAO;oBACLI,eAAesB,wBAAwB,CAACvD;gBAC1C;gBACA,MAAMiC,eAAewB,oBAAoB,CAAC5B,MAAM;gBAEhD,MAAMI,eAAe0B,cAAc,CAAC;oBAClCxB;oBACAC;oBACAJ;gBACF;gBAEA5F,cAAc2D,oBAAoBC,KAAK+C,iBAAiB,MAAM7C;gBAE9D;YACF;QACA,KAAK;YAAY;gBACf,MAAMF,MAAM2C,CAAAA,GAAAA,UAAAA,WAAW,EAAC,OAAO,UAAUd;gBAEzC,MAAMkB,kBAAkB,MAAMhB,MAAMsB,YAAY,CAACL,WAAW;gBAC5DX,SAAAA,OAAAA,KAAAA,IAAAA,MAAOY,qBAAqB,CAACjD,KAAK+C;gBAElC,IAAInB,KAAK;oBACP,wEAAwE;oBACxE,gEAAgE;oBAChES,SAAAA,OAAAA,KAAAA,IAAAA,MAAOuB,kBAAkB,CACvB5D,KACA,MACA+B,MAAMyC,WAAW,EACjB,CAACC;wBACC,IAAIA,OAAO7E,MAAM,CAAC8E,IAAI,CAAC,CAACvH,QAAUA,MAAMO,QAAQ,KAAK,UAAU;4BAC7D,qCAAqC;4BACrC,yDAAyD;4BACzD;wBACF;wBACA,oCAAoC;wBACpCwE,YAAAA,OAAAA,KAAAA,IAAAA,SAAU4B,MAAM,CAAChC;wBACjB,OAAO;4BACLqC,QAAQH,kBAAAA,2BAA2B,CAACW,wBAAwB;wBAC9D;oBACF,GACA;wBACE,OAAO;4BACLR,QAAQH,kBAAAA,2BAA2B,CAACW,wBAAwB;wBAC9D;oBACF;gBAEJ;gBAEA,MAAMzD,OAAO6B,gBAAgB7B,IAAI;gBAEjC,IAAIA,SAAS,QAAQ;oBACnB,MAAMe,eAAeqB,sBAAsB,CAACzB,MAAM;gBACpD,OAAO;oBACLI,eAAesB,wBAAwB,CAACvD;gBAC1C;gBAEA,MAAMiC,eAAe2C,oBAAoB,CAAC/C;gBAC1C,MAAMI,eAAeiB,iBAAiB,CAACrB,MAAM;gBAC7C,MAAMI,eAAe4C,oBAAoB,CAAChD;gBAC1C,MAAMI,eAAe6C,kBAAkB,CAACjD;gBACxC,MAAMI,eAAewB,oBAAoB,CAAC5B,MAAM;gBAChD,MAAMI,eAAeuB,gBAAgB,CAAC3B,MAAM;gBAE5C,IAAIS,0BAA0B;oBAC5B,MAAML,eAAeyB,gBAAgB,CAAC7B,MAAM;gBAC9C;gBAEA,MAAMI,eAAe0B,cAAc,CAAC;oBAClCxB;oBACAC;oBACAJ;gBACF;gBAEA5F,cAAc2D,oBAAoBC,KAAK+C,iBAAiBnB,KAAK1B;gBAE7D;YACF;QACA,KAAK;YAAa;gBAChB,MAAMF,MAAM2C,CAAAA,GAAAA,UAAAA,WAAW,EAAC,OAAO,UAAUd;gBAEzC,MAAMkB,kBAAkB,MAAMhB,MAAMwC,QAAQ,CAACvB,WAAW;gBACxDX,SAAAA,OAAAA,KAAAA,IAAAA,MAAOY,qBAAqB,CAACjD,KAAK+C;gBAElC,MAAM7B,OAAO6B,gBAAgB7B,IAAI;gBAEjC,MAAMe,eAAe4C,oBAAoB,CAAChD;gBAE1C,IAAIX,SAAS,QAAQ;oBACnB,MAAMe,eAAeqB,sBAAsB,CAACzB,MAAM;gBACpD,OAAO;oBACLI,eAAesB,wBAAwB,CAACvD;gBAC1C;gBAEA,MAAMiC,eAAe0B,cAAc,CAAC;oBAClCxB;oBACAC;oBACAJ;gBACF;gBACA5F,cAAc2D,oBAAoBC,KAAK+C,iBAAiB,MAAM7C;gBAE9D;YACF;QACA;YAAS;gBACP,MAAM,IAAIrD,MAAM,CAAC,mBAAmB,EAAGkF,MAAcb,IAAI,CAAC,KAAK,EAAEW,MAAM;YACzE;IACF;AACF;AAKO,MAAM1G;IAIX;;;;;GAKC,GACD4J,eAAe/E,GAAa,EAAEgF,UAAoB,EAAQ;QACxD,IAAI,CAAClB,MAAM,CAAC9D;QAEZ,MAAMiF,gBAAgB,IAAIzH,IAAIwH;QAC9B,IAAI,CAACE,QAAQ,CAACpF,GAAG,CAACE,KAAKiF;QAEvB,KAAK,MAAME,aAAaF,cAAe;YACrC,IAAIG,gBAAgB,IAAI,CAACC,QAAQ,CAACC,GAAG,CAACH;YACtC,IAAI,CAACC,eAAe;gBAClBA,gBAAgB,IAAI5H;gBACpB,IAAI,CAAC6H,QAAQ,CAACvF,GAAG,CAACqF,WAAWC;YAC/B;YAEAA,cAAetH,GAAG,CAACkC;QACrB;IACF;IAEA;;;;GAIC,GACD8D,OAAO9D,GAAa,EAAE;QACpB,KAAK,MAAMmF,aAAa,IAAI,CAACI,kBAAkB,CAACvF,KAAM;YACpD,MAAMoF,gBAAgB,IAAI,CAACC,QAAQ,CAACC,GAAG,CAACH;YAExCC,iBAAAA,OAAAA,KAAAA,IAAAA,cAAetB,MAAM,CAAC9D;YAEtB,IAAI,CAAA,CAACoF,iBAAAA,OAAAA,KAAAA,IAAAA,cAAe5E,IAAI,GAAE;gBACxB,IAAI,CAAC6E,QAAQ,CAACvB,MAAM,CAACqB;YACvB;QACF;QAEA,IAAI,CAACD,QAAQ,CAACpB,MAAM,CAAC9D;IACvB;IAEAuF,mBAAmBvF,GAAa,EAAY;QAC1C,OAAOwF,MAAMC,IAAI,CAAC,IAAI,CAACP,QAAQ,CAACI,GAAG,CAACtF,QAAQ,EAAE;IAChD;IAEA0F,eAAeC,IAAY,EAAc;QACvC,OAAOH,MAAMC,IAAI,CAAC,IAAI,CAACJ,QAAQ,CAACC,GAAG,CAACK,SAAS,EAAE;IACjD;IAEAC,OAAmC;QACjC,OAAO,IAAI,CAACV,QAAQ,CAACU,IAAI;IAC3B;;aAvDQV,QAAAA,GAAuC,IAAI9E;aAC3CiF,QAAAA,GAAuC,IAAIjF;;AAuDrD;AAEO,SAASvE,oBACdmG,WAAwB,EACxBhC,GAAa,EACb6F,WAAoC;IAEpC,MAAM,EAAE3E,IAAI,EAAEW,IAAI,EAAE,GAAGiE,CAAAA,GAAAA,UAAAA,aAAa,EAAC9F;IAErC,OAAQkB;QACN,KAAK;YACH,OAAOc,YAAYc,GAAG,CAACjF,GAAG,CAACgE;QAC7B,KAAK;YACH,OAAQA;gBACN,KAAK;oBACH,OAAOG,YAAYa,MAAM,CAACC,GAAG,IAAI;gBACnC,KAAK;oBACH,OAAOd,YAAYa,MAAM,CAACO,QAAQ,IAAI;gBACxC,KAAK;oBACH,OAAOpB,YAAYa,MAAM,CAACtC,KAAK,IAAI;gBACrC;oBACE,OAAOyB,YAAYH,IAAI,CAAChE,GAAG,CAACgE;YAChC;QACF,KAAK;YACH,OAAQA;gBACN,KAAK;oBACH,OAAOG,YAAYa,MAAM,CAACkD,UAAU,IAAI;gBAC1C,KAAK;oBACH,OAAO/D,YAAYa,MAAM,CAACmD,eAAe,IAAI;gBAC/C;oBACE,OAAO;YACX;QACF,KAAK;YACH,IAAI,CAACH,aAAa;gBAChB,OAAO;YACT;YAEA,OAAOA,YACJH,cAAc,CAAC7D,MACf6C,IAAI,CAAC,CAACuB,UACLpK,oBAAoBmG,aAAaiE,SAASJ;QAEhD;YAAS;gBACP,+DAA+D;gBAC/D,6DAA6D;gBAC7D,MAAMK,IAAWhF;gBACjB,OAAO;YACT;IACF;AACF;AA0BO,eAAexF,kBAAkB,EACtCsG,WAAW,EAEXmE,kBAAkB,EAElBpG,kBAAkB,EAClBkC,cAAc,EACdE,WAAW,EACXC,kBAAkB,EAClBlC,SAAS,EACT0B,GAAG,EAaJ;IACCuE,mBAAmBtD,MAAM,CAACC,GAAG,GAAGd,YAAYoE,gBAAgB;IAC5DD,mBAAmBtD,MAAM,CAACO,QAAQ,GAAGpB,YAAYqE,qBAAqB;IACtEF,mBAAmBtD,MAAM,CAACtC,KAAK,GAAGyB,YAAYsE,kBAAkB;IAEhEH,mBAAmBtD,MAAM,CAACmD,eAAe,GAAGhE,YAAYgE,eAAe;IAEvEG,mBAAmBtE,IAAI,CAAClC,KAAK;IAC7BwG,mBAAmBrD,GAAG,CAACnD,KAAK;IAE5B,KAAK,MAAM,CAACmC,UAAUC,MAAM,IAAIC,YAAYuE,MAAM,CAAE;QAClD,OAAQxE,MAAMb,IAAI;YAChB,KAAK;YACL,KAAK;gBACHiF,mBAAmBtE,IAAI,CAAC/B,GAAG,CAACgC,UAAUC;gBACtC;YACF,KAAK;gBAAY;oBACfA,MAAMmC,KAAK,CAACsC,OAAO,CAAC,CAAC3E;wBACnBsE,mBAAmBrD,GAAG,CAAChD,GAAG,CAAC+B,KAAK4E,YAAY,EAAE;4BAC5CvF,MAAM;4BACN,GAAGW,IAAI;wBACT;oBACF;oBACA;gBACF;YACA,KAAK;gBAAa;oBAChBsE,mBAAmBrD,GAAG,CAAChD,GAAG,CAACiC,MAAM0E,YAAY,EAAE1E;oBAC/C;gBACF;YACA;gBACEhE,KAAI2I,IAAI,CAAC,CAAC,SAAS,EAAE5E,SAAS,EAAE,EAAEC,MAAMb,IAAI,CAAC,CAAC,CAAC;gBAC/C;QACJ;IACF;IAEA,IAAIU,KAAK;QACP,MAAM+E,4BAA4B;YAChC5G;YACAoG;YAEA,GAAGvE,GAAG;QACR;IACF;IAEA,MAAM,EAAEmE,UAAU,EAAEC,eAAe,EAAE,GAAGhE;IAExC,8DAA8D;IAC9D,8DAA8D;IAC9D,sCAAsC;IACtC,IAAImE,mBAAmBtD,MAAM,CAACkD,UAAU,IAAI,CAACA,YAAY;QACvD,MAAM/F,MAAM2C,CAAAA,GAAAA,UAAAA,WAAW,EAAC,QAAQ,UAAU;QAC1C,wCAAwC;QACxC,MAAA,CAAMf,OAAAA,OAAAA,KAAAA,IAAAA,IAAKS,KAAK,CAACuE,sBAAsB,CAAC5G,IAAAA;QACxCD,mBAAmB+D,MAAM,CAAC9D;QAC1B4B,OAAAA,OAAAA,KAAAA,IAAAA,IAAKS,KAAK,CAACwE,OAAO,CAAC,cAAc;YAC/B9C,OAAOC,kBAAAA,2BAA2B,CAAC8C,kBAAkB;QACvD;IACF,OAAO,IAAI,CAACX,mBAAmBtD,MAAM,CAACkD,UAAU,IAAIA,YAAY;QAC9D,wCAAwC;QACxCnE,OAAAA,OAAAA,KAAAA,IAAAA,IAAKS,KAAK,CAACwE,OAAO,CAAC,cAAc;YAC/B9C,OAAOC,kBAAAA,2BAA2B,CAAC8C,kBAAkB;QACvD;IACF;IAEAX,mBAAmBtD,MAAM,CAACkD,UAAU,GAAGA;IAEvC,IAAIC,iBAAiB;QACnB,MAAMe,yBAAyB,OAC7BjK,MACAkK;YAEA,MAAMhH,MAAM2C,CAAAA,GAAAA,UAAAA,WAAW,EAAC,QAAQ,UAAU7F;YAE1C,MAAMiG,kBAAkB,MAAMiD,eAAe,CAACgB,KAAK,CAAChE,WAAW;YAC/DpB,OAAAA,OAAAA,KAAAA,IAAAA,IAAKS,KAAK,CAACY,qBAAqB,CAACjD,KAAK+C;YACtC3G,cAAc2D,oBAAoBC,KAAK+C,iBAAiB,OAAO7C;QACjE;QACA,MAAM6G,uBAAuB,0BAA0B;QACvD,MAAMA,uBAAuB,wBAAwB;QACrD,MAAM9E,eAAeqB,sBAAsB,CACzC,mBACA;QAEF,MAAMrB,eAAe0B,cAAc,CAAC;YAClCxB;YACAC;YACAJ,aAAamE;QACf;QAEA,IAAIvE,KAAK;YACPA,IAAIqF,YAAY,CAACC,6BAA6B,GAAG;YACjD,MAAMtF,IAAIS,KAAK,CAAC8E,oBAAoB,CAClC,iCACAvF,IAAIqF,YAAY,CAACC,6BAA6B;QAElD;IACF,OAAO;QACL,IAAItF,KAAK;YACPA,IAAIqF,YAAY,CAACC,6BAA6B,GAAGE;YACjD,MAAMxF,IAAIS,KAAK,CAAC8E,oBAAoB,CAClC,iCACAvF,IAAIqF,YAAY,CAACC,6BAA6B;QAElD;IACF;IAEA,IAAInB,YAAY;QACd,MAAM/F,MAAM2C,CAAAA,GAAAA,UAAAA,WAAW,EAAC,QAAQ,UAAU;QAE1C,MAAM4B,WAAWwB,WAAWxB,QAAQ;QAEpC,eAAe8C;YACb,MAAMtE,kBAAkB,MAAMwB,SAASvB,WAAW;YAClDpB,OAAAA,OAAAA,KAAAA,IAAAA,IAAKS,KAAK,CAACY,qBAAqB,CAACjD,KAAK+C;YACtC3G,cAAc2D,oBAAoBC,KAAK+C,iBAAiB,OAAO7C;YAC/D,MAAM+B,eAAeqB,sBAAsB,CAAC,cAAc;YAC1D,IAAI1B,KAAK;oBAKHK;gBAJJL,IAAIqF,YAAY,CAAClB,UAAU,GAAG;oBAC5B5H,OAAO;oBACP0D,MAAM;oBACNyF,QAAQ,EAAA,CACNrF,wCAAAA,eAAesF,qBAAqB,CAACvH,IAAAA,KAAAA,OAAAA,KAAAA,IAArCiC,sCAA2C8D,UAAU,CAAC,IAAI,CAACuB,QAAQ;gBACvE;YACF;QACF;QACA,MAAMD;QAEN,IAAIzF,KAAK;YACPA,OAAAA,OAAAA,KAAAA,IAAAA,IAAKS,KAAK,CAACuB,kBAAkB,CAC3B5D,KACA,OACAuE,UACA;gBACE,MAAMiD,iBAAiB5F,IAAIS,KAAK,CAACoF,aAAa,CAC5C,cACAL,WACA;gBAEF,MAAMC;gBACN,MAAMzF,IAAIS,KAAK,CAAC8E,oBAAoB,CAClC,wBACAvF,IAAIqF,YAAY,CAACS,oBAAoB;gBAEvC,MAAM9F,IAAIS,KAAK,CAAC8E,oBAAoB,CAClC,cACAvF,IAAIqF,YAAY,CAAClB,UAAU;gBAE7B,MAAM9D,eAAe0B,cAAc,CAAC;oBAClCxB;oBACAC;oBACAJ,aAAamE;gBACf;gBAEAqB,kBAAAA,OAAAA,KAAAA,IAAAA;gBACA,OAAO;oBAAEzD,OAAOC,kBAAAA,2BAA2B,CAAC8C,kBAAkB;gBAAC;YACjE,GACA;gBACE,OAAO;oBACL/C,OAAOC,kBAAAA,2BAA2B,CAAC8C,kBAAkB;gBACvD;YACF;QAEJ;IACF,OAAO;QACL7E,eAAesB,wBAAwB,CACrCZ,CAAAA,GAAAA,UAAAA,WAAW,EAAC,QAAQ,UAAU;QAEhC,IAAIf,KAAK;YACPA,IAAIqF,YAAY,CAACS,oBAAoB,GAAGN;YACxCxF,IAAIqF,YAAY,CAAClB,UAAU,GAAGqB;QAChC;IACF;IAEA,IAAIxF,KAAK;QACP,MAAMA,IAAIS,KAAK,CAAC8E,oBAAoB,CAClC,wBACAvF,IAAIqF,YAAY,CAACS,oBAAoB;QAEvC,MAAM9F,IAAIS,KAAK,CAAC8E,oBAAoB,CAClC,cACAvF,IAAIqF,YAAY,CAAClB,UAAU;IAE/B;AACF;AAEA,eAAeY,4BAA4B,EACzC5G,kBAAkB,EAClBoG,kBAAkB,EAElBN,WAAW,EACX8B,mBAAmB,EACnBC,OAAO,EACPC,YAAY,EAEZxF,KAAK,EAIqB;IAC1B,yEAAyE;IACzE,KAAK,MAAMrC,OAAO6F,YAAYD,IAAI,GAAI;QACpC,IAAI,CAAC/J,oBAAoBsK,oBAAoBnG,KAAK6F,cAAc;YAC9DA,YAAY/B,MAAM,CAAC9D;QACrB;IACF;IAEA,KAAK,MAAMA,OAAO2H,oBAAoB/B,IAAI,GAAI;QAC5C,mCAAmC;QACnC,IAAI,CAAC/J,oBAAoBsK,oBAAoBnG,KAAK6F,cAAc;YAC9D,MAAMxD,MAAMuE,sBAAsB,CAAC5G;QACrC;IACF;IAEA,KAAK,MAAM,CAACA,IAAI,IAAID,mBAAoB;QACtC,IAAI,CAAClE,oBAAoBsK,oBAAoBnG,KAAK6F,cAAc;YAC9D9F,mBAAmB+D,MAAM,CAAC9D;QAC5B;IACF;IAEA,KAAK,MAAM8H,UAAUF,QAAS;QAC5B,MAAMG,QAAQF,aAAavC,GAAG,CAACwC;QAC/B,IAAI,CAACC,OAAO;YACV;QACF;QAEA,KAAK,MAAM/H,OAAO+H,MAAMC,YAAY,CAACpC,IAAI,GAAI;YAC3C,IAAI,CAAC/J,oBAAoBsK,oBAAoBnG,KAAK6F,cAAc;gBAC9DkC,MAAMC,YAAY,CAAClE,MAAM,CAAC9D;YAC5B;QACF;QAEA,KAAK,MAAMiI,MAAMF,MAAMG,aAAa,CAACtC,IAAI,GAAI;YAC3C,IACE,CAAC/J,oBACCsK,oBACAxD,CAAAA,GAAAA,UAAAA,WAAW,EAAC,UAAU,UAAUsF,KAChCpC,cAEF;gBACAxD,MAAM8F,wBAAwB,CAACL,QAAQG;YACzC;QACF;IACF;AACF;AAEO,eAAetM,sBAAsB,EAC1CiG,GAAG,EACH7B,kBAAkB,EAClBiC,WAAW,EACXC,cAAc,EACdE,WAAW,EACXC,kBAAkB,EAClBlC,SAAS,EAETmC,KAAK,EAWN;IACC,IAAIL,YAAYa,MAAM,CAACC,GAAG,EAAE;QAC1B,MAAM9C,MAAM2C,CAAAA,GAAAA,UAAAA,WAAW,EAAC,SAAS,UAAU;QAE3C,MAAMI,kBAAkB,MAAMf,YAAYa,MAAM,CAACC,GAAG,CAACE,WAAW;QAChEX,SAAAA,OAAAA,KAAAA,IAAAA,MAAOY,qBAAqB,CAACjD,KAAK+C;QAClC,IAAInB,KAAK;YACPS,SAAAA,OAAAA,KAAAA,IAAAA,MAAOuB,kBAAkB,CACvB5D,KACA,OACAgC,YAAYa,MAAM,CAACC,GAAG,EACtB;gBACE,oEAAoE;gBACpE,qIAAqI;gBACrI,OAAO;oBAAEiB,OAAOC,kBAAAA,2BAA2B,CAACM,cAAc;gBAAC;YAC7D,GACA;gBACE,OAAO;oBACLH,QAAQH,kBAAAA,2BAA2B,CAACI,WAAW;oBAC/CC,MAAM;gBACR;YACF;QAEJ;QACAjI,cAAc2D,oBAAoBC,KAAK+C,iBAAiB,OAAO7C;IACjE;IACA,MAAM+B,eAAeiB,iBAAiB,CAAC;IACvC,MAAMjB,eAAekB,iBAAiB,CAAC;IACvC,MAAMlB,eAAeuB,gBAAgB,CAAC;IAEtC,IAAIxB,YAAYa,MAAM,CAACO,QAAQ,EAAE;QAC/B,MAAMpD,MAAM2C,CAAAA,GAAAA,UAAAA,WAAW,EAAC,SAAS,UAAU;QAE3C,MAAMI,kBAAkB,MAAMf,YAAYa,MAAM,CAACO,QAAQ,CAACJ,WAAW;QACrEX,SAAAA,OAAAA,KAAAA,IAAAA,MAAOY,qBAAqB,CAACjD,KAAK+C;QAClC,IAAInB,KAAK;YACPS,SAAAA,OAAAA,KAAAA,IAAAA,MAAOuB,kBAAkB,CACvB5D,KACA,OACAgC,YAAYa,MAAM,CAACO,QAAQ,EAC3B;gBACE,OAAO;oBACLe,QAAQH,kBAAAA,2BAA2B,CAACI,WAAW;oBAC/CC,MAAM;gBACR;YACF,GACA,CAACpD;gBACC,OAAO;oBACLkD,QAAQH,kBAAAA,2BAA2B,CAACI,WAAW;oBAC/CC,MAAM,CAAC,+CAA+C,EAAEpD,GAAG;gBAC7D;YACF;QAEJ;QACA7E,cAAc2D,oBAAoBC,KAAK+C,iBAAiB,OAAO7C;IACjE;IACA,MAAM+B,eAAekB,iBAAiB,CAAC;IAEvC,IAAInB,YAAYa,MAAM,CAACtC,KAAK,EAAE;QAC5B,MAAMP,MAAM2C,CAAAA,GAAAA,UAAAA,WAAW,EAAC,SAAS,UAAU;QAE3C,MAAMI,kBAAkB,MAAMf,YAAYa,MAAM,CAACtC,KAAK,CAACyC,WAAW;QAClEX,SAAAA,OAAAA,KAAAA,IAAAA,MAAOY,qBAAqB,CAACjD,KAAK+C;QAClC,IAAInB,KAAK;YACPS,SAAAA,OAAAA,KAAAA,IAAAA,MAAOuB,kBAAkB,CACvB5D,KACA,OACAgC,YAAYa,MAAM,CAACtC,KAAK,EACxB;gBACE,oEAAoE;gBACpE,qIAAqI;gBACrI,OAAO;oBAAEwD,OAAOC,kBAAAA,2BAA2B,CAACM,cAAc;gBAAC;YAC7D,GACA,CAACrD;gBACC,OAAO;oBACLkD,QAAQH,kBAAAA,2BAA2B,CAACI,WAAW;oBAC/CC,MAAM,CAAC,8BAA8B,EAAEpD,GAAG;gBAC5C;YACF;QAEJ;QACA7E,cAAc2D,oBAAoBC,KAAK+C,iBAAiB,OAAO7C;IACjE;IACA,MAAM+B,eAAeiB,iBAAiB,CAAC;IACvC,MAAMjB,eAAekB,iBAAiB,CAAC;IACvC,MAAMlB,eAAeuB,gBAAgB,CAAC;IAEtC,MAAMvB,eAAe0B,cAAc,CAAC;QAClCxB;QACAC;QACAJ;IACF;AACF;AAEO,SAAS1F,kBAAkByF,KAAa;IAC7C,OAAOA,MAAMvD,OAAO,CAAC,YAAY;AACnC;AAEO,SAASjD,eAAewG,KAAa;IAC1C,OAAOA,QAAQ;AACjB;AAEO,SAASzG,qBAAqByG,KAAa;IAChD,OAAOA,QAAQ;AACjB;AAMO,SAAS7F,wCACd6F,KAAa,EACbqG,GAAmB;IAEnB,IAAIC,gBAAgBtG;IACpB,IAAIuG,CAAAA,GAAAA,iBAAAA,eAAe,EAACD,gBAAgB;QAClCA,gBAAgBA,cAAcE,QAAQ,CAAC,YACnCF,cAAcG,KAAK,CAAC,GAAG,CAAC,SAASC,MAAM,IACvCJ;QAEJ,IAAID,KAAK;YACP,IAAIC,cAAcE,QAAQ,CAAC,uBAAuB;gBAChDF,gBAAgBA,cAAcG,KAAK,CAAC,GAAG,CAAC,qBAAqBC,MAAM;YACrE;YACA,IAAIJ,cAAcE,QAAQ,CAAC,mBAAmBH,QAAQ,QAAQ;gBAC5D,kDAAkD;gBAClDC,gBAAgBA,cAAcG,KAAK,CAAC,GAAG,CAAC,OAAOC,MAAM;YACvD;QACF;QACAJ,gBAAgBA,gBAAgB;IAClC;IACA,OAAOA;AACT;AAEO,SAASvM,2BACd4M,MAA0B;QAEnBA;IAAP,OAAOA,CAAAA,CAAAA,6BAAAA,OAAOC,YAAY,CAACC,KAAK,KAAA,OAAA,KAAA,IAAzBF,2BAA2BG,yBAAyB,KAAI;AACjE","ignoreList":[0]}},
    {"offset": {"line": 962, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 967, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/dev/static-paths-worker.ts"],"sourcesContent":["import type { NextConfigComplete } from '../config-shared'\n\nimport '../require-hook'\nimport '../node-environment'\n\nimport {\n  buildAppStaticPaths,\n  buildStaticPaths,\n  reduceAppConfig,\n} from '../../build/utils'\nimport { collectSegments } from '../../build/segment-config/app/app-segments'\nimport type { PartialStaticPathsResult } from '../../build/utils'\nimport { loadComponents } from '../load-components'\nimport { setHttpClientAndAgentOptions } from '../setup-http-agent-env'\nimport type { IncrementalCache } from '../lib/incremental-cache'\nimport { isAppPageRouteModule } from '../route-modules/checks'\nimport {\n  checkIsRoutePPREnabled,\n  type ExperimentalPPRConfig,\n} from '../lib/experimental/ppr'\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\ntype RuntimeConfig = {\n  pprConfig: ExperimentalPPRConfig | undefined\n  configFileName: string\n  publicRuntimeConfig: { [key: string]: any }\n  serverRuntimeConfig: { [key: string]: any }\n  dynamicIO: boolean\n}\n\n// we call getStaticPaths in a separate process to ensure\n// side-effects aren't relied on in dev that will break\n// during a production build\nexport async function loadStaticPaths({\n  dir,\n  distDir,\n  pathname,\n  config,\n  httpAgentOptions,\n  locales,\n  defaultLocale,\n  isAppPath,\n  page,\n  isrFlushToDisk,\n  fetchCacheKeyPrefix,\n  maxMemoryCacheSize,\n  requestHeaders,\n  cacheHandler,\n  cacheLifeProfiles,\n  nextConfigOutput,\n  buildId,\n  authInterrupts,\n}: {\n  dir: string\n  distDir: string\n  pathname: string\n  config: RuntimeConfig\n  httpAgentOptions: NextConfigComplete['httpAgentOptions']\n  locales?: string[]\n  defaultLocale?: string\n  isAppPath: boolean\n  page: string\n  isrFlushToDisk?: boolean\n  fetchCacheKeyPrefix?: string\n  maxMemoryCacheSize?: number\n  requestHeaders: IncrementalCache['requestHeaders']\n  cacheHandler?: string\n  cacheLifeProfiles?: {\n    [profile: string]: import('../../server/use-cache/cache-life').CacheLife\n  }\n  nextConfigOutput: 'standalone' | 'export' | undefined\n  buildId: string\n  authInterrupts: boolean\n}): Promise<PartialStaticPathsResult> {\n  // update work memory runtime-config\n  require('../../shared/lib/runtime-config.external').setConfig(config)\n  setHttpClientAndAgentOptions({\n    httpAgentOptions,\n  })\n\n  const components = await loadComponents({\n    distDir,\n    // In `pages/`, the page is the same as the pathname.\n    page: page || pathname,\n    isAppPath,\n    isDev: true,\n  })\n\n  if (isAppPath) {\n    const segments = await collectSegments(components)\n\n    const isRoutePPREnabled =\n      isAppPageRouteModule(components.routeModule) &&\n      checkIsRoutePPREnabled(config.pprConfig, reduceAppConfig(segments))\n\n    return buildAppStaticPaths({\n      dir,\n      page: pathname,\n      dynamicIO: config.dynamicIO,\n      segments,\n      configFileName: config.configFileName,\n      distDir,\n      requestHeaders,\n      cacheHandler,\n      cacheLifeProfiles,\n      isrFlushToDisk,\n      fetchCacheKeyPrefix,\n      maxMemoryCacheSize,\n      ComponentMod: components.ComponentMod,\n      nextConfigOutput,\n      isRoutePPREnabled,\n      buildId,\n      authInterrupts,\n    })\n  } else if (!components.getStaticPaths) {\n    // We shouldn't get to this point since the worker should only be called for\n    // SSG pages with getStaticPaths.\n    throw new InvariantError(\n      `Failed to load page with getStaticPaths for ${pathname}`\n    )\n  }\n\n  return buildStaticPaths({\n    page: pathname,\n    getStaticPaths: components.getStaticPaths,\n    configFileName: config.configFileName,\n    locales,\n    defaultLocale,\n  })\n}\n"],"names":["loadStaticPaths","dir","distDir","pathname","config","httpAgentOptions","locales","defaultLocale","isAppPath","page","isrFlushToDisk","fetchCacheKeyPrefix","maxMemoryCacheSize","requestHeaders","cacheHandler","cacheLifeProfiles","nextConfigOutput","buildId","authInterrupts","require","setConfig","setHttpClientAndAgentOptions","components","loadComponents","isDev","segments","collectSegments","isRoutePPREnabled","isAppPageRouteModule","routeModule","checkIsRoutePPREnabled","pprConfig","reduceAppConfig","buildAppStaticPaths","dynamicIO","configFileName","ComponentMod","getStaticPaths","InvariantError","buildStaticPaths"],"mappings":";;;;+BAiCsBA,mBAAAA;;;eAAAA;;;;;uBAxBf;6BACyB;gCAED;mCACc;wBAER;qBAI9B;gCACwB;AAaxB,eAAeA,gBAAgB,EACpCC,GAAG,EACHC,OAAO,EACPC,QAAQ,EACRC,MAAM,EACNC,gBAAgB,EAChBC,OAAO,EACPC,aAAa,EACbC,SAAS,EACTC,IAAI,EACJC,cAAc,EACdC,mBAAmB,EACnBC,kBAAkB,EAClBC,cAAc,EACdC,YAAY,EACZC,iBAAiB,EACjBC,gBAAgB,EAChBC,OAAO,EACPC,cAAc,EAsBf;IACC,oCAAoC;IACpCC,QAAQ,+IAA4CC,SAAS,CAAChB;IAC9DiB,CAAAA,GAAAA,mBAAAA,4BAA4B,EAAC;QAC3BhB;IACF;IAEA,MAAMiB,aAAa,MAAMC,CAAAA,GAAAA,gBAAAA,cAAc,EAAC;QACtCrB;QACA,qDAAqD;QACrDO,MAAMA,QAAQN;QACdK;QACAgB,OAAO;IACT;IAEA,IAAIhB,WAAW;QACb,MAAMiB,WAAW,MAAMC,CAAAA,GAAAA,aAAAA,eAAe,EAACJ;QAEvC,MAAMK,oBACJC,CAAAA,GAAAA,QAAAA,oBAAoB,EAACN,WAAWO,WAAW,KAC3CC,CAAAA,GAAAA,KAAAA,sBAAsB,EAAC1B,OAAO2B,SAAS,EAAEC,CAAAA,GAAAA,OAAAA,eAAe,EAACP;QAE3D,OAAOQ,CAAAA,GAAAA,OAAAA,mBAAmB,EAAC;YACzBhC;YACAQ,MAAMN;YACN+B,WAAW9B,OAAO8B,SAAS;YAC3BT;YACAU,gBAAgB/B,OAAO+B,cAAc;YACrCjC;YACAW;YACAC;YACAC;YACAL;YACAC;YACAC;YACAwB,cAAcd,WAAWc,YAAY;YACrCpB;YACAW;YACAV;YACAC;QACF;IACF,OAAO,IAAI,CAACI,WAAWe,cAAc,EAAE;QACrC,4EAA4E;QAC5E,iCAAiC;QACjC,MAAM,IAAIC,gBAAAA,cAAc,CACtB,CAAC,4CAA4C,EAAEnC,UAAU;IAE7D;IAEA,OAAOoC,CAAAA,GAAAA,OAAAA,gBAAgB,EAAC;QACtB9B,MAAMN;QACNkC,gBAAgBf,WAAWe,cAAc;QACzCF,gBAAgB/B,OAAO+B,cAAc;QACrC7B;QACAC;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 1034, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1039, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/dev/log-requests.ts"],"sourcesContent":["import {\n  blue,\n  bold,\n  gray,\n  green,\n  red,\n  white,\n  yellow,\n} from '../../lib/picocolors'\nimport { stripNextRscUnionQuery } from '../../lib/url'\nimport type { FetchMetric } from '../base-http'\nimport type { NodeNextRequest, NodeNextResponse } from '../base-http/node'\nimport type { LoggingConfig } from '../config-shared'\nimport { getRequestMeta } from '../request-meta'\n\nexport interface RequestLoggingOptions {\n  readonly request: NodeNextRequest\n  readonly response: NodeNextResponse\n  readonly loggingConfig: LoggingConfig | undefined\n  readonly requestDurationInMs: number\n}\n\nexport function logRequests(options: RequestLoggingOptions): void {\n  const { request, response, loggingConfig, requestDurationInMs } = options\n\n  logIncomingRequest({\n    request,\n    requestDurationInMs,\n    statusCode: response.statusCode,\n  })\n\n  if (request.fetchMetrics) {\n    for (const fetchMetric of request.fetchMetrics) {\n      logFetchMetric(fetchMetric, loggingConfig)\n    }\n  }\n}\n\ninterface IncomingRequestOptions {\n  readonly request: NodeNextRequest\n  readonly requestDurationInMs: number\n  readonly statusCode: number\n}\n\nfunction logIncomingRequest(options: IncomingRequestOptions): void {\n  const { request, requestDurationInMs, statusCode } = options\n  const isRSC = getRequestMeta(request, 'isRSCRequest')\n  const url = isRSC ? stripNextRscUnionQuery(request.url) : request.url\n\n  const statusCodeColor =\n    statusCode < 200\n      ? white\n      : statusCode < 300\n        ? green\n        : statusCode < 400\n          ? blue\n          : statusCode < 500\n            ? yellow\n            : red\n\n  const coloredStatus = statusCodeColor(statusCode.toString())\n\n  return writeLine(\n    `${request.method} ${url} ${coloredStatus} in ${requestDurationInMs}ms`\n  )\n}\n\nfunction logFetchMetric(\n  fetchMetric: FetchMetric,\n  loggingConfig: LoggingConfig | undefined\n): void {\n  let {\n    cacheReason,\n    cacheStatus,\n    cacheWarning,\n    end,\n    method,\n    start,\n    status,\n    url,\n  } = fetchMetric\n\n  if (cacheStatus === 'hmr' && !loggingConfig?.fetches?.hmrRefreshes) {\n    // Cache hits during HMR refreshes are intentionally not logged, unless\n    // explicitly enabled in the logging config.\n    return\n  }\n\n  if (loggingConfig?.fetches) {\n    if (url.length > 48 && !loggingConfig.fetches.fullUrl) {\n      url = truncateUrl(url)\n    }\n\n    writeLine(\n      white(\n        `${method} ${url} ${status} in ${Math.round(end - start)}ms ${formatCacheStatus(cacheStatus)}`\n      ),\n      1\n    )\n\n    if (cacheStatus === 'skip' || cacheStatus === 'miss') {\n      writeLine(\n        gray(\n          `Cache ${cacheStatus === 'skip' ? 'skipped' : 'missed'} reason: (${white(cacheReason)})`\n        ),\n        2\n      )\n    }\n  } else if (cacheWarning) {\n    // When logging for fetches is not enabled, we still want to print any\n    // associated warnings, so we print the request first to provide context.\n    writeLine(white(`${method} ${url}`), 1)\n  }\n\n  if (cacheWarning) {\n    writeLine(`${yellow(bold('⚠'))} ${white(cacheWarning)}`, 2)\n  }\n}\n\nfunction writeLine(text: string, indentationLevel = 0): void {\n  process.stdout.write(` ${'│ '.repeat(indentationLevel)}${text}\\n`)\n}\n\nfunction truncate(text: string, maxLength: number): string {\n  return maxLength !== undefined && text.length > maxLength\n    ? text.substring(0, maxLength) + '..'\n    : text\n}\n\nfunction truncateUrl(url: string): string {\n  const { protocol, host, pathname, search } = new URL(url)\n\n  return (\n    protocol +\n    '//' +\n    truncate(host, 16) +\n    truncate(pathname, 24) +\n    truncate(search, 16)\n  )\n}\n\nfunction formatCacheStatus(cacheStatus: FetchMetric['cacheStatus']): string {\n  switch (cacheStatus) {\n    case 'hmr':\n      return green('(HMR cache)')\n    case 'hit':\n      return green('(cache hit)')\n    default:\n      return yellow(`(cache ${cacheStatus})`)\n  }\n}\n"],"names":["logRequests","options","request","response","loggingConfig","requestDurationInMs","logIncomingRequest","statusCode","fetchMetrics","fetchMetric","logFetchMetric","isRSC","getRequestMeta","url","stripNextRscUnionQuery","statusCodeColor","white","green","blue","yellow","red","coloredStatus","toString","writeLine","method","cacheReason","cacheStatus","cacheWarning","end","start","status","fetches","hmrRefreshes","length","fullUrl","truncateUrl","Math","round","formatCacheStatus","gray","bold","text","indentationLevel","process","stdout","write","repeat","truncate","maxLength","undefined","substring","protocol","host","pathname","search","URL"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1123, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/dev/next-dev-server.ts"],"sourcesContent":["import type { FindComponentsResult, NodeRequestHandler } from '../next-server'\nimport type { LoadComponentsReturnType } from '../load-components'\nimport type { Options as ServerOptions } from '../next-server'\nimport type { Params } from '../request/params'\nimport type { ParsedUrl } from '../../shared/lib/router/utils/parse-url'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { UrlWithParsedQuery } from 'url'\nimport type { MiddlewareRoutingItem } from '../base-server'\nimport type { FunctionComponent } from 'react'\nimport type { RouteDefinition } from '../route-definitions/route-definition'\nimport type { RouteMatcherManager } from '../route-matcher-managers/route-matcher-manager'\nimport {\n  getRequestMeta,\n  type NextParsedUrlQuery,\n  type NextUrlWithParsedQuery,\n} from '../request-meta'\nimport type { DevBundlerService } from '../lib/dev-bundler-service'\nimport type { IncrementalCache } from '../lib/incremental-cache'\nimport type { UnwrapPromise } from '../../lib/coalesced-function'\nimport type { NodeNextResponse, NodeNextRequest } from '../base-http/node'\nimport type { RouteEnsurer } from '../route-matcher-managers/dev-route-matcher-manager'\nimport type { PagesManifest } from '../../build/webpack/plugins/pages-manifest-plugin'\n\nimport fs from 'fs'\nimport { Worker } from 'next/dist/compiled/jest-worker'\nimport { join as pathJoin } from 'path'\nimport { ampValidation } from '../../build/output'\nimport {\n  INSTRUMENTATION_HOOK_FILENAME,\n  PUBLIC_DIR_MIDDLEWARE_CONFLICT,\n} from '../../lib/constants'\nimport { findPagesDir } from '../../lib/find-pages-dir'\nimport {\n  PHASE_DEVELOPMENT_SERVER,\n  PAGES_MANIFEST,\n  APP_PATHS_MANIFEST,\n  COMPILER_NAMES,\n} from '../../shared/lib/constants'\nimport Server, { WrappedBuildError } from '../next-server'\nimport { normalizePagePath } from '../../shared/lib/page-path/normalize-page-path'\nimport { pathHasPrefix } from '../../shared/lib/router/utils/path-has-prefix'\nimport { removePathPrefix } from '../../shared/lib/router/utils/remove-path-prefix'\nimport { Telemetry } from '../../telemetry/storage'\nimport { type Span, setGlobal, trace } from '../../trace'\nimport { findPageFile } from '../lib/find-page-file'\nimport { getFormattedNodeOptionsWithoutInspect } from '../lib/utils'\nimport { withCoalescedInvoke } from '../../lib/coalesced-function'\nimport { loadDefaultErrorComponents } from '../load-default-error-components'\nimport { DecodeError, MiddlewareNotFoundError } from '../../shared/lib/utils'\nimport * as Log from '../../build/output/log'\nimport isError, { getProperError } from '../../lib/is-error'\nimport { isMiddlewareFile } from '../../build/utils'\nimport { formatServerError } from '../../lib/format-server-error'\nimport { DevRouteMatcherManager } from '../route-matcher-managers/dev-route-matcher-manager'\nimport { DevPagesRouteMatcherProvider } from '../route-matcher-providers/dev/dev-pages-route-matcher-provider'\nimport { DevPagesAPIRouteMatcherProvider } from '../route-matcher-providers/dev/dev-pages-api-route-matcher-provider'\nimport { DevAppPageRouteMatcherProvider } from '../route-matcher-providers/dev/dev-app-page-route-matcher-provider'\nimport { DevAppRouteRouteMatcherProvider } from '../route-matcher-providers/dev/dev-app-route-route-matcher-provider'\nimport { NodeManifestLoader } from '../route-matcher-providers/helpers/manifest-loaders/node-manifest-loader'\nimport { BatchedFileReader } from '../route-matcher-providers/dev/helpers/file-reader/batched-file-reader'\nimport { DefaultFileReader } from '../route-matcher-providers/dev/helpers/file-reader/default-file-reader'\nimport { LRUCache } from '../lib/lru-cache'\nimport { getMiddlewareRouteMatcher } from '../../shared/lib/router/utils/middleware-route-matcher'\nimport { DetachedPromise } from '../../lib/detached-promise'\nimport { isPostpone } from '../lib/router-utils/is-postpone'\nimport { generateInterceptionRoutesRewrites } from '../../lib/generate-interception-routes-rewrites'\nimport { buildCustomRoute } from '../../lib/build-custom-route'\nimport { decorateServerError } from '../../shared/lib/error-source'\nimport type { ServerOnInstrumentationRequestError } from '../app-render/types'\nimport type { ServerComponentsHmrCache } from '../response-cache'\nimport { logRequests } from './log-requests'\nimport { FallbackMode } from '../../lib/fallback'\n\n// Load ReactDevOverlay only when needed\nlet ReactDevOverlayImpl: FunctionComponent\nconst ReactDevOverlay = (props: any) => {\n  if (ReactDevOverlayImpl === undefined) {\n    ReactDevOverlayImpl =\n      require('../../client/components/react-dev-overlay/pages/client').ReactDevOverlay\n  }\n  return ReactDevOverlayImpl(props)\n}\n\nexport interface Options extends ServerOptions {\n  /**\n   * Tells of Next.js is running from the `next dev` command\n   */\n  isNextDevCommand?: boolean\n\n  /**\n   * Interface to the development bundler.\n   */\n  bundlerService: DevBundlerService\n\n  /**\n   * Trace span for server startup.\n   */\n  startServerSpan: Span\n}\n\nexport default class DevServer extends Server {\n  /**\n   * The promise that resolves when the server is ready. When this is unset\n   * the server is ready.\n   */\n  private ready? = new DetachedPromise<void>()\n  protected sortedRoutes?: string[]\n  private pagesDir?: string\n  private appDir?: string\n  private actualMiddlewareFile?: string\n  private actualInstrumentationHookFile?: string\n  private middleware?: MiddlewareRoutingItem\n  private originalFetch?: typeof fetch\n  private readonly bundlerService: DevBundlerService\n  private staticPathsCache: LRUCache<\n    UnwrapPromise<ReturnType<DevServer['getStaticPaths']>>\n  >\n  private startServerSpan: Span\n  private readonly serverComponentsHmrCache:\n    | ServerComponentsHmrCache\n    | undefined\n\n  protected staticPathsWorker?: { [key: string]: any } & {\n    loadStaticPaths: typeof import('./static-paths-worker').loadStaticPaths\n  }\n\n  private getStaticPathsWorker(): { [key: string]: any } & {\n    loadStaticPaths: typeof import('./static-paths-worker').loadStaticPaths\n  } {\n    const worker = new Worker(require.resolve('./static-paths-worker'), {\n      maxRetries: 1,\n      // For dev server, it's not necessary to spin up too many workers as long as you are not doing a load test.\n      // This helps reusing the memory a lot.\n      numWorkers: 1,\n      enableWorkerThreads: this.nextConfig.experimental.workerThreads,\n      forkOptions: {\n        env: {\n          ...process.env,\n          // discard --inspect/--inspect-brk flags from process.env.NODE_OPTIONS. Otherwise multiple Node.js debuggers\n          // would be started if user launch Next.js in debugging mode. The number of debuggers is linked to\n          // the number of workers Next.js tries to launch. The only worker users are interested in debugging\n          // is the main Next.js one\n          NODE_OPTIONS: getFormattedNodeOptionsWithoutInspect(),\n        },\n      },\n    }) as Worker & {\n      loadStaticPaths: typeof import('./static-paths-worker').loadStaticPaths\n    }\n\n    worker.getStdout().pipe(process.stdout)\n    worker.getStderr().pipe(process.stderr)\n\n    return worker\n  }\n\n  constructor(options: Options) {\n    try {\n      // Increase the number of stack frames on the server\n      Error.stackTraceLimit = 50\n    } catch {}\n    super({ ...options, dev: true })\n    this.bundlerService = options.bundlerService\n    this.startServerSpan =\n      options.startServerSpan ?? trace('start-next-dev-server')\n    this.renderOpts.dev = true\n    this.renderOpts.ErrorDebug = ReactDevOverlay\n    this.staticPathsCache = new LRUCache(\n      // 5MB\n      5 * 1024 * 1024,\n      function length(value) {\n        return JSON.stringify(value.staticPaths)?.length ?? 0\n      }\n    )\n    this.renderOpts.ampSkipValidation =\n      this.nextConfig.experimental?.amp?.skipValidation ?? false\n    this.renderOpts.ampValidator = (html: string, pathname: string) => {\n      const validatorPath =\n        (this.nextConfig.experimental &&\n          this.nextConfig.experimental.amp &&\n          this.nextConfig.experimental.amp.validator) ||\n        require.resolve(\n          'next/dist/compiled/amphtml-validator/validator_wasm.js'\n        )\n\n      const AmpHtmlValidator =\n        require('next/dist/compiled/amphtml-validator') as typeof import('next/dist/compiled/amphtml-validator')\n      return AmpHtmlValidator.getInstance(validatorPath).then((validator) => {\n        const result = validator.validateString(html)\n        ampValidation(\n          pathname,\n          result.errors\n            .filter((e) => e.severity === 'ERROR')\n            .filter((e) => this._filterAmpDevelopmentScript(html, e)),\n          result.errors.filter((e) => e.severity !== 'ERROR')\n        )\n      })\n    }\n\n    const { pagesDir, appDir } = findPagesDir(this.dir)\n    this.pagesDir = pagesDir\n    this.appDir = appDir\n\n    if (this.nextConfig.experimental.serverComponentsHmrCache) {\n      this.serverComponentsHmrCache = new LRUCache(\n        this.nextConfig.cacheMaxMemorySize,\n        function length(value) {\n          return JSON.stringify(value).length\n        }\n      )\n    }\n  }\n\n  protected override getServerComponentsHmrCache() {\n    return this.serverComponentsHmrCache\n  }\n\n  protected getRouteMatchers(): RouteMatcherManager {\n    const { pagesDir, appDir } = findPagesDir(this.dir)\n\n    const ensurer: RouteEnsurer = {\n      ensure: async (match, pathname) => {\n        await this.ensurePage({\n          definition: match.definition,\n          page: match.definition.page,\n          clientOnly: false,\n          url: pathname,\n        })\n      },\n    }\n\n    const matchers = new DevRouteMatcherManager(\n      super.getRouteMatchers(),\n      ensurer,\n      this.dir\n    )\n    const extensions = this.nextConfig.pageExtensions\n    const extensionsExpression = new RegExp(`\\\\.(?:${extensions.join('|')})$`)\n\n    // If the pages directory is available, then configure those matchers.\n    if (pagesDir) {\n      const fileReader = new BatchedFileReader(\n        new DefaultFileReader({\n          // Only allow files that have the correct extensions.\n          pathnameFilter: (pathname) => extensionsExpression.test(pathname),\n        })\n      )\n\n      matchers.push(\n        new DevPagesRouteMatcherProvider(\n          pagesDir,\n          extensions,\n          fileReader,\n          this.localeNormalizer\n        )\n      )\n      matchers.push(\n        new DevPagesAPIRouteMatcherProvider(\n          pagesDir,\n          extensions,\n          fileReader,\n          this.localeNormalizer\n        )\n      )\n    }\n\n    if (appDir) {\n      // We create a new file reader for the app directory because we don't want\n      // to include any folders or files starting with an underscore. This will\n      // prevent the reader from wasting time reading files that we know we\n      // don't care about.\n      const fileReader = new BatchedFileReader(\n        new DefaultFileReader({\n          // Ignore any directory prefixed with an underscore.\n          ignorePartFilter: (part) => part.startsWith('_'),\n        })\n      )\n\n      matchers.push(\n        new DevAppPageRouteMatcherProvider(appDir, extensions, fileReader)\n      )\n      matchers.push(\n        new DevAppRouteRouteMatcherProvider(appDir, extensions, fileReader)\n      )\n    }\n\n    return matchers\n  }\n\n  protected getBuildId(): string {\n    return 'development'\n  }\n\n  protected async prepareImpl(): Promise<void> {\n    setGlobal('distDir', this.distDir)\n    setGlobal('phase', PHASE_DEVELOPMENT_SERVER)\n\n    const telemetry = new Telemetry({ distDir: this.distDir })\n\n    await super.prepareImpl()\n    await this.matchers.reload()\n\n    this.ready?.resolve()\n    this.ready = undefined\n\n    // In dev, this needs to be called after prepare because the build entries won't be known in the constructor\n    this.interceptionRoutePatterns = this.getinterceptionRoutePatterns()\n\n    // This is required by the tracing subsystem.\n    setGlobal('appDir', this.appDir)\n    setGlobal('pagesDir', this.pagesDir)\n    setGlobal('telemetry', telemetry)\n\n    process.on('unhandledRejection', (reason) => {\n      if (isPostpone(reason)) {\n        // React postpones that are unhandled might end up logged here but they're\n        // not really errors. They're just part of rendering.\n        return\n      }\n      this.logErrorWithOriginalStack(reason, 'unhandledRejection')\n    })\n    process.on('uncaughtException', (err) => {\n      this.logErrorWithOriginalStack(err, 'uncaughtException')\n    })\n  }\n\n  protected async hasPage(pathname: string): Promise<boolean> {\n    let normalizedPath: string\n    try {\n      normalizedPath = normalizePagePath(pathname)\n    } catch (err) {\n      console.error(err)\n      // if normalizing the page fails it means it isn't valid\n      // so it doesn't exist so don't throw and return false\n      // to ensure we return 404 instead of 500\n      return false\n    }\n\n    if (isMiddlewareFile(normalizedPath)) {\n      return findPageFile(\n        this.dir,\n        normalizedPath,\n        this.nextConfig.pageExtensions,\n        false\n      ).then(Boolean)\n    }\n\n    let appFile: string | null = null\n    let pagesFile: string | null = null\n\n    if (this.appDir) {\n      appFile = await findPageFile(\n        this.appDir,\n        normalizedPath + '/page',\n        this.nextConfig.pageExtensions,\n        true\n      )\n    }\n\n    if (this.pagesDir) {\n      pagesFile = await findPageFile(\n        this.pagesDir,\n        normalizedPath,\n        this.nextConfig.pageExtensions,\n        false\n      )\n    }\n    if (appFile && pagesFile) {\n      return false\n    }\n\n    return Boolean(appFile || pagesFile)\n  }\n\n  async runMiddleware(params: {\n    request: NodeNextRequest\n    response: NodeNextResponse\n    parsedUrl: ParsedUrl\n    parsed: UrlWithParsedQuery\n    middlewareList: MiddlewareRoutingItem[]\n  }) {\n    try {\n      const result = await super.runMiddleware({\n        ...params,\n        onWarning: (warn) => {\n          this.logErrorWithOriginalStack(warn, 'warning')\n        },\n      })\n\n      if ('finished' in result) {\n        return result\n      }\n\n      result.waitUntil.catch((error) => {\n        this.logErrorWithOriginalStack(error, 'unhandledRejection')\n      })\n      return result\n    } catch (error) {\n      if (error instanceof DecodeError) {\n        throw error\n      }\n\n      /**\n       * We only log the error when it is not a MiddlewareNotFound error as\n       * in that case we should be already displaying a compilation error\n       * which is what makes the module not found.\n       */\n      if (!(error instanceof MiddlewareNotFoundError)) {\n        this.logErrorWithOriginalStack(error)\n      }\n\n      const err = getProperError(error)\n      decorateServerError(err, COMPILER_NAMES.edgeServer)\n      const { request, response, parsedUrl } = params\n\n      /**\n       * When there is a failure for an internal Next.js request from\n       * middleware we bypass the error without finishing the request\n       * so we can serve the required chunks to render the error.\n       */\n      if (\n        request.url.includes('/_next/static') ||\n        request.url.includes('/__nextjs_original-stack-frame') ||\n        request.url.includes('/__nextjs_source-map')\n      ) {\n        return { finished: false }\n      }\n\n      response.statusCode = 500\n      await this.renderError(err, request, response, parsedUrl.pathname)\n      return { finished: true }\n    }\n  }\n\n  async runEdgeFunction(params: {\n    req: NodeNextRequest\n    res: NodeNextResponse\n    query: ParsedUrlQuery\n    params: Params | undefined\n    page: string\n    appPaths: string[] | null\n    isAppPath: boolean\n  }) {\n    try {\n      return super.runEdgeFunction({\n        ...params,\n        onError: (err) => this.logErrorWithOriginalStack(err, 'app-dir'),\n        onWarning: (warn) => {\n          this.logErrorWithOriginalStack(warn, 'warning')\n        },\n      })\n    } catch (error) {\n      if (error instanceof DecodeError) {\n        throw error\n      }\n      this.logErrorWithOriginalStack(error, 'warning')\n      const err = getProperError(error)\n      const { req, res, page } = params\n\n      res.statusCode = 500\n      await this.renderError(err, req, res, page)\n      return null\n    }\n  }\n\n  public getRequestHandler(): NodeRequestHandler {\n    const handler = super.getRequestHandler()\n\n    return (req, res, parsedUrl) => {\n      const request = this.normalizeReq(req)\n      const response = this.normalizeRes(res)\n      const loggingConfig = this.nextConfig.logging\n\n      if (loggingConfig !== false) {\n        const start = Date.now()\n        const isMiddlewareRequest = getRequestMeta(req, 'middlewareInvoke')\n\n        if (!isMiddlewareRequest) {\n          response.originalResponse.once('close', () => {\n            // NOTE: The route match is only attached to the request's meta data\n            // after the request handler is created, so we need to check it in the\n            // close handler and not before.\n            const routeMatch = getRequestMeta(req).match\n\n            if (!routeMatch) {\n              return\n            }\n\n            logRequests({\n              request,\n              response,\n              loggingConfig,\n              requestDurationInMs: Date.now() - start,\n            })\n          })\n        }\n      }\n\n      return handler(request, response, parsedUrl)\n    }\n  }\n\n  public async handleRequest(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    parsedUrl?: NextUrlWithParsedQuery\n  ): Promise<void> {\n    const span = trace('handle-request', undefined, { url: req.url })\n    const result = await span.traceAsyncFn(async () => {\n      await this.ready?.promise\n      return await super.handleRequest(req, res, parsedUrl)\n    })\n    const memoryUsage = process.memoryUsage()\n    span\n      .traceChild('memory-usage', {\n        url: req.url,\n        'memory.rss': String(memoryUsage.rss),\n        'memory.heapUsed': String(memoryUsage.heapUsed),\n        'memory.heapTotal': String(memoryUsage.heapTotal),\n      })\n      .stop()\n    return result\n  }\n\n  async run(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    parsedUrl: UrlWithParsedQuery\n  ): Promise<void> {\n    await this.ready?.promise\n\n    const { basePath } = this.nextConfig\n    let originalPathname: string | null = null\n\n    // TODO: see if we can remove this in the future\n    if (basePath && pathHasPrefix(parsedUrl.pathname || '/', basePath)) {\n      // strip basePath before handling dev bundles\n      // If replace ends up replacing the full url it'll be `undefined`, meaning we have to default it to `/`\n      originalPathname = parsedUrl.pathname\n      parsedUrl.pathname = removePathPrefix(parsedUrl.pathname || '/', basePath)\n    }\n\n    const { pathname } = parsedUrl\n\n    if (pathname!.startsWith('/_next')) {\n      if (fs.existsSync(pathJoin(this.publicDir, '_next'))) {\n        throw new Error(PUBLIC_DIR_MIDDLEWARE_CONFLICT)\n      }\n    }\n\n    if (originalPathname) {\n      // restore the path before continuing so that custom-routes can accurately determine\n      // if they should match against the basePath or not\n      parsedUrl.pathname = originalPathname\n    }\n    try {\n      return await super.run(req, res, parsedUrl)\n    } catch (error) {\n      const err = getProperError(error)\n      formatServerError(err)\n      this.logErrorWithOriginalStack(err)\n      if (!res.sent) {\n        res.statusCode = 500\n        try {\n          return await this.renderError(err, req, res, pathname!, {\n            __NEXT_PAGE: (isError(err) && err.page) || pathname || '',\n          })\n        } catch (internalErr) {\n          console.error(internalErr)\n          res.body('Internal Server Error').send()\n        }\n      }\n    }\n  }\n\n  protected logErrorWithOriginalStack(\n    err?: unknown,\n    type?: 'unhandledRejection' | 'uncaughtException' | 'warning' | 'app-dir'\n  ): void {\n    this.bundlerService.logErrorWithOriginalStack(err, type)\n  }\n\n  protected getPagesManifest(): PagesManifest | undefined {\n    return (\n      NodeManifestLoader.require(\n        pathJoin(this.serverDistDir, PAGES_MANIFEST)\n      ) ?? undefined\n    )\n  }\n\n  protected getAppPathsManifest(): PagesManifest | undefined {\n    if (!this.enabledDirectories.app) return undefined\n\n    return (\n      NodeManifestLoader.require(\n        pathJoin(this.serverDistDir, APP_PATHS_MANIFEST)\n      ) ?? undefined\n    )\n  }\n\n  protected getinterceptionRoutePatterns(): RegExp[] {\n    const rewrites = generateInterceptionRoutesRewrites(\n      Object.keys(this.appPathRoutes ?? {}),\n      this.nextConfig.basePath\n    ).map((route) => new RegExp(buildCustomRoute('rewrite', route).regex))\n\n    return rewrites ?? []\n  }\n\n  protected getMiddleware() {\n    // We need to populate the match\n    // field as it isn't serializable\n    if (this.middleware?.match === null) {\n      this.middleware.match = getMiddlewareRouteMatcher(\n        this.middleware.matchers || []\n      )\n    }\n    return this.middleware\n  }\n\n  protected getNextFontManifest() {\n    return undefined\n  }\n\n  protected async hasMiddleware(): Promise<boolean> {\n    return this.hasPage(this.actualMiddlewareFile!)\n  }\n\n  protected async ensureMiddleware(url: string) {\n    return this.ensurePage({\n      page: this.actualMiddlewareFile!,\n      clientOnly: false,\n      definition: undefined,\n      url,\n    })\n  }\n\n  protected async loadInstrumentationModule(): Promise<any> {\n    let instrumentationModule: any\n    if (\n      this.actualInstrumentationHookFile &&\n      (await this.ensurePage({\n        page: this.actualInstrumentationHookFile!,\n        clientOnly: false,\n        definition: undefined,\n      })\n        .then(() => true)\n        .catch(() => false))\n    ) {\n      try {\n        instrumentationModule = await require(\n          pathJoin(this.distDir, 'server', INSTRUMENTATION_HOOK_FILENAME)\n        )\n      } catch (err: any) {\n        err.message = `An error occurred while loading instrumentation hook: ${err.message}`\n        throw err\n      }\n    }\n    return instrumentationModule\n  }\n\n  protected async runInstrumentationHookIfAvailable() {\n    await this.startServerSpan\n      .traceChild('run-instrumentation-hook')\n      .traceAsyncFn(() => this.instrumentation?.register?.())\n  }\n\n  protected async ensureEdgeFunction({\n    page,\n    appPaths,\n    url,\n  }: {\n    page: string\n    appPaths: string[] | null\n    url: string\n  }) {\n    return this.ensurePage({\n      page,\n      appPaths,\n      clientOnly: false,\n      definition: undefined,\n      url,\n    })\n  }\n\n  generateRoutes(_dev?: boolean) {\n    // In development we expose all compiled files for react-error-overlay's line show feature\n    // We use unshift so that we're sure the routes is defined before Next's default routes\n    // routes.unshift({\n    //   match: getPathMatch('/_next/development/:path*'),\n    //   type: 'route',\n    //   name: '_next/development catchall',\n    //   fn: async (req, res, params) => {\n    //     const p = pathJoin(this.distDir, ...(params.path || []))\n    //     await this.serveStatic(req, res, p)\n    //     return {\n    //       finished: true,\n    //     }\n    //   },\n    // })\n  }\n\n  _filterAmpDevelopmentScript(\n    html: string,\n    event: { line: number; col: number; code: string }\n  ): boolean {\n    if (event.code !== 'DISALLOWED_SCRIPT_TAG') {\n      return true\n    }\n\n    const snippetChunks = html.split('\\n')\n\n    let snippet\n    if (\n      !(snippet = html.split('\\n')[event.line - 1]) ||\n      !(snippet = snippet.substring(event.col))\n    ) {\n      return true\n    }\n\n    snippet = snippet + snippetChunks.slice(event.line).join('\\n')\n    snippet = snippet.substring(0, snippet.indexOf('</script>'))\n\n    return !snippet.includes('data-amp-development-mode-only')\n  }\n\n  protected async getStaticPaths({\n    pathname,\n    requestHeaders,\n    page,\n    isAppPath,\n  }: {\n    pathname: string\n    requestHeaders: IncrementalCache['requestHeaders']\n    page: string\n    isAppPath: boolean\n  }): Promise<{\n    staticPaths?: string[]\n    fallbackMode?: FallbackMode\n  }> {\n    // we lazy load the staticPaths to prevent the user\n    // from waiting on them for the page to load in dev mode\n\n    const __getStaticPaths = async () => {\n      const {\n        configFileName,\n        publicRuntimeConfig,\n        serverRuntimeConfig,\n        httpAgentOptions,\n      } = this.nextConfig\n      const { locales, defaultLocale } = this.nextConfig.i18n || {}\n      const staticPathsWorker = this.getStaticPathsWorker()\n\n      try {\n        const pathsResult = await staticPathsWorker.loadStaticPaths({\n          dir: this.dir,\n          distDir: this.distDir,\n          pathname,\n          config: {\n            pprConfig: this.nextConfig.experimental.ppr,\n            configFileName,\n            publicRuntimeConfig,\n            serverRuntimeConfig,\n            dynamicIO: Boolean(this.nextConfig.experimental.dynamicIO),\n          },\n          httpAgentOptions,\n          locales,\n          defaultLocale,\n          page,\n          isAppPath,\n          requestHeaders,\n          cacheHandler: this.nextConfig.cacheHandler,\n          cacheLifeProfiles: this.nextConfig.experimental.cacheLife,\n          fetchCacheKeyPrefix: this.nextConfig.experimental.fetchCacheKeyPrefix,\n          isrFlushToDisk: this.nextConfig.experimental.isrFlushToDisk,\n          maxMemoryCacheSize: this.nextConfig.cacheMaxMemorySize,\n          nextConfigOutput: this.nextConfig.output,\n          buildId: this.renderOpts.buildId,\n          authInterrupts: !!this.nextConfig.experimental.authInterrupts,\n        })\n        return pathsResult\n      } finally {\n        // we don't re-use workers so destroy the used one\n        staticPathsWorker.end()\n      }\n    }\n    const result = this.staticPathsCache.get(pathname)\n\n    const nextInvoke = withCoalescedInvoke(__getStaticPaths)(\n      `staticPaths-${pathname}`,\n      []\n    )\n      .then((res) => {\n        const { prerenderedRoutes: staticPaths, fallbackMode: fallback } =\n          res.value\n        if (!isAppPath && this.nextConfig.output === 'export') {\n          if (fallback === FallbackMode.BLOCKING_STATIC_RENDER) {\n            throw new Error(\n              'getStaticPaths with \"fallback: blocking\" cannot be used with \"output: export\". See more info here: https://nextjs.org/docs/advanced-features/static-html-export'\n            )\n          } else if (fallback === FallbackMode.PRERENDER) {\n            throw new Error(\n              'getStaticPaths with \"fallback: true\" cannot be used with \"output: export\". See more info here: https://nextjs.org/docs/advanced-features/static-html-export'\n            )\n          }\n        }\n\n        const value: {\n          staticPaths: string[] | undefined\n          fallbackMode: FallbackMode | undefined\n        } = {\n          staticPaths: staticPaths?.map((route) => route.path),\n          fallbackMode: fallback,\n        }\n        this.staticPathsCache.set(pathname, value)\n        return value\n      })\n      .catch((err) => {\n        this.staticPathsCache.remove(pathname)\n        if (!result) throw err\n        Log.error(`Failed to generate static paths for ${pathname}:`)\n        console.error(err)\n      })\n\n    if (result) {\n      return result\n    }\n    return nextInvoke as NonNullable<typeof result>\n  }\n\n  protected async ensurePage(opts: {\n    page: string\n    clientOnly: boolean\n    appPaths?: ReadonlyArray<string> | null\n    definition: RouteDefinition | undefined\n    url?: string\n  }): Promise<void> {\n    await this.bundlerService.ensurePage(opts)\n  }\n\n  protected async findPageComponents({\n    page,\n    query,\n    params,\n    isAppPath,\n    appPaths = null,\n    shouldEnsure,\n    url,\n  }: {\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    sriEnabled?: boolean\n    appPaths?: ReadonlyArray<string> | null\n    shouldEnsure: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null> {\n    await this.ready?.promise\n\n    const compilationErr = await this.getCompilationError(page)\n    if (compilationErr) {\n      // Wrap build errors so that they don't get logged again\n      throw new WrappedBuildError(compilationErr)\n    }\n    try {\n      if (shouldEnsure || this.renderOpts.customServer) {\n        await this.ensurePage({\n          page,\n          appPaths,\n          clientOnly: false,\n          definition: undefined,\n          url,\n        })\n      }\n\n      this.nextFontManifest = super.getNextFontManifest()\n\n      return await super.findPageComponents({\n        page,\n        query,\n        params,\n        isAppPath,\n        shouldEnsure,\n        url,\n      })\n    } catch (err) {\n      if ((err as any).code !== 'ENOENT') {\n        throw err\n      }\n      return null\n    }\n  }\n\n  protected async getFallbackErrorComponents(\n    url?: string\n  ): Promise<LoadComponentsReturnType | null> {\n    await this.bundlerService.getFallbackErrorComponents(url)\n    return await loadDefaultErrorComponents(this.distDir)\n  }\n\n  async getCompilationError(page: string): Promise<any> {\n    return await this.bundlerService.getCompilationError(page)\n  }\n\n  protected async instrumentationOnRequestError(\n    ...args: Parameters<ServerOnInstrumentationRequestError>\n  ) {\n    await super.instrumentationOnRequestError(...args)\n\n    const err = args[0]\n    this.logErrorWithOriginalStack(err, 'app-dir')\n  }\n}\n"],"names":["DevServer","ReactDevOverlayImpl","ReactDevOverlay","props","undefined","require","Server","getStaticPathsWorker","worker","Worker","resolve","maxRetries","numWorkers","enableWorkerThreads","nextConfig","experimental","workerThreads","forkOptions","env","process","NODE_OPTIONS","getFormattedNodeOptionsWithoutInspect","getStdout","pipe","stdout","getStderr","stderr","constructor","options","Error","stackTraceLimit","dev","ready","DetachedPromise","bundlerService","startServerSpan","trace","renderOpts","ErrorDebug","staticPathsCache","LRUCache","length","value","JSON","stringify","staticPaths","ampSkipValidation","amp","skipValidation","ampValidator","html","pathname","validatorPath","validator","AmpHtmlValidator","getInstance","then","result","validateString","ampValidation","errors","filter","e","severity","_filterAmpDevelopmentScript","pagesDir","appDir","findPagesDir","dir","serverComponentsHmrCache","cacheMaxMemorySize","getServerComponentsHmrCache","getRouteMatchers","ensurer","ensure","match","ensurePage","definition","page","clientOnly","url","matchers","DevRouteMatcherManager","extensions","pageExtensions","extensionsExpression","RegExp","join","fileReader","BatchedFileReader","DefaultFileReader","pathnameFilter","test","push","DevPagesRouteMatcherProvider","localeNormalizer","DevPagesAPIRouteMatcherProvider","ignorePartFilter","part","startsWith","DevAppPageRouteMatcherProvider","DevAppRouteRouteMatcherProvider","getBuildId","prepareImpl","setGlobal","distDir","PHASE_DEVELOPMENT_SERVER","telemetry","Telemetry","reload","interceptionRoutePatterns","getinterceptionRoutePatterns","on","reason","isPostpone","logErrorWithOriginalStack","err","hasPage","normalizedPath","normalizePagePath","console","error","isMiddlewareFile","findPageFile","Boolean","appFile","pagesFile","runMiddleware","params","onWarning","warn","waitUntil","catch","DecodeError","MiddlewareNotFoundError","getProperError","decorateServerError","COMPILER_NAMES","edgeServer","request","response","parsedUrl","includes","finished","statusCode","renderError","runEdgeFunction","onError","req","res","getRequestHandler","handler","normalizeReq","normalizeRes","loggingConfig","logging","start","Date","now","isMiddlewareRequest","getRequestMeta","originalResponse","once","routeMatch","logRequests","requestDurationInMs","handleRequest","span","traceAsyncFn","promise","memoryUsage","traceChild","String","rss","heapUsed","heapTotal","stop","run","basePath","originalPathname","pathHasPrefix","removePathPrefix","fs","existsSync","pathJoin","publicDir","PUBLIC_DIR_MIDDLEWARE_CONFLICT","formatServerError","sent","__NEXT_PAGE","isError","internalErr","body","send","type","getPagesManifest","NodeManifestLoader","serverDistDir","PAGES_MANIFEST","getAppPathsManifest","enabledDirectories","app","APP_PATHS_MANIFEST","rewrites","generateInterceptionRoutesRewrites","Object","keys","appPathRoutes","map","route","buildCustomRoute","regex","getMiddleware","middleware","getMiddlewareRouteMatcher","getNextFontManifest","hasMiddleware","actualMiddlewareFile","ensureMiddleware","loadInstrumentationModule","instrumentationModule","actualInstrumentationHookFile","INSTRUMENTATION_HOOK_FILENAME","message","runInstrumentationHookIfAvailable","instrumentation","register","ensureEdgeFunction","appPaths","generateRoutes","_dev","event","code","snippetChunks","split","snippet","line","substring","col","slice","indexOf","getStaticPaths","requestHeaders","isAppPath","__getStaticPaths","configFileName","publicRuntimeConfig","serverRuntimeConfig","httpAgentOptions","locales","defaultLocale","i18n","staticPathsWorker","pathsResult","loadStaticPaths","config","pprConfig","ppr","dynamicIO","cacheHandler","cacheLifeProfiles","cacheLife","fetchCacheKeyPrefix","isrFlushToDisk","maxMemoryCacheSize","nextConfigOutput","output","buildId","authInterrupts","end","get","nextInvoke","withCoalescedInvoke","prerenderedRoutes","fallbackMode","fallback","FallbackMode","BLOCKING_STATIC_RENDER","PRERENDER","path","set","remove","Log","opts","findPageComponents","query","shouldEnsure","compilationErr","getCompilationError","WrappedBuildError","customServer","nextFontManifest","getFallbackErrorComponents","loadDefaultErrorComponents","instrumentationOnRequestError","args"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1763, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1768, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/dev/hot-middleware.ts"],"sourcesContent":["// Based on https://github.com/webpack-contrib/webpack-hot-middleware/blob/9708d781ae0e46179cf8ea1a94719de4679aaf53/middleware.js\n// Included License below\n\n// Copyright JS Foundation and other contributors\n\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// 'Software'), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport type { webpack } from 'next/dist/compiled/webpack/webpack'\nimport type ws from 'next/dist/compiled/ws'\nimport { isMiddlewareFilename } from '../../build/utils'\nimport type { VersionInfo } from './parse-version-info'\nimport type { HMR_ACTION_TYPES } from './hot-reloader-types'\nimport { HMR_ACTIONS_SENT_TO_BROWSER } from './hot-reloader-types'\n\nfunction isMiddlewareStats(stats: webpack.Stats) {\n  for (const key of stats.compilation.entrypoints.keys()) {\n    if (isMiddlewareFilename(key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\nfunction statsToJson(stats?: webpack.Stats | null) {\n  if (!stats) return {}\n  return stats.toJson({\n    all: false,\n    errors: true,\n    hash: true,\n    warnings: true,\n  })\n}\n\nfunction getStatsForSyncEvent(\n  clientStats: { ts: number; stats: webpack.Stats } | null,\n  serverStats: { ts: number; stats: webpack.Stats } | null\n) {\n  if (!clientStats) return serverStats?.stats\n  if (!serverStats) return clientStats?.stats\n\n  // Prefer the server compiler stats if it has errors.\n  // Otherwise we may end up in a state where the client compilation is the latest but without errors.\n  // This causes the error overlay to not display the build error.\n  if (serverStats.stats.hasErrors()) {\n    return serverStats.stats\n  }\n\n  // Return the latest stats\n  return serverStats.ts > clientStats.ts ? serverStats.stats : clientStats.stats\n}\n\nclass EventStream {\n  clients: Set<ws>\n  constructor() {\n    this.clients = new Set()\n  }\n\n  everyClient(fn: (client: ws) => void) {\n    for (const client of this.clients) {\n      fn(client)\n    }\n  }\n\n  close() {\n    this.everyClient((client) => {\n      client.close()\n    })\n    this.clients.clear()\n  }\n\n  handler(client: ws) {\n    this.clients.add(client)\n    client.addEventListener('close', () => {\n      this.clients.delete(client)\n    })\n  }\n\n  publish(payload: any) {\n    this.everyClient((client) => {\n      client.send(JSON.stringify(payload))\n    })\n  }\n}\n\nexport class WebpackHotMiddleware {\n  eventStream: EventStream\n  clientLatestStats: { ts: number; stats: webpack.Stats } | null\n  middlewareLatestStats: { ts: number; stats: webpack.Stats } | null\n  serverLatestStats: { ts: number; stats: webpack.Stats } | null\n  closed: boolean\n  versionInfo: VersionInfo\n  devtoolsFrontendUrl: string | undefined\n\n  constructor(\n    compilers: webpack.Compiler[],\n    versionInfo: VersionInfo,\n    devtoolsFrontendUrl: string | undefined\n  ) {\n    this.eventStream = new EventStream()\n    this.clientLatestStats = null\n    this.middlewareLatestStats = null\n    this.serverLatestStats = null\n    this.closed = false\n    this.versionInfo = versionInfo\n    this.devtoolsFrontendUrl = devtoolsFrontendUrl\n\n    compilers[0].hooks.invalid.tap(\n      'webpack-hot-middleware',\n      this.onClientInvalid\n    )\n    compilers[0].hooks.done.tap('webpack-hot-middleware', this.onClientDone)\n    compilers[1].hooks.invalid.tap(\n      'webpack-hot-middleware',\n      this.onServerInvalid\n    )\n    compilers[1].hooks.done.tap('webpack-hot-middleware', this.onServerDone)\n    compilers[2].hooks.done.tap('webpack-hot-middleware', this.onEdgeServerDone)\n    compilers[2].hooks.invalid.tap(\n      'webpack-hot-middleware',\n      this.onEdgeServerInvalid\n    )\n  }\n\n  onClientInvalid = () => {\n    if (this.closed || this.serverLatestStats?.stats.hasErrors()) return\n    this.publish({\n      action: HMR_ACTIONS_SENT_TO_BROWSER.BUILDING,\n    })\n  }\n\n  onClientDone = (statsResult: webpack.Stats) => {\n    this.clientLatestStats = { ts: Date.now(), stats: statsResult }\n    if (this.closed || this.serverLatestStats?.stats.hasErrors()) return\n    this.publishStats(statsResult)\n  }\n\n  onServerInvalid = () => {\n    if (!this.serverLatestStats?.stats.hasErrors()) return\n    this.serverLatestStats = null\n    if (this.clientLatestStats?.stats) {\n      this.publishStats(this.clientLatestStats.stats)\n    }\n  }\n\n  onServerDone = (statsResult: webpack.Stats) => {\n    if (this.closed) return\n    if (statsResult.hasErrors()) {\n      this.serverLatestStats = { ts: Date.now(), stats: statsResult }\n      this.publishStats(statsResult)\n    }\n  }\n\n  onEdgeServerInvalid = () => {\n    if (!this.middlewareLatestStats?.stats.hasErrors()) return\n    this.middlewareLatestStats = null\n    if (this.clientLatestStats?.stats) {\n      this.publishStats(this.clientLatestStats.stats)\n    }\n  }\n\n  onEdgeServerDone = (statsResult: webpack.Stats) => {\n    if (!isMiddlewareStats(statsResult)) {\n      this.onServerInvalid()\n      this.onServerDone(statsResult)\n      return\n    }\n\n    if (statsResult.hasErrors()) {\n      this.middlewareLatestStats = { ts: Date.now(), stats: statsResult }\n      this.publishStats(statsResult)\n    }\n  }\n\n  /**\n   * To sync we use the most recent stats but also we append middleware\n   * errors. This is because it is possible that middleware fails to compile\n   * and we still want to show the client overlay with the error while\n   * the error page should be rendered just fine.\n   */\n  onHMR = (client: ws) => {\n    if (this.closed) return\n    this.eventStream.handler(client)\n\n    const syncStats = getStatsForSyncEvent(\n      this.clientLatestStats,\n      this.serverLatestStats\n    )\n\n    if (syncStats) {\n      const stats = statsToJson(syncStats)\n      const middlewareStats = statsToJson(this.middlewareLatestStats?.stats)\n\n      this.publish({\n        action: HMR_ACTIONS_SENT_TO_BROWSER.SYNC,\n        hash: stats.hash!,\n        errors: [...(stats.errors || []), ...(middlewareStats.errors || [])],\n        warnings: [\n          ...(stats.warnings || []),\n          ...(middlewareStats.warnings || []),\n        ],\n        versionInfo: this.versionInfo,\n        debug: {\n          devtoolsFrontendUrl: this.devtoolsFrontendUrl,\n        },\n      })\n    }\n  }\n\n  publishStats = (statsResult: webpack.Stats) => {\n    const stats = statsResult.toJson({\n      all: false,\n      hash: true,\n      warnings: true,\n      errors: true,\n      moduleTrace: true,\n    })\n\n    this.publish({\n      action: HMR_ACTIONS_SENT_TO_BROWSER.BUILT,\n      hash: stats.hash!,\n      warnings: stats.warnings || [],\n      errors: stats.errors || [],\n    })\n  }\n\n  publish = (payload: HMR_ACTION_TYPES) => {\n    if (this.closed) return\n    this.eventStream.publish(payload)\n  }\n  close = () => {\n    if (this.closed) return\n    // Can't remove compiler plugins, so we just set a flag and noop if closed\n    // https://github.com/webpack/tapable/issues/32#issuecomment-350644466\n    this.closed = true\n    this.eventStream.close()\n  }\n}\n"],"names":["WebpackHotMiddleware","isMiddlewareStats","stats","key","compilation","entrypoints","keys","isMiddlewareFilename","statsToJson","toJson","all","errors","hash","warnings","getStatsForSyncEvent","clientStats","serverStats","hasErrors","ts","EventStream","constructor","clients","Set","everyClient","fn","client","close","clear","handler","add","addEventListener","delete","publish","payload","send","JSON","stringify","compilers","versionInfo","devtoolsFrontendUrl","onClientInvalid","closed","serverLatestStats","action","HMR_ACTIONS_SENT_TO_BROWSER","BUILDING","onClientDone","statsResult","clientLatestStats","Date","now","publishStats","onServerInvalid","onServerDone","onEdgeServerInvalid","middlewareLatestStats","onEdgeServerDone","onHMR","eventStream","syncStats","middlewareStats","SYNC","debug","moduleTrace","BUILT","hooks","invalid","tap","done"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1985, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1990, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/dev/on-demand-entry-handler.ts"],"sourcesContent":["import type ws from 'next/dist/compiled/ws'\nimport type { webpack } from 'next/dist/compiled/webpack/webpack'\nimport type { NextConfigComplete } from '../config-shared'\nimport type {\n  DynamicParamTypesShort,\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../app-render/types'\nimport type { CompilerNameValues } from '../../shared/lib/constants'\nimport type { RouteDefinition } from '../route-definitions/route-definition'\nimport type HotReloaderWebpack from './hot-reloader-webpack'\n\nimport createDebug from 'next/dist/compiled/debug'\nimport { EventEmitter } from 'events'\nimport { findPageFile } from '../lib/find-page-file'\nimport {\n  getStaticInfoIncludingLayouts,\n  runDependingOnPageType,\n} from '../../build/entries'\nimport { join, posix } from 'path'\nimport { normalizePathSep } from '../../shared/lib/page-path/normalize-path-sep'\nimport { normalizePagePath } from '../../shared/lib/page-path/normalize-page-path'\nimport { ensureLeadingSlash } from '../../shared/lib/page-path/ensure-leading-slash'\nimport { removePagePathTail } from '../../shared/lib/page-path/remove-page-path-tail'\nimport { reportTrigger } from '../../build/output'\nimport getRouteFromEntrypoint from '../get-route-from-entrypoint'\nimport {\n  isInstrumentationHookFile,\n  isInstrumentationHookFilename,\n  isMiddlewareFile,\n  isMiddlewareFilename,\n} from '../../build/utils'\nimport { PageNotFoundError, stringifyError } from '../../shared/lib/utils'\nimport {\n  COMPILER_INDEXES,\n  COMPILER_NAMES,\n  RSC_MODULE_TYPES,\n  UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n} from '../../shared/lib/constants'\nimport { PAGE_SEGMENT_KEY } from '../../shared/lib/segment'\nimport { HMR_ACTIONS_SENT_TO_BROWSER } from './hot-reloader-types'\nimport { isAppPageRouteDefinition } from '../route-definitions/app-page-route-definition'\nimport { scheduleOnNextTick } from '../../lib/scheduler'\nimport { Batcher } from '../../lib/batcher'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { PAGE_TYPES } from '../../lib/page-types'\nimport { getNextFlightSegmentPath } from '../../client/flight-data-helpers'\n\nconst debug = createDebug('next:on-demand-entry-handler')\n\n/**\n * Returns object keys with type inferred from the object key\n */\nconst keys = Object.keys as <T>(o: T) => Extract<keyof T, string>[]\n\nconst COMPILER_KEYS = keys(COMPILER_INDEXES)\n\nfunction treePathToEntrypoint(\n  segmentPath: FlightSegmentPath,\n  parentPath?: string\n): string {\n  const [parallelRouteKey, segment] = segmentPath\n\n  // TODO-APP: modify this path to cover parallelRouteKey convention\n  const path =\n    (parentPath ? parentPath + '/' : '') +\n    (parallelRouteKey !== 'children' && !segment.startsWith('@')\n      ? `@${parallelRouteKey}/`\n      : '') +\n    (segment === '' ? 'page' : segment)\n\n  // Last segment\n  if (segmentPath.length === 2) {\n    return path\n  }\n\n  const childSegmentPath = getNextFlightSegmentPath(segmentPath)\n  return treePathToEntrypoint(childSegmentPath, path)\n}\n\nfunction convertDynamicParamTypeToSyntax(\n  dynamicParamTypeShort: DynamicParamTypesShort,\n  param: string\n) {\n  switch (dynamicParamTypeShort) {\n    case 'c':\n    case 'ci':\n      return `[...${param}]`\n    case 'oc':\n      return `[[...${param}]]`\n    case 'd':\n    case 'di':\n      return `[${param}]`\n    default:\n      throw new Error('Unknown dynamic param type')\n  }\n}\n\n/**\n * format: {compiler type}@{page type}@{page path}\n * e.g. client@pages@/index\n * e.g. server@app@app/page\n *\n * This guarantees the uniqueness for each page, to avoid conflicts between app/ and pages/\n */\n\nexport function getEntryKey(\n  compilerType: CompilerNameValues,\n  pageBundleType: PAGE_TYPES,\n  page: string\n) {\n  // TODO: handle the /children slot better\n  // this is a quick hack to handle when children is provided as children/page instead of /page\n  const pageKey = page.replace(/(@[^/]+)\\/children/g, '$1')\n  return `${compilerType}@${pageBundleType}@${pageKey}`\n}\n\nfunction getPageBundleType(pageBundlePath: string): PAGE_TYPES {\n  // Handle special case for /_error\n  if (pageBundlePath === '/_error') return PAGE_TYPES.PAGES\n  if (isMiddlewareFilename(pageBundlePath)) return PAGE_TYPES.ROOT\n  return pageBundlePath.startsWith('pages/')\n    ? PAGE_TYPES.PAGES\n    : pageBundlePath.startsWith('app/')\n      ? PAGE_TYPES.APP\n      : PAGE_TYPES.ROOT\n}\n\nfunction getEntrypointsFromTree(\n  tree: FlightRouterState,\n  isFirst: boolean,\n  parentPath: string[] = []\n) {\n  const [segment, parallelRoutes] = tree\n\n  const currentSegment = Array.isArray(segment)\n    ? convertDynamicParamTypeToSyntax(segment[2], segment[0])\n    : segment\n\n  const isPageSegment = currentSegment.startsWith(PAGE_SEGMENT_KEY)\n\n  const currentPath = [...parentPath, isPageSegment ? '' : currentSegment]\n\n  if (!isFirst && isPageSegment) {\n    // TODO get rid of '' at the start of tree\n    return [treePathToEntrypoint(currentPath.slice(1))]\n  }\n\n  return Object.keys(parallelRoutes).reduce(\n    (paths: string[], key: string): string[] => {\n      const childTree = parallelRoutes[key]\n      const childPages = getEntrypointsFromTree(childTree, false, [\n        ...currentPath,\n        key,\n      ])\n      return [...paths, ...childPages]\n    },\n    []\n  )\n}\n\nexport const ADDED = Symbol('added')\nexport const BUILDING = Symbol('building')\nexport const BUILT = Symbol('built')\n\ninterface EntryType {\n  /**\n   * Tells if a page is scheduled to be disposed.\n   */\n  dispose?: boolean\n  /**\n   * Timestamp with the last time the page was active.\n   */\n  lastActiveTime?: number\n  /**\n   * Page build status.\n   */\n  status?: typeof ADDED | typeof BUILDING | typeof BUILT\n\n  /**\n   * Path to the page file relative to the dist folder with no extension.\n   * For example: `pages/about/index`\n   */\n  bundlePath: string\n\n  /**\n   * Webpack request to create a dependency for.\n   */\n  request: string\n}\n\n// Shadowing check in ESLint does not account for enum\n// eslint-disable-next-line no-shadow\nexport const enum EntryTypes {\n  ENTRY,\n  CHILD_ENTRY,\n}\ninterface Entry extends EntryType {\n  type: EntryTypes.ENTRY\n  /**\n   * The absolute page to the page file. Used for detecting if the file was removed. For example:\n   * `/Users/Rick/project/pages/about/index.js`\n   */\n  absolutePagePath: string\n  /**\n   * All parallel pages that match the same entry, for example:\n   * ['/parallel/@bar/nested/@a/page', '/parallel/@bar/nested/@b/page', '/parallel/@foo/nested/@a/page', '/parallel/@foo/nested/@b/page']\n   */\n  appPaths: ReadonlyArray<string> | null\n}\n\ninterface ChildEntry extends EntryType {\n  type: EntryTypes.CHILD_ENTRY\n  /**\n   * Which parent entries use this childEntry.\n   */\n  parentEntries: Set<string>\n  /**\n   * The absolute page to the entry file. Used for detecting if the file was removed. For example:\n   * `/Users/Rick/project/app/about/layout.js`\n   */\n  absoluteEntryFilePath?: string\n}\n\nconst entriesMap: Map<\n  string,\n  {\n    /**\n     * The key composed of the compiler name and the page. For example:\n     * `edge-server/about`\n     */\n    [entryName: string]: Entry | ChildEntry\n  }\n> = new Map()\n\n// remove /server from end of output for server compiler\nconst normalizeOutputPath = (dir: string) => dir.replace(/[/\\\\]server$/, '')\n\nexport const getEntries = (\n  dir: string\n): NonNullable<ReturnType<(typeof entriesMap)['get']>> => {\n  dir = normalizeOutputPath(dir)\n  const entries = entriesMap.get(dir) || {}\n  entriesMap.set(dir, entries)\n  return entries\n}\n\nconst invalidators: Map<string, Invalidator> = new Map()\n\nexport const getInvalidator = (dir: string) => {\n  dir = normalizeOutputPath(dir)\n  return invalidators.get(dir)\n}\n\nconst doneCallbacks: EventEmitter = new EventEmitter()\nconst lastClientAccessPages = ['']\nconst lastServerAccessPagesForAppDir = ['']\n\ntype BuildingTracker = Set<CompilerNameValues>\ntype RebuildTracker = Set<CompilerNameValues>\n\n// Make sure only one invalidation happens at a time\n// Otherwise, webpack hash gets changed and it'll force the client to reload.\nclass Invalidator {\n  private multiCompiler: webpack.MultiCompiler\n\n  private building: BuildingTracker = new Set()\n  private rebuildAgain: RebuildTracker = new Set()\n\n  constructor(multiCompiler: webpack.MultiCompiler) {\n    this.multiCompiler = multiCompiler\n  }\n\n  public shouldRebuildAll() {\n    return this.rebuildAgain.size > 0\n  }\n\n  invalidate(compilerKeys: typeof COMPILER_KEYS = COMPILER_KEYS): void {\n    for (const key of compilerKeys) {\n      // If there's a current build is processing, we won't abort it by invalidating.\n      // (If aborted, it'll cause a client side hard reload)\n      // But let it to invalidate just after the completion.\n      // So, it can re-build the queued pages at once.\n\n      if (this.building.has(key)) {\n        this.rebuildAgain.add(key)\n        continue\n      }\n\n      this.building.add(key)\n      this.multiCompiler.compilers[COMPILER_INDEXES[key]].watching?.invalidate()\n    }\n  }\n\n  public startBuilding(compilerKey: keyof typeof COMPILER_INDEXES) {\n    this.building.add(compilerKey)\n  }\n\n  public doneBuilding(compilerKeys: typeof COMPILER_KEYS = []) {\n    const rebuild: typeof COMPILER_KEYS = []\n    for (const key of compilerKeys) {\n      this.building.delete(key)\n\n      if (this.rebuildAgain.has(key)) {\n        rebuild.push(key)\n        this.rebuildAgain.delete(key)\n      }\n    }\n    this.invalidate(rebuild)\n  }\n\n  public willRebuild(compilerKey: keyof typeof COMPILER_INDEXES) {\n    return this.rebuildAgain.has(compilerKey)\n  }\n}\n\nfunction disposeInactiveEntries(\n  entries: NonNullable<ReturnType<(typeof entriesMap)['get']>>,\n  maxInactiveAge: number\n) {\n  Object.keys(entries).forEach((entryKey) => {\n    const entryData = entries[entryKey]\n    const { lastActiveTime, status, dispose, bundlePath } = entryData\n\n    // TODO-APP: implement disposing of CHILD_ENTRY\n    if (entryData.type === EntryTypes.CHILD_ENTRY) {\n      return\n    }\n\n    // For the root middleware and the instrumentation hook files,\n    // we don't dispose them periodically as it's needed for every request.\n    if (\n      isMiddlewareFilename(bundlePath) ||\n      isInstrumentationHookFilename(bundlePath)\n    ) {\n      return\n    }\n\n    if (dispose)\n      // Skip pages already scheduled for disposing\n      return\n\n    // This means this entry is currently building or just added\n    // We don't need to dispose those entries.\n    if (status !== BUILT) return\n\n    // We should not build the last accessed page even we didn't get any pings\n    // Sometimes, it's possible our XHR ping to wait before completing other requests.\n    // In that case, we should not dispose the current viewing page\n    if (\n      lastClientAccessPages.includes(entryKey) ||\n      lastServerAccessPagesForAppDir.includes(entryKey)\n    )\n      return\n\n    if (lastActiveTime && Date.now() - lastActiveTime > maxInactiveAge) {\n      entries[entryKey].dispose = true\n    }\n  })\n}\n\n// Normalize both app paths and page paths\nfunction tryToNormalizePagePath(page: string) {\n  try {\n    return normalizePagePath(page)\n  } catch (err) {\n    console.error(err)\n    throw new PageNotFoundError(page)\n  }\n}\n\ninterface PagePathData {\n  filename: string\n  bundlePath: string\n  page: string\n}\n\n/**\n * Attempts to find a page file path from the given pages absolute directory,\n * a page and allowed extensions. If the page can't be found it will throw an\n * error. It defaults the `/_error` page to Next.js internal error page.\n *\n * @param rootDir Absolute path to the project root.\n * @param page The page normalized (it will be denormalized).\n * @param extensions Array of page extensions.\n * @param pagesDir Absolute path to the pages folder with trailing `/pages`.\n * @param appDir Absolute path to the app folder with trailing `/app`.\n */\nexport async function findPagePathData(\n  rootDir: string,\n  page: string,\n  extensions: string[],\n  pagesDir?: string,\n  appDir?: string\n): Promise<PagePathData> {\n  const normalizedPagePath = tryToNormalizePagePath(page)\n  let pagePath: string | null = null\n\n  const isInstrumentation = isInstrumentationHookFile(normalizedPagePath)\n  if (isMiddlewareFile(normalizedPagePath) || isInstrumentation) {\n    pagePath = await findPageFile(\n      rootDir,\n      normalizedPagePath,\n      extensions,\n      false\n    )\n\n    if (!pagePath) {\n      throw new PageNotFoundError(normalizedPagePath)\n    }\n\n    const pageUrl = ensureLeadingSlash(\n      removePagePathTail(normalizePathSep(pagePath), {\n        extensions,\n      })\n    )\n\n    let bundlePath = normalizedPagePath\n    let pageKey = posix.normalize(pageUrl)\n\n    if (isInstrumentation) {\n      bundlePath = bundlePath.replace('/src', '')\n      pageKey = page.replace('/src', '')\n    }\n\n    return {\n      filename: join(rootDir, pagePath),\n      bundlePath: bundlePath.slice(1),\n      page: pageKey,\n    }\n  }\n\n  // Check appDir first falling back to pagesDir\n  if (appDir) {\n    if (page === UNDERSCORE_NOT_FOUND_ROUTE_ENTRY) {\n      const notFoundPath = await findPageFile(\n        appDir,\n        'not-found',\n        extensions,\n        true\n      )\n      if (notFoundPath) {\n        return {\n          filename: join(appDir, notFoundPath),\n          bundlePath: `app${UNDERSCORE_NOT_FOUND_ROUTE_ENTRY}`,\n          page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n        }\n      }\n\n      return {\n        filename: require.resolve(\n          'next/dist/client/components/not-found-error'\n        ),\n        bundlePath: `app${UNDERSCORE_NOT_FOUND_ROUTE_ENTRY}`,\n        page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n      }\n    }\n    pagePath = await findPageFile(appDir, normalizedPagePath, extensions, true)\n    if (pagePath) {\n      const pageUrl = ensureLeadingSlash(\n        removePagePathTail(normalizePathSep(pagePath), {\n          keepIndex: true,\n          extensions,\n        })\n      )\n\n      return {\n        filename: join(appDir, pagePath),\n        bundlePath: posix.join('app', pageUrl),\n        page: posix.normalize(pageUrl),\n      }\n    }\n  }\n\n  if (!pagePath && pagesDir) {\n    pagePath = await findPageFile(\n      pagesDir,\n      normalizedPagePath,\n      extensions,\n      false\n    )\n  }\n\n  if (pagePath !== null && pagesDir) {\n    const pageUrl = ensureLeadingSlash(\n      removePagePathTail(normalizePathSep(pagePath), {\n        extensions,\n      })\n    )\n\n    return {\n      filename: join(pagesDir, pagePath),\n      bundlePath: posix.join('pages', normalizePagePath(pageUrl)),\n      page: posix.normalize(pageUrl),\n    }\n  }\n\n  if (page === '/_error') {\n    return {\n      filename: require.resolve('next/dist/pages/_error'),\n      bundlePath: page,\n      page: normalizePathSep(page),\n    }\n  } else {\n    throw new PageNotFoundError(normalizedPagePath)\n  }\n}\n\nexport function onDemandEntryHandler({\n  hotReloader,\n  maxInactiveAge,\n  multiCompiler,\n  nextConfig,\n  pagesBufferLength,\n  pagesDir,\n  rootDir,\n  appDir,\n}: {\n  hotReloader: HotReloaderWebpack\n  maxInactiveAge: number\n  multiCompiler: webpack.MultiCompiler\n  nextConfig: NextConfigComplete\n  pagesBufferLength: number\n  pagesDir?: string\n  rootDir: string\n  appDir?: string\n}) {\n  const hasAppDir = !!appDir\n  let curInvalidator: Invalidator = getInvalidator(\n    multiCompiler.outputPath\n  ) as any\n  const curEntries = getEntries(multiCompiler.outputPath) as any\n\n  if (!curInvalidator) {\n    curInvalidator = new Invalidator(multiCompiler)\n    invalidators.set(multiCompiler.outputPath, curInvalidator)\n  }\n\n  const startBuilding = (compilation: webpack.Compilation) => {\n    const compilationName = compilation.name as any as CompilerNameValues\n    curInvalidator.startBuilding(compilationName)\n  }\n  for (const compiler of multiCompiler.compilers) {\n    compiler.hooks.make.tap('NextJsOnDemandEntries', startBuilding)\n  }\n\n  function getPagePathsFromEntrypoints(\n    type: CompilerNameValues,\n    entrypoints: Map<string, { name?: string | null }>\n  ) {\n    const pagePaths: string[] = []\n    for (const entrypoint of entrypoints.values()) {\n      const page = getRouteFromEntrypoint(entrypoint.name!, hasAppDir)\n\n      if (page) {\n        const pageBundleType = entrypoint.name?.startsWith('app/')\n          ? PAGE_TYPES.APP\n          : PAGE_TYPES.PAGES\n        pagePaths.push(getEntryKey(type, pageBundleType, page))\n      } else if (\n        isMiddlewareFilename(entrypoint.name) ||\n        isInstrumentationHookFilename(entrypoint.name)\n      ) {\n        pagePaths.push(\n          getEntryKey(type, PAGE_TYPES.ROOT, `/${entrypoint.name}`)\n        )\n      }\n    }\n    return pagePaths\n  }\n\n  for (const compiler of multiCompiler.compilers) {\n    compiler.hooks.done.tap('NextJsOnDemandEntries', () =>\n      getInvalidator(compiler.outputPath)?.doneBuilding([\n        compiler.name as keyof typeof COMPILER_INDEXES,\n      ])\n    )\n  }\n\n  multiCompiler.hooks.done.tap('NextJsOnDemandEntries', (multiStats) => {\n    const [clientStats, serverStats, edgeServerStats] = multiStats.stats\n    const entryNames = [\n      ...getPagePathsFromEntrypoints(\n        COMPILER_NAMES.client,\n        clientStats.compilation.entrypoints\n      ),\n      ...getPagePathsFromEntrypoints(\n        COMPILER_NAMES.server,\n        serverStats.compilation.entrypoints\n      ),\n      ...(edgeServerStats\n        ? getPagePathsFromEntrypoints(\n            COMPILER_NAMES.edgeServer,\n            edgeServerStats.compilation.entrypoints\n          )\n        : []),\n    ]\n\n    for (const name of entryNames) {\n      const entry = curEntries[name]\n      if (!entry) {\n        continue\n      }\n\n      if (entry.status !== BUILDING) {\n        continue\n      }\n\n      entry.status = BUILT\n      doneCallbacks.emit(name)\n    }\n\n    getInvalidator(multiCompiler.outputPath)?.doneBuilding([...COMPILER_KEYS])\n  })\n\n  const pingIntervalTime = Math.max(1000, Math.min(5000, maxInactiveAge))\n\n  setInterval(function () {\n    disposeInactiveEntries(curEntries, maxInactiveAge)\n  }, pingIntervalTime + 1000).unref()\n\n  function handleAppDirPing(tree: FlightRouterState): void {\n    const pages = getEntrypointsFromTree(tree, true)\n\n    for (const page of pages) {\n      for (const compilerType of [\n        COMPILER_NAMES.client,\n        COMPILER_NAMES.server,\n        COMPILER_NAMES.edgeServer,\n      ]) {\n        const entryKey = getEntryKey(compilerType, PAGE_TYPES.APP, `/${page}`)\n        const entryInfo = curEntries[entryKey]\n\n        // If there's no entry, it may have been invalidated and needs to be re-built.\n        if (!entryInfo) {\n          // if (page !== lastEntry) client pings, but there's no entry for page\n          continue\n        }\n\n        // We don't need to maintain active state of anything other than BUILT entries\n        if (entryInfo.status !== BUILT) continue\n\n        // If there's an entryInfo\n        if (!lastServerAccessPagesForAppDir.includes(entryKey)) {\n          lastServerAccessPagesForAppDir.unshift(entryKey)\n\n          // Maintain the buffer max length\n          // TODO: verify that the current pageKey is not at the end of the array as multiple entrypoints can exist\n          if (lastServerAccessPagesForAppDir.length > pagesBufferLength) {\n            lastServerAccessPagesForAppDir.pop()\n          }\n        }\n        entryInfo.lastActiveTime = Date.now()\n        entryInfo.dispose = false\n      }\n    }\n  }\n\n  function handlePing(pg: string): void {\n    const page = normalizePathSep(pg)\n    for (const compilerType of [\n      COMPILER_NAMES.client,\n      COMPILER_NAMES.server,\n      COMPILER_NAMES.edgeServer,\n    ]) {\n      const entryKey = getEntryKey(compilerType, PAGE_TYPES.PAGES, page)\n      const entryInfo = curEntries[entryKey]\n\n      // If there's no entry, it may have been invalidated and needs to be re-built.\n      if (!entryInfo) {\n        // if (page !== lastEntry) client pings, but there's no entry for page\n        if (compilerType === COMPILER_NAMES.client) {\n          return\n        }\n        continue\n      }\n\n      // We don't need to maintain active state of anything other than BUILT entries\n      if (entryInfo.status !== BUILT) continue\n\n      // If there's an entryInfo\n      if (!lastClientAccessPages.includes(entryKey)) {\n        lastClientAccessPages.unshift(entryKey)\n\n        // Maintain the buffer max length\n        if (lastClientAccessPages.length > pagesBufferLength) {\n          lastClientAccessPages.pop()\n        }\n      }\n      entryInfo.lastActiveTime = Date.now()\n      entryInfo.dispose = false\n    }\n    return\n  }\n\n  async function ensurePageImpl({\n    page,\n    appPaths,\n    definition,\n    isApp,\n    url,\n  }: {\n    page: string\n    appPaths: ReadonlyArray<string> | null\n    definition: RouteDefinition | undefined\n    isApp: boolean | undefined\n    url?: string\n  }): Promise<void> {\n    const stalledTime = 60\n    const stalledEnsureTimeout = setTimeout(() => {\n      debug(\n        `Ensuring ${page} has taken longer than ${stalledTime}s, if this continues to stall this may be a bug`\n      )\n    }, stalledTime * 1000)\n\n    try {\n      let route: Pick<RouteDefinition, 'filename' | 'bundlePath' | 'page'>\n      if (definition) {\n        route = definition\n      } else {\n        route = await findPagePathData(\n          rootDir,\n          page,\n          nextConfig.pageExtensions,\n          pagesDir,\n          appDir\n        )\n      }\n\n      const isInsideAppDir = !!appDir && route.filename.startsWith(appDir)\n\n      if (typeof isApp === 'boolean' && isApp !== isInsideAppDir) {\n        Error.stackTraceLimit = 15\n        throw new Error(\n          `Ensure bailed, found path \"${\n            route.page\n          }\" does not match ensure type (${isApp ? 'app' : 'pages'})`\n        )\n      }\n\n      const pageBundleType = getPageBundleType(route.bundlePath)\n      const addEntry = (\n        compilerType: CompilerNameValues\n      ): {\n        entryKey: string\n        newEntry: boolean\n        shouldInvalidate: boolean\n      } => {\n        const entryKey = getEntryKey(compilerType, pageBundleType, route.page)\n        if (\n          curEntries[entryKey] &&\n          // there can be an overlap in the entryKey for the instrumentation hook file and a page named the same\n          // this is a quick fix to support this scenario by overwriting the instrumentation hook entry, since we only use it one time\n          // any changes to the instrumentation hook file will require a restart of the dev server anyway\n          !isInstrumentationHookFilename(curEntries[entryKey].bundlePath)\n        ) {\n          curEntries[entryKey].dispose = false\n          curEntries[entryKey].lastActiveTime = Date.now()\n          if (curEntries[entryKey].status === BUILT) {\n            return {\n              entryKey,\n              newEntry: false,\n              shouldInvalidate: false,\n            }\n          }\n\n          return {\n            entryKey,\n            newEntry: false,\n            shouldInvalidate: true,\n          }\n        }\n\n        curEntries[entryKey] = {\n          type: EntryTypes.ENTRY,\n          appPaths,\n          absolutePagePath: route.filename,\n          request: route.filename,\n          bundlePath: route.bundlePath,\n          dispose: false,\n          lastActiveTime: Date.now(),\n          status: ADDED,\n        }\n        return {\n          entryKey: entryKey,\n          newEntry: true,\n          shouldInvalidate: true,\n        }\n      }\n\n      const staticInfo = await getStaticInfoIncludingLayouts({\n        page,\n        pageFilePath: route.filename,\n        isInsideAppDir,\n        pageExtensions: nextConfig.pageExtensions,\n        isDev: true,\n        config: nextConfig,\n        appDir,\n      })\n\n      const added = new Map<CompilerNameValues, ReturnType<typeof addEntry>>()\n      const isServerComponent =\n        isInsideAppDir && staticInfo.rsc !== RSC_MODULE_TYPES.client\n\n      runDependingOnPageType({\n        page: route.page,\n        pageRuntime: staticInfo.runtime,\n        pageType: pageBundleType,\n        onClient: () => {\n          // Skip adding the client entry for app / Server Components.\n          if (isServerComponent || isInsideAppDir) {\n            return\n          }\n          added.set(COMPILER_NAMES.client, addEntry(COMPILER_NAMES.client))\n        },\n        onServer: () => {\n          added.set(COMPILER_NAMES.server, addEntry(COMPILER_NAMES.server))\n          const edgeServerEntry = getEntryKey(\n            COMPILER_NAMES.edgeServer,\n            pageBundleType,\n            route.page\n          )\n          if (\n            curEntries[edgeServerEntry] &&\n            !isInstrumentationHookFile(route.page)\n          ) {\n            // Runtime switched from edge to server\n            delete curEntries[edgeServerEntry]\n          }\n        },\n        onEdgeServer: () => {\n          added.set(\n            COMPILER_NAMES.edgeServer,\n            addEntry(COMPILER_NAMES.edgeServer)\n          )\n          const serverEntry = getEntryKey(\n            COMPILER_NAMES.server,\n            pageBundleType,\n            route.page\n          )\n          if (\n            curEntries[serverEntry] &&\n            !isInstrumentationHookFile(route.page)\n          ) {\n            // Runtime switched from server to edge\n            delete curEntries[serverEntry]\n          }\n        },\n      })\n\n      const addedValues = [...added.values()]\n      const entriesThatShouldBeInvalidated = [...added.entries()].filter(\n        ([, entry]) => entry.shouldInvalidate\n      )\n      const hasNewEntry = addedValues.some((entry) => entry.newEntry)\n\n      if (hasNewEntry) {\n        const routePage = isApp ? route.page : normalizeAppPath(route.page)\n        reportTrigger(routePage, url)\n      }\n\n      if (entriesThatShouldBeInvalidated.length > 0) {\n        const invalidatePromise = Promise.all(\n          entriesThatShouldBeInvalidated.map(([compilerKey, { entryKey }]) => {\n            return new Promise<void>((resolve, reject) => {\n              doneCallbacks.once(entryKey, (err: Error) => {\n                if (err) {\n                  return reject(err)\n                }\n\n                // If the invalidation also triggers a rebuild, we need to\n                // wait for that additional build to prevent race conditions.\n                const needsRebuild = curInvalidator.willRebuild(compilerKey)\n                if (needsRebuild) {\n                  doneCallbacks.once(entryKey, (rebuildErr: Error) => {\n                    if (rebuildErr) {\n                      return reject(rebuildErr)\n                    }\n                    resolve()\n                  })\n                } else {\n                  resolve()\n                }\n              })\n            })\n          })\n        )\n\n        curInvalidator.invalidate([...added.keys()])\n        await invalidatePromise\n      }\n    } finally {\n      clearTimeout(stalledEnsureTimeout)\n    }\n  }\n\n  type EnsurePageOptions = {\n    page: string\n    appPaths?: ReadonlyArray<string> | null\n    definition?: RouteDefinition\n    isApp?: boolean\n    url?: string\n  }\n\n  // Make sure that we won't have multiple invalidations ongoing concurrently.\n  const batcher = Batcher.create<EnsurePageOptions, void, string>({\n    // The cache key here is composed of the elements that affect the\n    // compilation, namely, the page, whether it's client only, and whether\n    // it's an app page. This ensures that we don't have multiple compilations\n    // for the same page happening concurrently.\n    //\n    // We don't include the whole match because it contains match specific\n    // parameters (like route params) that would just bust this cache. Any\n    // details that would possibly bust the cache should be listed here.\n    cacheKeyFn: (options) => JSON.stringify(options),\n    // Schedule the invocation of the ensurePageImpl function on the next tick.\n    schedulerFn: scheduleOnNextTick,\n  })\n\n  return {\n    async ensurePage({\n      page,\n      appPaths = null,\n      definition,\n      isApp,\n      url,\n    }: EnsurePageOptions) {\n      // If the route is actually an app page route, then we should have access\n      // to the app route definition, and therefore, the appPaths from it.\n      if (!appPaths && definition && isAppPageRouteDefinition(definition)) {\n        appPaths = definition.appPaths\n      }\n\n      // Wrap the invocation of the ensurePageImpl function in the pending\n      // wrapper, which will ensure that we don't have multiple compilations\n      // for the same page happening concurrently.\n      return batcher.batch({ page, appPaths, definition, isApp }, async () => {\n        await ensurePageImpl({\n          page,\n          appPaths,\n          definition,\n          isApp,\n          url,\n        })\n      })\n    },\n    onHMR(client: ws, getHmrServerError: () => Error | null) {\n      let bufferedHmrServerError: Error | null = null\n\n      client.addEventListener('close', () => {\n        bufferedHmrServerError = null\n      })\n      client.addEventListener('message', ({ data }) => {\n        try {\n          const error = getHmrServerError()\n\n          // New error occurred: buffered error is flushed and new error occurred\n          if (!bufferedHmrServerError && error) {\n            hotReloader.send({\n              action: HMR_ACTIONS_SENT_TO_BROWSER.SERVER_ERROR,\n              errorJSON: stringifyError(error),\n            })\n            bufferedHmrServerError = null\n          }\n\n          const parsedData = JSON.parse(\n            typeof data !== 'string' ? data.toString() : data\n          )\n\n          if (parsedData.event === 'ping') {\n            if (parsedData.appDirRoute) {\n              handleAppDirPing(parsedData.tree)\n            } else {\n              handlePing(parsedData.page)\n            }\n          }\n        } catch {}\n      })\n    },\n  }\n}\n"],"names":["ADDED","BUILDING","BUILT","EntryTypes","findPagePathData","getEntries","getEntryKey","getInvalidator","onDemandEntryHandler","debug","createDebug","keys","Object","COMPILER_KEYS","COMPILER_INDEXES","treePathToEntrypoint","segmentPath","parentPath","parallelRouteKey","segment","path","startsWith","length","childSegmentPath","getNextFlightSegmentPath","convertDynamicParamTypeToSyntax","dynamicParamTypeShort","param","Error","compilerType","pageBundleType","page","pageKey","replace","getPageBundleType","pageBundlePath","PAGE_TYPES","PAGES","isMiddlewareFilename","ROOT","APP","getEntrypointsFromTree","tree","isFirst","parallelRoutes","currentSegment","Array","isArray","isPageSegment","PAGE_SEGMENT_KEY","currentPath","slice","reduce","paths","key","childTree","childPages","Symbol","entriesMap","Map","normalizeOutputPath","dir","entries","get","set","invalidators","doneCallbacks","EventEmitter","lastClientAccessPages","lastServerAccessPagesForAppDir","Invalidator","constructor","multiCompiler","building","Set","rebuildAgain","shouldRebuildAll","size","invalidate","compilerKeys","has","add","compilers","watching","startBuilding","compilerKey","doneBuilding","rebuild","delete","push","willRebuild","disposeInactiveEntries","maxInactiveAge","forEach","entryKey","entryData","lastActiveTime","status","dispose","bundlePath","type","isInstrumentationHookFilename","includes","Date","now","tryToNormalizePagePath","normalizePagePath","err","console","error","PageNotFoundError","rootDir","extensions","pagesDir","appDir","normalizedPagePath","pagePath","isInstrumentation","isInstrumentationHookFile","isMiddlewareFile","findPageFile","pageUrl","ensureLeadingSlash","removePagePathTail","normalizePathSep","posix","normalize","filename","join","UNDERSCORE_NOT_FOUND_ROUTE_ENTRY","notFoundPath","require","resolve","keepIndex","hotReloader","nextConfig","pagesBufferLength","hasAppDir","curInvalidator","outputPath","curEntries","compilation","compilationName","name","compiler","hooks","make","tap","getPagePathsFromEntrypoints","entrypoints","pagePaths","entrypoint","values","getRouteFromEntrypoint","done","multiStats","clientStats","serverStats","edgeServerStats","stats","entryNames","COMPILER_NAMES","client","server","edgeServer","entry","emit","pingIntervalTime","Math","max","min","setInterval","unref","handleAppDirPing","pages","entryInfo","unshift","pop","handlePing","pg","ensurePageImpl","appPaths","definition","isApp","url","stalledTime","stalledEnsureTimeout","setTimeout","route","pageExtensions","isInsideAppDir","stackTraceLimit","addEntry","newEntry","shouldInvalidate","absolutePagePath","request","staticInfo","getStaticInfoIncludingLayouts","pageFilePath","isDev","config","added","isServerComponent","rsc","RSC_MODULE_TYPES","runDependingOnPageType","pageRuntime","runtime","pageType","onClient","onServer","edgeServerEntry","onEdgeServer","serverEntry","addedValues","entriesThatShouldBeInvalidated","filter","hasNewEntry","some","routePage","normalizeAppPath","reportTrigger","invalidatePromise","Promise","all","map","reject","once","needsRebuild","rebuildErr","clearTimeout","batcher","Batcher","create","cacheKeyFn","options","JSON","stringify","schedulerFn","scheduleOnNextTick","ensurePage","isAppPageRouteDefinition","batch","onHMR","getHmrServerError","bufferedHmrServerError","addEventListener","data","send","action","HMR_ACTIONS_SENT_TO_BROWSER","SERVER_ERROR","errorJSON","stringifyError","parsedData","parse","toString","event","appDirRoute"],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAiKaA,KAAK,EAAA;eAALA;;IACAC,QAAQ,EAAA;eAARA;;IACAC,KAAK,EAAA;eAALA;;IA8BKC,UAAU,EAAA;eAAVA;;IAmMIC,gBAAgB,EAAA;eAAhBA;;IAtJTC,UAAU,EAAA;eAAVA;;IApIGC,WAAW,EAAA;eAAXA;;IA+IHC,cAAc,EAAA;eAAdA;;IAmQGC,oBAAoB,EAAA;eAApBA;;;8DAhfQ;wBACK;8BACA;yBAItB;sBACqB;kCACK;mCACC;oCACC;oCACA;wBACL;+EACK;uBAM5B;wBAC2C;2BAM3C;yBAC0B;kCACW;wCACH;2BACN;yBACX;0BACS;2BACN;mCACc;;;;;;AAEzC,MAAMC,QAAQC,CAAAA,GAAAA,OAAAA,OAAW,EAAC;AAE1B;;CAEC,GACD,MAAMC,OAAOC,OAAOD,IAAI;AAExB,MAAME,gBAAgBF,KAAKG,WAAAA,gBAAgB;AAE3C,SAASC,qBACPC,WAA8B,EAC9BC,UAAmB;IAEnB,MAAM,CAACC,kBAAkBC,QAAQ,GAAGH;IAEpC,kEAAkE;IAClE,MAAMI,OACHH,CAAAA,aAAaA,aAAa,MAAM,EAAC,IACjCC,CAAAA,qBAAqB,cAAc,CAACC,QAAQE,UAAU,CAAC,OACpD,CAAC,CAAC,EAAEH,iBAAiB,CAAC,CAAC,GACvB,EAAC,IACJC,CAAAA,YAAY,KAAK,SAASA,OAAM;IAEnC,eAAe;IACf,IAAIH,YAAYM,MAAM,KAAK,GAAG;QAC5B,OAAOF;IACT;IAEA,MAAMG,mBAAmBC,CAAAA,GAAAA,mBAAAA,wBAAwB,EAACR;IAClD,OAAOD,qBAAqBQ,kBAAkBH;AAChD;AAEA,SAASK,gCACPC,qBAA6C,EAC7CC,KAAa;IAEb,OAAQD;QACN,KAAK;QACL,KAAK;YACH,OAAO,CAAC,IAAI,EAAEC,MAAM,CAAC,CAAC;QACxB,KAAK;YACH,OAAO,CAAC,KAAK,EAAEA,MAAM,EAAE,CAAC;QAC1B,KAAK;QACL,KAAK;YACH,OAAO,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC;QACrB;YACE,MAAM,IAAIC,MAAM;IACpB;AACF;AAUO,SAAStB,YACduB,YAAgC,EAChCC,cAA0B,EAC1BC,IAAY;IAEZ,yCAAyC;IACzC,6FAA6F;IAC7F,MAAMC,UAAUD,KAAKE,OAAO,CAAC,uBAAuB;IACpD,OAAO,GAAGJ,aAAa,CAAC,EAAEC,eAAe,CAAC,EAAEE,SAAS;AACvD;AAEA,SAASE,kBAAkBC,cAAsB;IAC/C,kCAAkC;IAClC,IAAIA,mBAAmB,WAAW,OAAOC,WAAAA,UAAU,CAACC,KAAK;IACzD,IAAIC,CAAAA,GAAAA,OAAAA,oBAAoB,EAACH,iBAAiB,OAAOC,WAAAA,UAAU,CAACG,IAAI;IAChE,OAAOJ,eAAed,UAAU,CAAC,YAC7Be,WAAAA,UAAU,CAACC,KAAK,GAChBF,eAAed,UAAU,CAAC,UACxBe,WAAAA,UAAU,CAACI,GAAG,GACdJ,WAAAA,UAAU,CAACG,IAAI;AACvB;AAEA,SAASE,uBACPC,IAAuB,EACvBC,OAAgB,EAChB1B,aAAuB,EAAE;IAEzB,MAAM,CAACE,SAASyB,eAAe,GAAGF;IAElC,MAAMG,iBAAiBC,MAAMC,OAAO,CAAC5B,WACjCM,gCAAgCN,OAAO,CAAC,EAAE,EAAEA,OAAO,CAAC,EAAE,IACtDA;IAEJ,MAAM6B,gBAAgBH,eAAexB,UAAU,CAAC4B,SAAAA,gBAAgB;IAEhE,MAAMC,cAAc;WAAIjC;QAAY+B,gBAAgB,KAAKH;KAAe;IAExE,IAAI,CAACF,WAAWK,eAAe;QAC7B,0CAA0C;QAC1C,OAAO;YAACjC,qBAAqBmC,YAAYC,KAAK,CAAC;SAAI;IACrD;IAEA,OAAOvC,OAAOD,IAAI,CAACiC,gBAAgBQ,MAAM,CACvC,CAACC,OAAiBC;QAChB,MAAMC,YAAYX,cAAc,CAACU,IAAI;QACrC,MAAME,aAAaf,uBAAuBc,WAAW,OAAO;eACvDL;YACHI;SACD;QACD,OAAO;eAAID;eAAUG;SAAW;IAClC,GACA,EAAE;AAEN;AAEO,MAAMxD,QAAQyD,OAAO;AACrB,MAAMxD,WAAWwD,OAAO;AACxB,MAAMvD,QAAQuD,OAAO;AA8BrB,IAAWtD,aAAAA,WAAAA,GAAAA,SAAAA,UAAAA;;;WAAAA;;AA+BlB,MAAMuD,aASF,IAAIC;AAER,wDAAwD;AACxD,MAAMC,sBAAsB,CAACC,MAAgBA,IAAI5B,OAAO,CAAC,gBAAgB;AAElE,MAAM5B,aAAa,CACxBwD;IAEAA,MAAMD,oBAAoBC;IAC1B,MAAMC,UAAUJ,WAAWK,GAAG,CAACF,QAAQ,CAAC;IACxCH,WAAWM,GAAG,CAACH,KAAKC;IACpB,OAAOA;AACT;AAEA,MAAMG,eAAyC,IAAIN;AAE5C,MAAMpD,iBAAiB,CAACsD;IAC7BA,MAAMD,oBAAoBC;IAC1B,OAAOI,aAAaF,GAAG,CAACF;AAC1B;AAEA,MAAMK,gBAA8B,IAAIC,QAAAA,YAAY;AACpD,MAAMC,wBAAwB;IAAC;CAAG;AAClC,MAAMC,iCAAiC;IAAC;CAAG;AAK3C,oDAAoD;AACpD,6EAA6E;AAC7E,MAAMC;IAMJC,YAAYC,aAAoC,CAAE;aAH1CC,QAAAA,GAA4B,IAAIC;aAChCC,YAAAA,GAA+B,IAAID;QAGzC,IAAI,CAACF,aAAa,GAAGA;IACvB;IAEOI,mBAAmB;QACxB,OAAO,IAAI,CAACD,YAAY,CAACE,IAAI,GAAG;IAClC;IAEAC,WAAWC,eAAqClE,aAAa,EAAQ;QACnE,KAAK,MAAMyC,OAAOyB,aAAc;gBAY9B;YAXA,+EAA+E;YAC/E,sDAAsD;YACtD,sDAAsD;YACtD,gDAAgD;YAEhD,IAAI,IAAI,CAACN,QAAQ,CAACO,GAAG,CAAC1B,MAAM;gBAC1B,IAAI,CAACqB,YAAY,CAACM,GAAG,CAAC3B;gBACtB;YACF;YAEA,IAAI,CAACmB,QAAQ,CAACQ,GAAG,CAAC3B;aAClB,8DAAA,IAAI,CAACkB,aAAa,CAACU,SAAS,CAACpE,WAAAA,gBAAgB,CAACwC,IAAI,CAAC,CAAC6B,QAAQ,KAAA,OAAA,KAAA,IAA5D,4DAA8DL,UAAU;QAC1E;IACF;IAEOM,cAAcC,WAA0C,EAAE;QAC/D,IAAI,CAACZ,QAAQ,CAACQ,GAAG,CAACI;IACpB;IAEOC,aAAaP,eAAqC,EAAE,EAAE;QAC3D,MAAMQ,UAAgC,EAAE;QACxC,KAAK,MAAMjC,OAAOyB,aAAc;YAC9B,IAAI,CAACN,QAAQ,CAACe,MAAM,CAAClC;YAErB,IAAI,IAAI,CAACqB,YAAY,CAACK,GAAG,CAAC1B,MAAM;gBAC9BiC,QAAQE,IAAI,CAACnC;gBACb,IAAI,CAACqB,YAAY,CAACa,MAAM,CAAClC;YAC3B;QACF;QACA,IAAI,CAACwB,UAAU,CAACS;IAClB;IAEOG,YAAYL,WAA0C,EAAE;QAC7D,OAAO,IAAI,CAACV,YAAY,CAACK,GAAG,CAACK;IAC/B;AACF;AAEA,SAASM,uBACP7B,OAA4D,EAC5D8B,cAAsB;IAEtBhF,OAAOD,IAAI,CAACmD,SAAS+B,OAAO,CAAC,CAACC;QAC5B,MAAMC,YAAYjC,OAAO,CAACgC,SAAS;QACnC,MAAM,EAAEE,cAAc,EAAEC,MAAM,EAAEC,OAAO,EAAEC,UAAU,EAAE,GAAGJ;QAExD,+CAA+C;QAC/C,IAAIA,UAAUK,IAAI,KAAA,GAA6B;YAC7C;QACF;QAEA,8DAA8D;QAC9D,uEAAuE;QACvE,IACE9D,CAAAA,GAAAA,OAAAA,oBAAoB,EAAC6D,eACrBE,CAAAA,GAAAA,OAAAA,6BAA6B,EAACF,aAC9B;YACA;QACF;QAEA,IAAID,SACF,AACA,6CAD6C;QAG/C,4DAA4D;QAC5D,0CAA0C;QAC1C,IAAID,WAAW/F,OAAO;QAEtB,0EAA0E;QAC1E,kFAAkF;QAClF,+DAA+D;QAC/D,IACEkE,sBAAsBkC,QAAQ,CAACR,aAC/BzB,+BAA+BiC,QAAQ,CAACR,WAExC;QAEF,IAAIE,kBAAkBO,KAAKC,GAAG,KAAKR,iBAAiBJ,gBAAgB;YAClE9B,OAAO,CAACgC,SAAS,CAACI,OAAO,GAAG;QAC9B;IACF;AACF;AAEA,0CAA0C;AAC1C,SAASO,uBAAuB1E,IAAY;IAC1C,IAAI;QACF,OAAO2E,CAAAA,GAAAA,mBAAAA,iBAAiB,EAAC3E;IAC3B,EAAE,OAAO4E,KAAK;QACZC,QAAQC,KAAK,CAACF;QACd,MAAM,IAAIG,QAAAA,iBAAiB,CAAC/E;IAC9B;AACF;AAmBO,eAAe3B,iBACpB2G,OAAe,EACfhF,IAAY,EACZiF,UAAoB,EACpBC,QAAiB,EACjBC,MAAe;IAEf,MAAMC,qBAAqBV,uBAAuB1E;IAClD,IAAIqF,WAA0B;IAE9B,MAAMC,oBAAoBC,CAAAA,GAAAA,OAAAA,yBAAyB,EAACH;IACpD,IAAII,CAAAA,GAAAA,OAAAA,gBAAgB,EAACJ,uBAAuBE,mBAAmB;QAC7DD,WAAW,MAAMI,CAAAA,GAAAA,cAAAA,YAAY,EAC3BT,SACAI,oBACAH,YACA;QAGF,IAAI,CAACI,UAAU;YACb,MAAM,IAAIN,QAAAA,iBAAiB,CAACK;QAC9B;QAEA,MAAMM,UAAUC,CAAAA,GAAAA,oBAAAA,kBAAkB,EAChCC,CAAAA,GAAAA,oBAAAA,kBAAkB,EAACC,CAAAA,GAAAA,kBAAAA,gBAAgB,EAACR,WAAW;YAC7CJ;QACF;QAGF,IAAIb,aAAagB;QACjB,IAAInF,UAAU6F,MAAAA,KAAK,CAACC,SAAS,CAACL;QAE9B,IAAIJ,mBAAmB;YACrBlB,aAAaA,WAAWlE,OAAO,CAAC,QAAQ;YACxCD,UAAUD,KAAKE,OAAO,CAAC,QAAQ;QACjC;QAEA,OAAO;YACL8F,UAAUC,CAAAA,GAAAA,MAAAA,IAAI,EAACjB,SAASK;YACxBjB,YAAYA,WAAWhD,KAAK,CAAC;YAC7BpB,MAAMC;QACR;IACF;IAEA,8CAA8C;IAC9C,IAAIkF,QAAQ;QACV,IAAInF,SAASkG,WAAAA,gCAAgC,EAAE;YAC7C,MAAMC,eAAe,MAAMV,CAAAA,GAAAA,cAAAA,YAAY,EACrCN,QACA,aACAF,YACA;YAEF,IAAIkB,cAAc;gBAChB,OAAO;oBACLH,UAAUC,CAAAA,GAAAA,MAAAA,IAAI,EAACd,QAAQgB;oBACvB/B,YAAY,CAAC,GAAG,EAAE8B,WAAAA,gCAAgC,EAAE;oBACpDlG,MAAMkG,WAAAA,gCAAgC;gBACxC;YACF;YAEA,OAAO;gBACLF,QAAAA,EAAUI,QAAQC,OAAO,CACvB;gBAEFjC,YAAY,CAAC,GAAG,EAAE8B,WAAAA,gCAAgC,EAAE;gBACpDlG,MAAMkG,WAAAA,gCAAgC;YACxC;QACF;QACAb,WAAW,MAAMI,CAAAA,GAAAA,cAAAA,YAAY,EAACN,QAAQC,oBAAoBH,YAAY;QACtE,IAAII,UAAU;YACZ,MAAMK,UAAUC,CAAAA,GAAAA,oBAAAA,kBAAkB,EAChCC,CAAAA,GAAAA,oBAAAA,kBAAkB,EAACC,CAAAA,GAAAA,kBAAAA,gBAAgB,EAACR,WAAW;gBAC7CiB,WAAW;gBACXrB;YACF;YAGF,OAAO;gBACLe,UAAUC,CAAAA,GAAAA,MAAAA,IAAI,EAACd,QAAQE;gBACvBjB,YAAY0B,MAAAA,KAAK,CAACG,IAAI,CAAC,OAAOP;gBAC9B1F,MAAM8F,MAAAA,KAAK,CAACC,SAAS,CAACL;YACxB;QACF;IACF;IAEA,IAAI,CAACL,YAAYH,UAAU;QACzBG,WAAW,MAAMI,CAAAA,GAAAA,cAAAA,YAAY,EAC3BP,UACAE,oBACAH,YACA;IAEJ;IAEA,IAAII,aAAa,QAAQH,UAAU;QACjC,MAAMQ,UAAUC,CAAAA,GAAAA,oBAAAA,kBAAkB,EAChCC,CAAAA,GAAAA,oBAAAA,kBAAkB,EAACC,CAAAA,GAAAA,kBAAAA,gBAAgB,EAACR,WAAW;YAC7CJ;QACF;QAGF,OAAO;YACLe,UAAUC,CAAAA,GAAAA,MAAAA,IAAI,EAACf,UAAUG;YACzBjB,YAAY0B,MAAAA,KAAK,CAACG,IAAI,CAAC,SAAStB,CAAAA,GAAAA,mBAAAA,iBAAiB,EAACe;YAClD1F,MAAM8F,MAAAA,KAAK,CAACC,SAAS,CAACL;QACxB;IACF;IAEA,IAAI1F,SAAS,WAAW;QACtB,OAAO;YACLgG,QAAAA,EAAUI,QAAQC,OAAO,CAAC;YAC1BjC,YAAYpE;YACZA,MAAM6F,CAAAA,GAAAA,kBAAAA,gBAAgB,EAAC7F;QACzB;IACF,OAAO;QACL,MAAM,IAAI+E,QAAAA,iBAAiB,CAACK;IAC9B;AACF;AAEO,SAAS3G,qBAAqB,EACnC8H,WAAW,EACX1C,cAAc,EACdpB,aAAa,EACb+D,UAAU,EACVC,iBAAiB,EACjBvB,QAAQ,EACRF,OAAO,EACPG,MAAM,EAUP;IACC,MAAMuB,YAAY,CAAC,CAACvB;IACpB,IAAIwB,iBAA8BnI,eAChCiE,cAAcmE,UAAU;IAE1B,MAAMC,aAAavI,WAAWmE,cAAcmE,UAAU;IAEtD,IAAI,CAACD,gBAAgB;QACnBA,iBAAiB,IAAIpE,YAAYE;QACjCP,aAAaD,GAAG,CAACQ,cAAcmE,UAAU,EAAED;IAC7C;IAEA,MAAMtD,gBAAgB,CAACyD;QACrB,MAAMC,kBAAkBD,YAAYE,IAAI;QACxCL,eAAetD,aAAa,CAAC0D;IAC/B;IACA,KAAK,MAAME,YAAYxE,cAAcU,SAAS,CAAE;QAC9C8D,SAASC,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,yBAAyB/D;IACnD;IAEA,SAASgE,4BACPhD,IAAwB,EACxBiD,WAAkD;QAElD,MAAMC,YAAsB,EAAE;QAC9B,KAAK,MAAMC,cAAcF,YAAYG,MAAM,GAAI;YAC7C,MAAMzH,OAAO0H,CAAAA,GAAAA,wBAAAA,OAAsB,EAACF,WAAWR,IAAI,EAAGN;YAEtD,IAAI1G,MAAM;oBACewH;gBAAvB,MAAMzH,iBAAiByH,CAAAA,CAAAA,mBAAAA,WAAWR,IAAI,KAAA,OAAA,KAAA,IAAfQ,iBAAiBlI,UAAU,CAAC,OAAA,IAC/Ce,WAAAA,UAAU,CAACI,GAAG,GACdJ,WAAAA,UAAU,CAACC,KAAK;gBACpBiH,UAAU7D,IAAI,CAACnF,YAAY8F,MAAMtE,gBAAgBC;YACnD,OAAO,IACLO,CAAAA,GAAAA,OAAAA,oBAAoB,EAACiH,WAAWR,IAAI,KACpC1C,CAAAA,GAAAA,OAAAA,6BAA6B,EAACkD,WAAWR,IAAI,GAC7C;gBACAO,UAAU7D,IAAI,CACZnF,YAAY8F,MAAMhE,WAAAA,UAAU,CAACG,IAAI,EAAE,CAAC,CAAC,EAAEgH,WAAWR,IAAI,EAAE;YAE5D;QACF;QACA,OAAOO;IACT;IAEA,KAAK,MAAMN,YAAYxE,cAAcU,SAAS,CAAE;QAC9C8D,SAASC,KAAK,CAACS,IAAI,CAACP,GAAG,CAAC,yBAAyB;gBAC/C5I;oBAAAA,kBAAAA,eAAeyI,SAASL,UAAU,CAAA,KAAA,OAAA,KAAA,IAAlCpI,gBAAqC+E,YAAY,CAAC;gBAChD0D,SAASD,IAAI;aACd;;IAEL;IAEAvE,cAAcyE,KAAK,CAACS,IAAI,CAACP,GAAG,CAAC,yBAAyB,CAACQ;YAiCrDpJ;QAhCA,MAAM,CAACqJ,aAAaC,aAAaC,gBAAgB,GAAGH,WAAWI,KAAK;QACpE,MAAMC,aAAa;eACdZ,4BACDa,WAAAA,cAAc,CAACC,MAAM,EACrBN,YAAYf,WAAW,CAACQ,WAAW;eAElCD,4BACDa,WAAAA,cAAc,CAACE,MAAM,EACrBN,YAAYhB,WAAW,CAACQ,WAAW;eAEjCS,kBACAV,4BACEa,WAAAA,cAAc,CAACG,UAAU,EACzBN,gBAAgBjB,WAAW,CAACQ,WAAW,IAEzC,EAAE;SACP;QAED,KAAK,MAAMN,QAAQiB,WAAY;YAC7B,MAAMK,QAAQzB,UAAU,CAACG,KAAK;YAC9B,IAAI,CAACsB,OAAO;gBACV;YACF;YAEA,IAAIA,MAAMpE,MAAM,KAAKhG,UAAU;gBAC7B;YACF;YAEAoK,MAAMpE,MAAM,GAAG/F;YACfgE,cAAcoG,IAAI,CAACvB;QACrB;SAEAxI,kBAAAA,eAAeiE,cAAcmE,UAAU,CAAA,KAAA,OAAA,KAAA,IAAvCpI,gBAA0C+E,YAAY,CAAC;eAAIzE;SAAc;IAC3E;IAEA,MAAM0J,mBAAmBC,KAAKC,GAAG,CAAC,MAAMD,KAAKE,GAAG,CAAC,MAAM9E;IAEvD+E,YAAY;QACVhF,uBAAuBiD,YAAYhD;IACrC,GAAG2E,mBAAmB,MAAMK,KAAK;IAEjC,SAASC,iBAAiBnI,IAAuB;QAC/C,MAAMoI,QAAQrI,uBAAuBC,MAAM;QAE3C,KAAK,MAAMX,QAAQ+I,MAAO;YACxB,KAAK,MAAMjJ,gBAAgB;gBACzBoI,WAAAA,cAAc,CAACC,MAAM;gBACrBD,WAAAA,cAAc,CAACE,MAAM;gBACrBF,WAAAA,cAAc,CAACG,UAAU;aAC1B,CAAE;gBACD,MAAMtE,WAAWxF,YAAYuB,cAAcO,WAAAA,UAAU,CAACI,GAAG,EAAE,CAAC,CAAC,EAAET,MAAM;gBACrE,MAAMgJ,YAAYnC,UAAU,CAAC9C,SAAS;gBAEtC,8EAA8E;gBAC9E,IAAI,CAACiF,WAAW;oBAEd;gBACF;gBAEA,8EAA8E;gBAC9E,IAAIA,UAAU9E,MAAM,KAAK/F,OAAO;gBAEhC,0BAA0B;gBAC1B,IAAI,CAACmE,+BAA+BiC,QAAQ,CAACR,WAAW;oBACtDzB,+BAA+B2G,OAAO,CAAClF;oBAEvC,iCAAiC;oBACjC,yGAAyG;oBACzG,IAAIzB,+BAA+B/C,MAAM,GAAGkH,mBAAmB;wBAC7DnE,+BAA+B4G,GAAG;oBACpC;gBACF;gBACAF,UAAU/E,cAAc,GAAGO,KAAKC,GAAG;gBACnCuE,UAAU7E,OAAO,GAAG;YACtB;QACF;IACF;IAEA,SAASgF,WAAWC,EAAU;QAC5B,MAAMpJ,OAAO6F,CAAAA,GAAAA,kBAAAA,gBAAgB,EAACuD;QAC9B,KAAK,MAAMtJ,gBAAgB;YACzBoI,WAAAA,cAAc,CAACC,MAAM;YACrBD,WAAAA,cAAc,CAACE,MAAM;YACrBF,WAAAA,cAAc,CAACG,UAAU;SAC1B,CAAE;YACD,MAAMtE,WAAWxF,YAAYuB,cAAcO,WAAAA,UAAU,CAACC,KAAK,EAAEN;YAC7D,MAAMgJ,YAAYnC,UAAU,CAAC9C,SAAS;YAEtC,8EAA8E;YAC9E,IAAI,CAACiF,WAAW;gBACd,sEAAsE;gBACtE,IAAIlJ,iBAAiBoI,WAAAA,cAAc,CAACC,MAAM,EAAE;oBAC1C;gBACF;gBACA;YACF;YAEA,8EAA8E;YAC9E,IAAIa,UAAU9E,MAAM,KAAK/F,OAAO;YAEhC,0BAA0B;YAC1B,IAAI,CAACkE,sBAAsBkC,QAAQ,CAACR,WAAW;gBAC7C1B,sBAAsB4G,OAAO,CAAClF;gBAE9B,iCAAiC;gBACjC,IAAI1B,sBAAsB9C,MAAM,GAAGkH,mBAAmB;oBACpDpE,sBAAsB6G,GAAG;gBAC3B;YACF;YACAF,UAAU/E,cAAc,GAAGO,KAAKC,GAAG;YACnCuE,UAAU7E,OAAO,GAAG;QACtB;QACA;IACF;IAEA,eAAekF,eAAe,EAC5BrJ,IAAI,EACJsJ,QAAQ,EACRC,UAAU,EACVC,KAAK,EACLC,GAAG,EAOJ;QACC,MAAMC,cAAc;QACpB,MAAMC,uBAAuBC,WAAW;YACtClL,MACE,CAAC,SAAS,EAAEsB,KAAK,uBAAuB,EAAE0J,YAAY,+CAA+C,CAAC;QAE1G,GAAGA,cAAc;QAEjB,IAAI;YACF,IAAIG;YACJ,IAAIN,YAAY;gBACdM,QAAQN;YACV,OAAO;gBACLM,QAAQ,MAAMxL,iBACZ2G,SACAhF,MACAwG,WAAWsD,cAAc,EACzB5E,UACAC;YAEJ;YAEA,MAAM4E,iBAAiB,CAAC,CAAC5E,UAAU0E,MAAM7D,QAAQ,CAAC1G,UAAU,CAAC6F;YAE7D,IAAI,OAAOqE,UAAU,aAAaA,UAAUO,gBAAgB;gBAC1DlK,MAAMmK,eAAe,GAAG;gBACxB,MAAM,IAAInK,MACR,CAAC,2BAA2B,EAC1BgK,MAAM7J,IAAI,CACX,8BAA8B,EAAEwJ,QAAQ,QAAQ,QAAQ,CAAC,CAAC;YAE/D;YAEA,MAAMzJ,iBAAiBI,kBAAkB0J,MAAMzF,UAAU;YACzD,MAAM6F,WAAW,CACfnK;gBAMA,MAAMiE,WAAWxF,YAAYuB,cAAcC,gBAAgB8J,MAAM7J,IAAI;gBACrE,IACE6G,UAAU,CAAC9C,SAAS,IACpB,sGAAsG;gBACtG,4HAA4H;gBAC5H,+FAA+F;gBAC/F,CAACO,CAAAA,GAAAA,OAAAA,6BAA6B,EAACuC,UAAU,CAAC9C,SAAS,CAACK,UAAU,GAC9D;oBACAyC,UAAU,CAAC9C,SAAS,CAACI,OAAO,GAAG;oBAC/B0C,UAAU,CAAC9C,SAAS,CAACE,cAAc,GAAGO,KAAKC,GAAG;oBAC9C,IAAIoC,UAAU,CAAC9C,SAAS,CAACG,MAAM,KAAK/F,OAAO;wBACzC,OAAO;4BACL4F;4BACAmG,UAAU;4BACVC,kBAAkB;wBACpB;oBACF;oBAEA,OAAO;wBACLpG;wBACAmG,UAAU;wBACVC,kBAAkB;oBACpB;gBACF;gBAEAtD,UAAU,CAAC9C,SAAS,GAAG;oBACrBM,IAAI,EAAA;oBACJiF;oBACAc,kBAAkBP,MAAM7D,QAAQ;oBAChCqE,SAASR,MAAM7D,QAAQ;oBACvB5B,YAAYyF,MAAMzF,UAAU;oBAC5BD,SAAS;oBACTF,gBAAgBO,KAAKC,GAAG;oBACxBP,QAAQjG;gBACV;gBACA,OAAO;oBACL8F,UAAUA;oBACVmG,UAAU;oBACVC,kBAAkB;gBACpB;YACF;YAEA,MAAMG,aAAa,MAAMC,CAAAA,GAAAA,SAAAA,6BAA6B,EAAC;gBACrDvK;gBACAwK,cAAcX,MAAM7D,QAAQ;gBAC5B+D;gBACAD,gBAAgBtD,WAAWsD,cAAc;gBACzCW,OAAO;gBACPC,QAAQlE;gBACRrB;YACF;YAEA,MAAMwF,QAAQ,IAAI/I;YAClB,MAAMgJ,oBACJb,kBAAkBO,WAAWO,GAAG,KAAKC,WAAAA,gBAAgB,CAAC3C,MAAM;YAE9D4C,CAAAA,GAAAA,SAAAA,sBAAsB,EAAC;gBACrB/K,MAAM6J,MAAM7J,IAAI;gBAChBgL,aAAaV,WAAWW,OAAO;gBAC/BC,UAAUnL;gBACVoL,UAAU;oBACR,4DAA4D;oBAC5D,IAAIP,qBAAqBb,gBAAgB;wBACvC;oBACF;oBACAY,MAAM1I,GAAG,CAACiG,WAAAA,cAAc,CAACC,MAAM,EAAE8B,SAAS/B,WAAAA,cAAc,CAACC,MAAM;gBACjE;gBACAiD,UAAU;oBACRT,MAAM1I,GAAG,CAACiG,WAAAA,cAAc,CAACE,MAAM,EAAE6B,SAAS/B,WAAAA,cAAc,CAACE,MAAM;oBAC/D,MAAMiD,kBAAkB9M,YACtB2J,WAAAA,cAAc,CAACG,UAAU,EACzBtI,gBACA8J,MAAM7J,IAAI;oBAEZ,IACE6G,UAAU,CAACwE,gBAAgB,IAC3B,CAAC9F,CAAAA,GAAAA,OAAAA,yBAAyB,EAACsE,MAAM7J,IAAI,GACrC;wBACA,uCAAuC;wBACvC,OAAO6G,UAAU,CAACwE,gBAAgB;oBACpC;gBACF;gBACAC,cAAc;oBACZX,MAAM1I,GAAG,CACPiG,WAAAA,cAAc,CAACG,UAAU,EACzB4B,SAAS/B,WAAAA,cAAc,CAACG,UAAU;oBAEpC,MAAMkD,cAAchN,YAClB2J,WAAAA,cAAc,CAACE,MAAM,EACrBrI,gBACA8J,MAAM7J,IAAI;oBAEZ,IACE6G,UAAU,CAAC0E,YAAY,IACvB,CAAChG,CAAAA,GAAAA,OAAAA,yBAAyB,EAACsE,MAAM7J,IAAI,GACrC;wBACA,uCAAuC;wBACvC,OAAO6G,UAAU,CAAC0E,YAAY;oBAChC;gBACF;YACF;YAEA,MAAMC,cAAc;mBAAIb,MAAMlD,MAAM;aAAG;YACvC,MAAMgE,iCAAiC;mBAAId,MAAM5I,OAAO;aAAG,CAAC2J,MAAM,CAChE,CAAC,GAAGpD,MAAM,GAAKA,MAAM6B,gBAAgB;YAEvC,MAAMwB,cAAcH,YAAYI,IAAI,CAAC,CAACtD,QAAUA,MAAM4B,QAAQ;YAE9D,IAAIyB,aAAa;gBACf,MAAME,YAAYrC,QAAQK,MAAM7J,IAAI,GAAG8L,CAAAA,GAAAA,UAAAA,gBAAgB,EAACjC,MAAM7J,IAAI;gBAClE+L,CAAAA,GAAAA,QAAAA,aAAa,EAACF,WAAWpC;YAC3B;YAEA,IAAIgC,+BAA+BlM,MAAM,GAAG,GAAG;gBAC7C,MAAMyM,oBAAoBC,QAAQC,GAAG,CACnCT,+BAA+BU,GAAG,CAAC,CAAC,CAAC7I,aAAa,EAAES,QAAQ,EAAE,CAAC;oBAC7D,OAAO,IAAIkI,QAAc,CAAC5F,SAAS+F;wBACjCjK,cAAckK,IAAI,CAACtI,UAAU,CAACa;4BAC5B,IAAIA,KAAK;gCACP,OAAOwH,OAAOxH;4BAChB;4BAEA,0DAA0D;4BAC1D,6DAA6D;4BAC7D,MAAM0H,eAAe3F,eAAehD,WAAW,CAACL;4BAChD,IAAIgJ,cAAc;gCAChBnK,cAAckK,IAAI,CAACtI,UAAU,CAACwI;oCAC5B,IAAIA,YAAY;wCACd,OAAOH,OAAOG;oCAChB;oCACAlG;gCACF;4BACF,OAAO;gCACLA;4BACF;wBACF;oBACF;gBACF;gBAGFM,eAAe5D,UAAU,CAAC;uBAAI4H,MAAM/L,IAAI;iBAAG;gBAC3C,MAAMoN;YACR;QACF,SAAU;YACRQ,aAAa7C;QACf;IACF;IAUA,4EAA4E;IAC5E,MAAM8C,UAAUC,SAAAA,OAAO,CAACC,MAAM,CAAkC;QAC9D,iEAAiE;QACjE,uEAAuE;QACvE,0EAA0E;QAC1E,4CAA4C;QAC5C,EAAE;QACF,sEAAsE;QACtE,sEAAsE;QACtE,oEAAoE;QACpEC,YAAY,CAACC,UAAYC,KAAKC,SAAS,CAACF;QACxC,2EAA2E;QAC3EG,aAAaC,WAAAA,kBAAkB;IACjC;IAEA,OAAO;QACL,MAAMC,YAAW,EACflN,IAAI,EACJsJ,WAAW,IAAI,EACfC,UAAU,EACVC,KAAK,EACLC,GAAG,EACe;YAClB,yEAAyE;YACzE,oEAAoE;YACpE,IAAI,CAACH,YAAYC,cAAc4D,CAAAA,GAAAA,wBAAAA,wBAAwB,EAAC5D,aAAa;gBACnED,WAAWC,WAAWD,QAAQ;YAChC;YAEA,oEAAoE;YACpE,sEAAsE;YACtE,4CAA4C;YAC5C,OAAOmD,QAAQW,KAAK,CAAC;gBAAEpN;gBAAMsJ;gBAAUC;gBAAYC;YAAM,GAAG;gBAC1D,MAAMH,eAAe;oBACnBrJ;oBACAsJ;oBACAC;oBACAC;oBACAC;gBACF;YACF;QACF;QACA4D,OAAMlF,MAAU,EAAEmF,iBAAqC;YACrD,IAAIC,yBAAuC;YAE3CpF,OAAOqF,gBAAgB,CAAC,SAAS;gBAC/BD,yBAAyB;YAC3B;YACApF,OAAOqF,gBAAgB,CAAC,WAAW,CAAC,EAAEC,IAAI,EAAE;gBAC1C,IAAI;oBACF,MAAM3I,QAAQwI;oBAEd,uEAAuE;oBACvE,IAAI,CAACC,0BAA0BzI,OAAO;wBACpCyB,YAAYmH,IAAI,CAAC;4BACfC,QAAQC,kBAAAA,2BAA2B,CAACC,YAAY;4BAChDC,WAAWC,CAAAA,GAAAA,QAAAA,cAAc,EAACjJ;wBAC5B;wBACAyI,yBAAyB;oBAC3B;oBAEA,MAAMS,aAAalB,KAAKmB,KAAK,CAC3B,OAAOR,SAAS,WAAWA,KAAKS,QAAQ,KAAKT;oBAG/C,IAAIO,WAAWG,KAAK,KAAK,QAAQ;wBAC/B,IAAIH,WAAWI,WAAW,EAAE;4BAC1BtF,iBAAiBkF,WAAWrN,IAAI;wBAClC,OAAO;4BACLwI,WAAW6E,WAAWhO,IAAI;wBAC5B;oBACF;gBACF,EAAE,OAAM,CAAC;YACX;QACF;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 2651, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2656, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/dev/require-cache.ts"],"sourcesContent":["import isError from '../../lib/is-error'\nimport { realpathSync } from '../../lib/realpath'\nimport { clearManifestCache } from '../load-manifest'\n\nfunction deleteFromRequireCache(filePath: string) {\n  try {\n    filePath = realpathSync(filePath)\n  } catch (e) {\n    if (isError(e) && e.code !== 'ENOENT') throw e\n  }\n  const mod = require.cache[filePath]\n  if (mod) {\n    // remove the child reference from all parent modules\n    for (const parent of Object.values(require.cache)) {\n      if (parent?.children) {\n        const idx = parent.children.indexOf(mod)\n        if (idx >= 0) parent.children.splice(idx, 1)\n      }\n    }\n    // remove parent references from external modules\n    for (const child of mod.children) {\n      child.parent = null\n    }\n    delete require.cache[filePath]\n    return true\n  }\n  return false\n}\n\nexport function deleteAppClientCache() {\n  deleteFromRequireCache(\n    require.resolve('next/dist/compiled/next-server/app-page.runtime.dev.js')\n  )\n  deleteFromRequireCache(\n    require.resolve(\n      'next/dist/compiled/next-server/app-page-experimental.runtime.dev.js'\n    )\n  )\n}\n\nexport function deleteCache(filePath: string) {\n  // try to clear it from the fs cache\n  clearManifestCache(filePath)\n\n  deleteFromRequireCache(filePath)\n}\n"],"names":["deleteAppClientCache","deleteCache","deleteFromRequireCache","filePath","realpathSync","e","isError","code","mod","require","cache","parent","Object","values","children","idx","indexOf","splice","child","resolve","clearManifestCache"],"mappings":";;;;;;;;;;;;;;;IA6BgBA,oBAAoB,EAAA;eAApBA;;IAWAC,WAAW,EAAA;eAAXA;;;gEAxCI;0BACS;8BACM;;;;;;AAEnC,SAASC,uBAAuBC,QAAgB;IAC9C,IAAI;QACFA,WAAWC,CAAAA,GAAAA,UAAAA,YAAY,EAACD;IAC1B,EAAE,OAAOE,GAAG;QACV,IAAIC,CAAAA,GAAAA,SAAAA,OAAO,EAACD,MAAMA,EAAEE,IAAI,KAAK,UAAU,MAAMF;IAC/C;IACA,MAAMG,MAAMC,QAAQC,WAAK,CAACP,SAAS;IACnC,IAAIK,KAAK;QACP,qDAAqD;QACrD,KAAK,MAAMG,UAAUC,OAAOC,MAAM,CAACJ,QAAQC,KAAK,QAAG;YACjD,IAAIC,UAAAA,OAAAA,KAAAA,IAAAA,OAAQG,QAAQ,EAAE;gBACpB,MAAMC,MAAMJ,OAAOG,QAAQ,CAACE,OAAO,CAACR;gBACpC,IAAIO,OAAO,GAAGJ,OAAOG,QAAQ,CAACG,MAAM,CAACF,KAAK;YAC5C;QACF;QACA,iDAAiD;QACjD,KAAK,MAAMG,SAASV,IAAIM,QAAQ,CAAE;YAChCI,MAAMP,MAAM,GAAG;QACjB;QACA,OAAOF,QAAQC,WAAK,CAACP,SAAS;QAC9B,OAAO;IACT;IACA,OAAO;AACT;AAEO,SAASH;IACdE,uBACEO,QAAQU,OAAO,CAAC;IAElBjB,uBACEO,QAAQU,OAAO,CACb;AAGN;AAEO,SAASlB,YAAYE,QAAgB;IAC1C,oCAAoC;IACpCiB,CAAAA,GAAAA,cAAAA,kBAAkB,EAACjB;IAEnBD,uBAAuBC;AACzB","ignoreList":[0]}},
    {"offset": {"line": 2719, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2724, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/dev/parse-version-info.ts"],"sourcesContent":["import * as semver from 'next/dist/compiled/semver'\n\nexport interface VersionInfo {\n  installed: string\n  staleness:\n    | 'fresh'\n    | 'stale-patch'\n    | 'stale-minor'\n    | 'stale-major'\n    | 'stale-prerelease'\n    | 'newer-than-npm'\n    | 'unknown'\n  expected?: string\n}\n\nexport function parseVersionInfo(o: {\n  installed: string\n  latest: string\n  canary: string\n}): VersionInfo {\n  const latest = semver.parse(o.latest)\n  const canary = semver.parse(o.canary)\n  const installedParsed = semver.parse(o.installed)\n  const installed = o.installed\n  if (installedParsed && latest && canary) {\n    if (installedParsed.major < latest.major) {\n      // Old major version\n      return { staleness: 'stale-major', expected: latest.raw, installed }\n    } else if (\n      installedParsed.prerelease[0] === 'canary' &&\n      semver.lt(installedParsed, canary)\n    ) {\n      // Matching major, but old canary\n      return {\n        staleness: 'stale-prerelease',\n        expected: canary.raw,\n        installed,\n      }\n    } else if (\n      !installedParsed.prerelease.length &&\n      semver.lt(installedParsed, latest)\n    ) {\n      // Stable, but not the latest\n      if (installedParsed.minor === latest.minor) {\n        // Same major and minor, but not the latest patch\n        return {\n          staleness: 'stale-patch',\n          expected: latest.raw,\n          installed,\n        }\n      }\n      return { staleness: 'stale-minor', expected: latest.raw, installed }\n    } else if (\n      semver.gt(installedParsed, latest) &&\n      installedParsed.version !== canary.version\n    ) {\n      // Newer major version\n      return { staleness: 'newer-than-npm', installed }\n    } else {\n      // Latest and greatest\n      return { staleness: 'fresh', installed }\n    }\n  }\n\n  return {\n    installed: installedParsed?.raw ?? '0.0.0',\n    staleness: 'unknown',\n  }\n}\n"],"names":["parseVersionInfo","o","latest","semver","parse","canary","installedParsed","installed","major","staleness","expected","raw","prerelease","lt","length","minor","gt","version"],"mappings":";;;;+BAegBA,oBAAAA;;;eAAAA;;;gEAfQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAejB,SAASA,iBAAiBC,CAIhC;IACC,MAAMC,SAASC,QAAOC,KAAK,CAACH,EAAEC,MAAM;IACpC,MAAMG,SAASF,QAAOC,KAAK,CAACH,EAAEI,MAAM;IACpC,MAAMC,kBAAkBH,QAAOC,KAAK,CAACH,EAAEM,SAAS;IAChD,MAAMA,YAAYN,EAAEM,SAAS;IAC7B,IAAID,mBAAmBJ,UAAUG,QAAQ;QACvC,IAAIC,gBAAgBE,KAAK,GAAGN,OAAOM,KAAK,EAAE;YACxC,oBAAoB;YACpB,OAAO;gBAAEC,WAAW;gBAAeC,UAAUR,OAAOS,GAAG;gBAAEJ;YAAU;QACrE,OAAO,IACLD,gBAAgBM,UAAU,CAAC,EAAE,KAAK,YAClCT,QAAOU,EAAE,CAACP,iBAAiBD,SAC3B;YACA,iCAAiC;YACjC,OAAO;gBACLI,WAAW;gBACXC,UAAUL,OAAOM,GAAG;gBACpBJ;YACF;QACF,OAAO,IACL,CAACD,gBAAgBM,UAAU,CAACE,MAAM,IAClCX,QAAOU,EAAE,CAACP,iBAAiBJ,SAC3B;YACA,6BAA6B;YAC7B,IAAII,gBAAgBS,KAAK,KAAKb,OAAOa,KAAK,EAAE;gBAC1C,iDAAiD;gBACjD,OAAO;oBACLN,WAAW;oBACXC,UAAUR,OAAOS,GAAG;oBACpBJ;gBACF;YACF;YACA,OAAO;gBAAEE,WAAW;gBAAeC,UAAUR,OAAOS,GAAG;gBAAEJ;YAAU;QACrE,OAAO,IACLJ,QAAOa,EAAE,CAACV,iBAAiBJ,WAC3BI,gBAAgBW,OAAO,KAAKZ,OAAOY,OAAO,EAC1C;YACA,sBAAsB;YACtB,OAAO;gBAAER,WAAW;gBAAkBF;YAAU;QAClD,OAAO;YACL,sBAAsB;YACtB,OAAO;gBAAEE,WAAW;gBAASF;YAAU;QACzC;IACF;IAEA,OAAO;QACLA,WAAWD,CAAAA,mBAAAA,OAAAA,KAAAA,IAAAA,gBAAiBK,GAAG,KAAI;QACnCF,WAAW;IACb;AACF","ignoreList":[0]}},
    {"offset": {"line": 2830, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2835, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/dev/messages.ts"],"sourcesContent":["export const FAST_REFRESH_RUNTIME_RELOAD =\n  'Fast Refresh had to perform a full reload due to a runtime error.'\n"],"names":["FAST_REFRESH_RUNTIME_RELOAD"],"mappings":";;;;+BAAaA,+BAAAA;;;eAAAA;;;AAAN,MAAMA,8BACX","ignoreList":[0]}},
    {"offset": {"line": 2846, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2851, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/dev/hot-reloader-webpack.ts"],"sourcesContent":["import type { NextConfigComplete } from '../config-shared'\nimport type { CustomRoutes } from '../../lib/load-custom-routes'\nimport type { Duplex } from 'stream'\nimport type { Telemetry } from '../../telemetry/storage'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { UrlObject } from 'url'\nimport type { RouteDefinition } from '../route-definitions/route-definition'\n\nimport { webpack, StringXor } from 'next/dist/compiled/webpack/webpack'\nimport {\n  getOverlayMiddleware,\n  getSourceMapMiddleware,\n} from '../../client/components/react-dev-overlay/server/middleware-webpack'\nimport { WebpackHotMiddleware } from './hot-middleware'\nimport { join, relative, isAbsolute, posix } from 'path'\nimport {\n  createEntrypoints,\n  createPagesMapping,\n  finalizeEntrypoint,\n  getClientEntry,\n  getEdgeServerEntry,\n  getAppEntry,\n  runDependingOnPageType,\n  getStaticInfoIncludingLayouts,\n  getInstrumentationEntry,\n} from '../../build/entries'\nimport { watchCompilers } from '../../build/output'\nimport * as Log from '../../build/output/log'\nimport getBaseWebpackConfig, {\n  loadProjectInfo,\n} from '../../build/webpack-config'\nimport { APP_DIR_ALIAS, WEBPACK_LAYERS } from '../../lib/constants'\nimport { recursiveDelete } from '../../lib/recursive-delete'\nimport {\n  BLOCKED_PAGES,\n  CLIENT_STATIC_FILES_RUNTIME_AMP,\n  CLIENT_STATIC_FILES_RUNTIME_MAIN,\n  CLIENT_STATIC_FILES_RUNTIME_MAIN_APP,\n  CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH,\n  COMPILER_NAMES,\n  RSC_MODULE_TYPES,\n} from '../../shared/lib/constants'\nimport type { __ApiPreviewProps } from '../api-utils'\nimport { getPathMatch } from '../../shared/lib/router/utils/path-match'\nimport { findPageFile } from '../lib/find-page-file'\nimport {\n  BUILDING,\n  getEntries,\n  EntryTypes,\n  getInvalidator,\n  onDemandEntryHandler,\n} from './on-demand-entry-handler'\nimport { denormalizePagePath } from '../../shared/lib/page-path/denormalize-page-path'\nimport { normalizePathSep } from '../../shared/lib/page-path/normalize-path-sep'\nimport getRouteFromEntrypoint from '../get-route-from-entrypoint'\nimport {\n  difference,\n  isInstrumentationHookFile,\n  isMiddlewareFile,\n  isMiddlewareFilename,\n} from '../../build/utils'\nimport { DecodeError } from '../../shared/lib/utils'\nimport { type Span, trace } from '../../trace'\nimport { getProperError } from '../../lib/is-error'\nimport ws from 'next/dist/compiled/ws'\nimport { existsSync, promises as fs } from 'fs'\nimport type { UnwrapPromise } from '../../lib/coalesced-function'\nimport { parseVersionInfo } from './parse-version-info'\nimport type { VersionInfo } from './parse-version-info'\nimport { isAPIRoute } from '../../lib/is-api-route'\nimport { getRouteLoaderEntry } from '../../build/webpack/loaders/next-route-loader'\nimport {\n  isInternalComponent,\n  isNonRoutePagesPage,\n} from '../../lib/is-internal-component'\nimport { RouteKind } from '../route-kind'\nimport {\n  HMR_ACTIONS_SENT_TO_BROWSER,\n  type NextJsHotReloaderInterface,\n} from './hot-reloader-types'\nimport type { HMR_ACTION_TYPES } from './hot-reloader-types'\nimport type { WebpackError } from 'webpack'\nimport { PAGE_TYPES } from '../../lib/page-types'\nimport { FAST_REFRESH_RUNTIME_RELOAD } from './messages'\nimport { getNodeDebugType } from '../lib/utils'\n\nconst MILLISECONDS_IN_NANOSECOND = BigInt(1_000_000)\nconst isTestMode = !!(\n  process.env.NEXT_TEST_MODE ||\n  process.env.__NEXT_TEST_MODE ||\n  process.env.DEBUG\n)\n\nfunction diff(a: Set<any>, b: Set<any>) {\n  return new Set([...a].filter((v) => !b.has(v)))\n}\n\nconst wsServer = new ws.Server({ noServer: true })\n\nexport async function renderScriptError(\n  res: ServerResponse,\n  error: Error,\n  { verbose = true } = {}\n): Promise<{ finished: true | undefined }> {\n  // Asks CDNs and others to not to cache the errored page\n  res.setHeader(\n    'Cache-Control',\n    'no-cache, no-store, max-age=0, must-revalidate'\n  )\n\n  if ((error as any).code === 'ENOENT') {\n    return { finished: undefined }\n  }\n\n  if (verbose) {\n    console.error(error.stack)\n  }\n  res.statusCode = 500\n  res.end('500 - Internal Error')\n  return { finished: true }\n}\n\nfunction addCorsSupport(req: IncomingMessage, res: ServerResponse) {\n  // Only rewrite CORS handling when URL matches a hot-reloader middleware\n  if (!req.url!.startsWith('/__next')) {\n    return { preflight: false }\n  }\n\n  if (!req.headers.origin) {\n    return { preflight: false }\n  }\n\n  res.setHeader('Access-Control-Allow-Origin', req.headers.origin)\n  res.setHeader('Access-Control-Allow-Methods', 'OPTIONS, GET')\n  // Based on https://github.com/primus/access-control/blob/4cf1bc0e54b086c91e6aa44fb14966fa5ef7549c/index.js#L158\n  if (req.headers['access-control-request-headers']) {\n    res.setHeader(\n      'Access-Control-Allow-Headers',\n      req.headers['access-control-request-headers'] as string\n    )\n  }\n\n  if (req.method === 'OPTIONS') {\n    res.writeHead(200)\n    res.end()\n    return { preflight: true }\n  }\n\n  return { preflight: false }\n}\n\nexport const matchNextPageBundleRequest = getPathMatch(\n  '/_next/static/chunks/pages/:path*.js(\\\\.map|)'\n)\n\n// Iteratively look up the issuer till it ends up at the root\nfunction findEntryModule(\n  module: webpack.Module,\n  compilation: webpack.Compilation\n): any {\n  for (;;) {\n    const issuer = compilation.moduleGraph.getIssuer(module)\n    if (!issuer) return module\n    module = issuer\n  }\n}\n\nfunction erroredPages(compilation: webpack.Compilation) {\n  const failedPages: { [page: string]: WebpackError[] } = {}\n  for (const error of compilation.errors) {\n    if (!error.module) {\n      continue\n    }\n\n    const entryModule = findEntryModule(error.module, compilation)\n    const { name } = entryModule\n    if (!name) {\n      continue\n    }\n\n    // Only pages have to be reloaded\n    const enhancedName = getRouteFromEntrypoint(name)\n\n    if (!enhancedName) {\n      continue\n    }\n\n    if (!failedPages[enhancedName]) {\n      failedPages[enhancedName] = []\n    }\n\n    failedPages[enhancedName].push(error)\n  }\n\n  return failedPages\n}\n\nexport async function getVersionInfo(enabled: boolean): Promise<VersionInfo> {\n  let installed = '0.0.0'\n\n  if (!enabled) {\n    return { installed, staleness: 'unknown' }\n  }\n\n  try {\n    installed = require('next/package.json').version\n\n    let res\n\n    try {\n      // use NPM registry regardless user using Yarn\n      res = await fetch('https://registry.npmjs.org/-/package/next/dist-tags')\n    } catch {\n      // ignore fetch errors\n    }\n\n    if (!res || !res.ok) return { installed, staleness: 'unknown' }\n\n    const { latest, canary } = await res.json()\n\n    return parseVersionInfo({ installed, latest, canary })\n  } catch (e: any) {\n    console.error(e)\n    return { installed, staleness: 'unknown' }\n  }\n}\n\nexport default class HotReloaderWebpack implements NextJsHotReloaderInterface {\n  private hasAmpEntrypoints: boolean\n  private hasAppRouterEntrypoints: boolean\n  private hasPagesRouterEntrypoints: boolean\n  private dir: string\n  private buildId: string\n  private encryptionKey: string\n  private middlewares: ((\n    req: IncomingMessage,\n    res: ServerResponse,\n    next: () => void\n  ) => Promise<void>)[]\n  private pagesDir?: string\n  private distDir: string\n  private webpackHotMiddleware?: WebpackHotMiddleware\n  private config: NextConfigComplete\n  private clientStats: webpack.Stats | null\n  private clientError: Error | null = null\n  private serverError: Error | null = null\n  private hmrServerError: Error | null = null\n  private serverPrevDocumentHash: string | null\n  private serverChunkNames?: Set<string>\n  private prevChunkNames?: Set<any>\n  private onDemandEntries?: ReturnType<typeof onDemandEntryHandler>\n  private previewProps: __ApiPreviewProps\n  private watcher: any\n  private rewrites: CustomRoutes['rewrites']\n  private fallbackWatcher: any\n  private hotReloaderSpan: Span\n  private pagesMapping: { [key: string]: string } = {}\n  private appDir?: string\n  private telemetry: Telemetry\n  private resetFetch: () => void\n  private versionInfo: VersionInfo = {\n    staleness: 'unknown',\n    installed: '0.0.0',\n  }\n  private devtoolsFrontendUrl: string | undefined\n  private reloadAfterInvalidation: boolean = false\n\n  public serverStats: webpack.Stats | null\n  public edgeServerStats: webpack.Stats | null\n  public multiCompiler?: webpack.MultiCompiler\n  public activeWebpackConfigs?: Array<\n    UnwrapPromise<ReturnType<typeof getBaseWebpackConfig>>\n  >\n\n  constructor(\n    dir: string,\n    {\n      config,\n      pagesDir,\n      distDir,\n      buildId,\n      encryptionKey,\n      previewProps,\n      rewrites,\n      appDir,\n      telemetry,\n      resetFetch,\n    }: {\n      config: NextConfigComplete\n      pagesDir?: string\n      distDir: string\n      buildId: string\n      encryptionKey: string\n      previewProps: __ApiPreviewProps\n      rewrites: CustomRoutes['rewrites']\n      appDir?: string\n      telemetry: Telemetry\n      resetFetch: () => void\n    }\n  ) {\n    this.hasAmpEntrypoints = false\n    this.hasAppRouterEntrypoints = false\n    this.hasPagesRouterEntrypoints = false\n    this.buildId = buildId\n    this.encryptionKey = encryptionKey\n    this.dir = dir\n    this.middlewares = []\n    this.pagesDir = pagesDir\n    this.appDir = appDir\n    this.distDir = distDir\n    this.clientStats = null\n    this.serverStats = null\n    this.edgeServerStats = null\n    this.serverPrevDocumentHash = null\n    this.telemetry = telemetry\n    this.resetFetch = resetFetch\n\n    this.config = config\n    this.previewProps = previewProps\n    this.rewrites = rewrites\n    this.hotReloaderSpan = trace('hot-reloader', undefined, {\n      version: process.env.__NEXT_VERSION as string,\n    })\n    // Ensure the hotReloaderSpan is flushed immediately as it's the parentSpan for all processing\n    // of the current `next dev` invocation.\n    this.hotReloaderSpan.stop()\n  }\n\n  public async run(\n    req: IncomingMessage,\n    res: ServerResponse,\n    parsedUrl: UrlObject\n  ): Promise<{ finished?: true }> {\n    // Usually CORS support is not needed for the hot-reloader (this is dev only feature)\n    // With when the app runs for multi-zones support behind a proxy,\n    // the current page is trying to access this URL via assetPrefix.\n    // That's when the CORS support is needed.\n    const { preflight } = addCorsSupport(req, res)\n    if (preflight) {\n      return {}\n    }\n\n    // When a request comes in that is a page bundle, e.g. /_next/static/<buildid>/pages/index.js\n    // we have to compile the page using on-demand-entries, this middleware will handle doing that\n    // by adding the page to on-demand-entries, waiting till it's done\n    // and then the bundle will be served like usual by the actual route in server/index.js\n    const handlePageBundleRequest = async (\n      pageBundleRes: ServerResponse,\n      parsedPageBundleUrl: UrlObject\n    ): Promise<{ finished?: true }> => {\n      const { pathname } = parsedPageBundleUrl\n      const params = matchNextPageBundleRequest(pathname)\n      if (!params) {\n        return {}\n      }\n\n      let decodedPagePath: string\n\n      try {\n        decodedPagePath = `/${params.path\n          .map((param: string) => decodeURIComponent(param))\n          .join('/')}`\n      } catch (_) {\n        throw new DecodeError('failed to decode param')\n      }\n\n      const page = denormalizePagePath(decodedPagePath)\n\n      if (page === '/_error' || BLOCKED_PAGES.indexOf(page) === -1) {\n        try {\n          await this.ensurePage({ page, clientOnly: true, url: req.url })\n        } catch (error) {\n          return await renderScriptError(pageBundleRes, getProperError(error))\n        }\n\n        const errors = await this.getCompilationErrors(page)\n        if (errors.length > 0) {\n          return await renderScriptError(pageBundleRes, errors[0], {\n            verbose: false,\n          })\n        }\n      }\n\n      return {}\n    }\n\n    const { finished } = await handlePageBundleRequest(res, parsedUrl)\n\n    for (const middleware of this.middlewares) {\n      let calledNext = false\n\n      await middleware(req, res, () => {\n        calledNext = true\n      })\n\n      if (!calledNext) {\n        return { finished: true }\n      }\n    }\n\n    return { finished }\n  }\n\n  public setHmrServerError(error: Error | null): void {\n    this.hmrServerError = error\n  }\n\n  public clearHmrServerError(): void {\n    if (this.hmrServerError) {\n      this.setHmrServerError(null)\n      this.send({\n        action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE,\n        data: 'clear hmr server error',\n      })\n    }\n  }\n\n  protected async refreshServerComponents(): Promise<void> {\n    this.send({\n      action: HMR_ACTIONS_SENT_TO_BROWSER.SERVER_COMPONENT_CHANGES,\n      // TODO: granular reloading of changes\n      // entrypoints: serverComponentChanges,\n    })\n  }\n\n  public onHMR(\n    req: IncomingMessage,\n    _socket: Duplex,\n    head: Buffer,\n    callback: (client: ws.WebSocket) => void\n  ) {\n    wsServer.handleUpgrade(req, req.socket, head, (client) => {\n      this.webpackHotMiddleware?.onHMR(client)\n      this.onDemandEntries?.onHMR(client, () => this.hmrServerError)\n      callback(client)\n\n      client.addEventListener('message', ({ data }) => {\n        data = typeof data !== 'string' ? data.toString() : data\n\n        try {\n          const payload = JSON.parse(data)\n\n          let traceChild:\n            | {\n                name: string\n                startTime?: bigint\n                endTime?: bigint\n                attrs?: Record<string, number | string | undefined | string[]>\n              }\n            | undefined\n\n          switch (payload.event) {\n            case 'span-end': {\n              traceChild = {\n                name: payload.spanName,\n                startTime:\n                  BigInt(Math.floor(payload.startTime)) *\n                  MILLISECONDS_IN_NANOSECOND,\n                attrs: payload.attributes,\n                endTime:\n                  BigInt(Math.floor(payload.endTime)) *\n                  MILLISECONDS_IN_NANOSECOND,\n              }\n              break\n            }\n            case 'client-hmr-latency': {\n              traceChild = {\n                name: payload.event,\n                startTime:\n                  BigInt(payload.startTime) * MILLISECONDS_IN_NANOSECOND,\n                endTime: BigInt(payload.endTime) * MILLISECONDS_IN_NANOSECOND,\n                attrs: {\n                  updatedModules: payload.updatedModules.map((m: string) =>\n                    m\n                      .replace(`(${WEBPACK_LAYERS.appPagesBrowser})/`, '')\n                      .replace(/^\\.\\//, '[project]/')\n                  ),\n                  page: payload.page,\n                  isPageHidden: payload.isPageHidden,\n                },\n              }\n              break\n            }\n            case 'client-reload-page':\n            case 'client-success': {\n              traceChild = {\n                name: payload.event,\n              }\n              break\n            }\n            case 'client-error': {\n              traceChild = {\n                name: payload.event,\n                attrs: { errorCount: payload.errorCount },\n              }\n              break\n            }\n            case 'client-warning': {\n              traceChild = {\n                name: payload.event,\n                attrs: { warningCount: payload.warningCount },\n              }\n              break\n            }\n            case 'client-removed-page':\n            case 'client-added-page': {\n              traceChild = {\n                name: payload.event,\n                attrs: { page: payload.page || '' },\n              }\n              break\n            }\n            case 'client-full-reload': {\n              const { event, stackTrace, hadRuntimeError } = payload\n\n              traceChild = {\n                name: event,\n                attrs: { stackTrace: stackTrace ?? '' },\n              }\n\n              if (hadRuntimeError) {\n                Log.warn(FAST_REFRESH_RUNTIME_RELOAD)\n                break\n              }\n\n              let fileMessage = ''\n              if (stackTrace) {\n                const file = /Aborted because (.+) is not accepted/.exec(\n                  stackTrace\n                )?.[1]\n                if (file) {\n                  // `file` is filepath in `pages/` but it can be weird long webpack url in `app/`.\n                  // If it's a webpack loader URL, it will start with '(app-pages)/./'\n                  if (\n                    file.startsWith(`(${WEBPACK_LAYERS.appPagesBrowser})/./`)\n                  ) {\n                    const fileUrl = new URL(file, 'file://')\n                    const cwd = process.cwd()\n                    const modules = fileUrl.searchParams\n                      .getAll('modules')\n                      .map((filepath) => filepath.slice(cwd.length + 1))\n                      .filter(\n                        (filepath) => !filepath.startsWith('node_modules')\n                      )\n\n                    if (modules.length > 0) {\n                      fileMessage = ` when ${modules.join(', ')} changed`\n                    }\n                  } else {\n                    fileMessage = ` when ${file} changed`\n                  }\n                }\n              }\n\n              Log.warn(\n                `Fast Refresh had to perform a full reload${fileMessage}. Read more: https://nextjs.org/docs/messages/fast-refresh-reload`\n              )\n              break\n            }\n            default: {\n              break\n            }\n          }\n\n          if (traceChild) {\n            this.hotReloaderSpan.manualTraceChild(\n              traceChild.name,\n              traceChild.startTime,\n              traceChild.endTime,\n              { ...traceChild.attrs, clientId: payload.id }\n            )\n          }\n        } catch (_) {\n          // invalid WebSocket message\n        }\n      })\n    })\n  }\n\n  private async clean(span: Span): Promise<void> {\n    return span\n      .traceChild('clean')\n      .traceAsyncFn(() =>\n        recursiveDelete(join(this.dir, this.config.distDir), /^cache/)\n      )\n  }\n\n  private async getWebpackConfig(span: Span) {\n    const webpackConfigSpan = span.traceChild('get-webpack-config')\n\n    const pageExtensions = this.config.pageExtensions\n\n    return webpackConfigSpan.traceAsyncFn(async () => {\n      const pagePaths = !this.pagesDir\n        ? ([] as (string | null)[])\n        : await webpackConfigSpan\n            .traceChild('get-page-paths')\n            .traceAsyncFn(() =>\n              Promise.all([\n                findPageFile(this.pagesDir!, '/_app', pageExtensions, false),\n                findPageFile(\n                  this.pagesDir!,\n                  '/_document',\n                  pageExtensions,\n                  false\n                ),\n              ])\n            )\n\n      this.pagesMapping = await webpackConfigSpan\n        .traceChild('create-pages-mapping')\n        .traceAsyncFn(() =>\n          createPagesMapping({\n            isDev: true,\n            pageExtensions: this.config.pageExtensions,\n            pagesType: PAGE_TYPES.PAGES,\n            pagePaths: pagePaths.filter(\n              (i: string | null): i is string => typeof i === 'string'\n            ),\n            pagesDir: this.pagesDir,\n            appDir: this.appDir,\n          })\n        )\n\n      const entrypoints = await webpackConfigSpan\n        .traceChild('create-entrypoints')\n        .traceAsyncFn(() =>\n          createEntrypoints({\n            appDir: this.appDir,\n            buildId: this.buildId,\n            config: this.config,\n            envFiles: [],\n            isDev: true,\n            pages: this.pagesMapping,\n            pagesDir: this.pagesDir,\n            previewMode: this.previewProps,\n            rootDir: this.dir,\n            pageExtensions: this.config.pageExtensions,\n          })\n        )\n\n      const commonWebpackOptions = {\n        dev: true,\n        buildId: this.buildId,\n        encryptionKey: this.encryptionKey,\n        config: this.config,\n        pagesDir: this.pagesDir,\n        rewrites: this.rewrites,\n        originalRewrites: this.config._originalRewrites,\n        originalRedirects: this.config._originalRedirects,\n        runWebpackSpan: this.hotReloaderSpan,\n        appDir: this.appDir,\n      }\n\n      return webpackConfigSpan\n        .traceChild('generate-webpack-config')\n        .traceAsyncFn(async () => {\n          const info = await loadProjectInfo({\n            dir: this.dir,\n            config: commonWebpackOptions.config,\n            dev: true,\n          })\n          return Promise.all([\n            // order is important here\n            getBaseWebpackConfig(this.dir, {\n              ...commonWebpackOptions,\n              compilerType: COMPILER_NAMES.client,\n              entrypoints: entrypoints.client,\n              ...info,\n            }),\n            getBaseWebpackConfig(this.dir, {\n              ...commonWebpackOptions,\n              compilerType: COMPILER_NAMES.server,\n              entrypoints: entrypoints.server,\n              ...info,\n            }),\n            getBaseWebpackConfig(this.dir, {\n              ...commonWebpackOptions,\n              compilerType: COMPILER_NAMES.edgeServer,\n              entrypoints: entrypoints.edgeServer,\n              ...info,\n            }),\n          ])\n        })\n    })\n  }\n\n  public async buildFallbackError(): Promise<void> {\n    if (this.fallbackWatcher) return\n\n    const info = await loadProjectInfo({\n      dir: this.dir,\n      config: this.config,\n      dev: true,\n    })\n    const fallbackConfig = await getBaseWebpackConfig(this.dir, {\n      runWebpackSpan: this.hotReloaderSpan,\n      dev: true,\n      compilerType: COMPILER_NAMES.client,\n      config: this.config,\n      buildId: this.buildId,\n      encryptionKey: this.encryptionKey,\n      pagesDir: this.pagesDir,\n      rewrites: {\n        beforeFiles: [],\n        afterFiles: [],\n        fallback: [],\n      },\n      originalRewrites: {\n        beforeFiles: [],\n        afterFiles: [],\n        fallback: [],\n      },\n      originalRedirects: [],\n      isDevFallback: true,\n      entrypoints: (\n        await createEntrypoints({\n          appDir: this.appDir,\n          buildId: this.buildId,\n          config: this.config,\n          envFiles: [],\n          isDev: true,\n          pages: {\n            '/_app': 'next/dist/pages/_app',\n            '/_error': 'next/dist/pages/_error',\n          },\n          pagesDir: this.pagesDir,\n          previewMode: this.previewProps,\n          rootDir: this.dir,\n          pageExtensions: this.config.pageExtensions,\n        })\n      ).client,\n      ...info,\n    })\n    const fallbackCompiler = webpack(fallbackConfig)\n\n    this.fallbackWatcher = await new Promise((resolve) => {\n      let bootedFallbackCompiler = false\n      fallbackCompiler.watch(\n        // @ts-ignore webpack supports an array of watchOptions when using a multiCompiler\n        fallbackConfig.watchOptions,\n        // Errors are handled separately\n        (_err: any) => {\n          if (!bootedFallbackCompiler) {\n            bootedFallbackCompiler = true\n            resolve(true)\n          }\n        }\n      )\n    })\n  }\n\n  private async tracedGetVersionInfo(span: Span, enabled: boolean) {\n    const versionInfoSpan = span.traceChild('get-version-info')\n    return versionInfoSpan.traceAsyncFn<VersionInfo>(async () =>\n      getVersionInfo(enabled)\n    )\n  }\n\n  public async start(): Promise<void> {\n    const startSpan = this.hotReloaderSpan.traceChild('start')\n    startSpan.stop() // Stop immediately to create an artificial parent span\n\n    this.versionInfo = await this.tracedGetVersionInfo(\n      startSpan,\n      isTestMode || this.telemetry.isEnabled\n    )\n\n    const nodeDebugType = getNodeDebugType()\n    if (nodeDebugType && !this.devtoolsFrontendUrl) {\n      const debugPort = process.debugPort\n      let debugInfo\n      try {\n        // It requires to use 127.0.0.1 instead of localhost for server-side fetching.\n        const debugInfoList = await fetch(\n          `http://127.0.0.1:${debugPort}/json/list`\n        ).then((res) => res.json())\n        // There will be only one item for current process, so always get the first item.\n        debugInfo = debugInfoList[0]\n      } catch {}\n      if (debugInfo) {\n        this.devtoolsFrontendUrl = debugInfo.devtoolsFrontendUrl\n      }\n    }\n\n    await this.clean(startSpan)\n    // Ensure distDir exists before writing package.json\n    await fs.mkdir(this.distDir, { recursive: true })\n\n    const distPackageJsonPath = join(this.distDir, 'package.json')\n    // Ensure commonjs handling is used for files in the distDir (generally .next)\n    // Files outside of the distDir can be \"type\": \"module\"\n    await fs.writeFile(distPackageJsonPath, '{\"type\": \"commonjs\"}')\n\n    this.activeWebpackConfigs = await this.getWebpackConfig(startSpan)\n\n    for (const config of this.activeWebpackConfigs) {\n      const defaultEntry = config.entry\n      config.entry = async (...args) => {\n        const outputPath = this.multiCompiler?.outputPath || ''\n        const entries = getEntries(outputPath)\n        // @ts-ignore entry is always a function\n        const entrypoints = await defaultEntry(...args)\n        const isClientCompilation = config.name === COMPILER_NAMES.client\n        const isNodeServerCompilation = config.name === COMPILER_NAMES.server\n        const isEdgeServerCompilation =\n          config.name === COMPILER_NAMES.edgeServer\n\n        await Promise.all(\n          Object.keys(entries).map(async (entryKey) => {\n            const entryData = entries[entryKey]\n            const { bundlePath, dispose } = entryData\n\n            const result =\n              /^(client|server|edge-server)@(app|pages|root)@(.*)/g.exec(\n                entryKey\n              )\n            const [, key /* pageType */, , page] = result! // this match should always happen\n\n            if (key === COMPILER_NAMES.client && !isClientCompilation) return\n            if (key === COMPILER_NAMES.server && !isNodeServerCompilation)\n              return\n            if (key === COMPILER_NAMES.edgeServer && !isEdgeServerCompilation)\n              return\n\n            const isEntry = entryData.type === EntryTypes.ENTRY\n            const isChildEntry = entryData.type === EntryTypes.CHILD_ENTRY\n\n            // Check if the page was removed or disposed and remove it\n            if (isEntry) {\n              const pageExists =\n                !dispose && existsSync(entryData.absolutePagePath)\n              if (!pageExists) {\n                delete entries[entryKey]\n                return\n              }\n            }\n\n            // For child entries, if it has an entry file and it's gone, remove it\n            if (isChildEntry) {\n              if (entryData.absoluteEntryFilePath) {\n                const pageExists =\n                  !dispose && existsSync(entryData.absoluteEntryFilePath)\n                if (!pageExists) {\n                  delete entries[entryKey]\n                  return\n                }\n              }\n            }\n\n            // Ensure _error is considered a `pages` page.\n            if (page === '/_error') {\n              this.hasPagesRouterEntrypoints = true\n            }\n\n            const hasAppDir = !!this.appDir\n            const isAppPath = hasAppDir && bundlePath.startsWith('app/')\n            const staticInfo = isEntry\n              ? await getStaticInfoIncludingLayouts({\n                  isInsideAppDir: isAppPath,\n                  pageExtensions: this.config.pageExtensions,\n                  pageFilePath: entryData.absolutePagePath,\n                  appDir: this.appDir,\n                  config: this.config,\n                  isDev: true,\n                  page,\n                })\n              : undefined\n\n            if (staticInfo?.type === PAGE_TYPES.PAGES) {\n              if (\n                staticInfo.config?.config?.amp === true ||\n                staticInfo.config?.config?.amp === 'hybrid'\n              ) {\n                this.hasAmpEntrypoints = true\n              }\n            }\n\n            const isServerComponent =\n              isAppPath && staticInfo?.rsc !== RSC_MODULE_TYPES.client\n\n            const pageType: PAGE_TYPES = entryData.bundlePath.startsWith(\n              'pages/'\n            )\n              ? PAGE_TYPES.PAGES\n              : entryData.bundlePath.startsWith('app/')\n                ? PAGE_TYPES.APP\n                : PAGE_TYPES.ROOT\n\n            if (pageType === 'pages') {\n              this.hasPagesRouterEntrypoints = true\n            }\n            if (pageType === 'app') {\n              this.hasAppRouterEntrypoints = true\n            }\n\n            const isInstrumentation =\n              isInstrumentationHookFile(page) && pageType === PAGE_TYPES.ROOT\n\n            runDependingOnPageType({\n              page,\n              pageRuntime: staticInfo?.runtime,\n              pageType,\n              onEdgeServer: () => {\n                // TODO-APP: verify if child entry should support.\n                if (!isEdgeServerCompilation || !isEntry) return\n                entries[entryKey].status = BUILDING\n\n                if (isInstrumentation) {\n                  const normalizedBundlePath = bundlePath.replace('src/', '')\n                  entrypoints[normalizedBundlePath] = finalizeEntrypoint({\n                    compilerType: COMPILER_NAMES.edgeServer,\n                    name: normalizedBundlePath,\n                    value: getInstrumentationEntry({\n                      absolutePagePath: entryData.absolutePagePath,\n                      isEdgeServer: true,\n                      isDev: true,\n                    }),\n                    isServerComponent: true,\n                    hasAppDir,\n                  })\n                  return\n                }\n                const appDirLoader = isAppPath\n                  ? getAppEntry({\n                      name: bundlePath,\n                      page,\n                      appPaths: entryData.appPaths,\n                      pagePath: posix.join(\n                        APP_DIR_ALIAS,\n                        relative(\n                          this.appDir!,\n                          entryData.absolutePagePath\n                        ).replace(/\\\\/g, '/')\n                      ),\n                      appDir: this.appDir!,\n                      pageExtensions: this.config.pageExtensions,\n                      rootDir: this.dir,\n                      isDev: true,\n                      tsconfigPath: this.config.typescript.tsconfigPath,\n                      basePath: this.config.basePath,\n                      assetPrefix: this.config.assetPrefix,\n                      nextConfigOutput: this.config.output,\n                      preferredRegion: staticInfo?.preferredRegion,\n                      middlewareConfig: Buffer.from(\n                        JSON.stringify(staticInfo?.middleware || {})\n                      ).toString('base64'),\n                    }).import\n                  : undefined\n\n                entrypoints[bundlePath] = finalizeEntrypoint({\n                  compilerType: COMPILER_NAMES.edgeServer,\n                  name: bundlePath,\n                  value: getEdgeServerEntry({\n                    absolutePagePath: entryData.absolutePagePath,\n                    rootDir: this.dir,\n                    buildId: this.buildId,\n                    bundlePath,\n                    config: this.config,\n                    isDev: true,\n                    page,\n                    pages: this.pagesMapping,\n                    isServerComponent,\n                    appDirLoader,\n                    pagesType: isAppPath ? PAGE_TYPES.APP : PAGE_TYPES.PAGES,\n                    preferredRegion: staticInfo?.preferredRegion,\n                  }),\n                  hasAppDir,\n                })\n              },\n              onClient: () => {\n                if (!isClientCompilation) return\n                if (isChildEntry) {\n                  entries[entryKey].status = BUILDING\n                  entrypoints[bundlePath] = finalizeEntrypoint({\n                    name: bundlePath,\n                    compilerType: COMPILER_NAMES.client,\n                    value: entryData.request,\n                    hasAppDir,\n                  })\n                } else {\n                  entries[entryKey].status = BUILDING\n                  entrypoints[bundlePath] = finalizeEntrypoint({\n                    name: bundlePath,\n                    compilerType: COMPILER_NAMES.client,\n                    value: getClientEntry({\n                      absolutePagePath: entryData.absolutePagePath,\n                      page,\n                    }),\n                    hasAppDir,\n                  })\n                }\n              },\n              onServer: () => {\n                // TODO-APP: verify if child entry should support.\n                if (!isNodeServerCompilation || !isEntry) return\n                entries[entryKey].status = BUILDING\n                let relativeRequest = relative(\n                  config.context!,\n                  entryData.absolutePagePath\n                )\n                if (\n                  !isAbsolute(relativeRequest) &&\n                  !relativeRequest.startsWith('../')\n                ) {\n                  relativeRequest = `./${relativeRequest}`\n                }\n\n                let value: { import: string; layer?: string } | string\n                if (isInstrumentation) {\n                  value = getInstrumentationEntry({\n                    absolutePagePath: entryData.absolutePagePath,\n                    isEdgeServer: false,\n                    isDev: true,\n                  })\n                  entrypoints[bundlePath] = finalizeEntrypoint({\n                    compilerType: COMPILER_NAMES.server,\n                    name: bundlePath,\n                    isServerComponent: true,\n                    value,\n                    hasAppDir,\n                  })\n                } else if (isAppPath) {\n                  value = getAppEntry({\n                    name: bundlePath,\n                    page,\n                    appPaths: entryData.appPaths,\n                    pagePath: posix.join(\n                      APP_DIR_ALIAS,\n                      relative(\n                        this.appDir!,\n                        entryData.absolutePagePath\n                      ).replace(/\\\\/g, '/')\n                    ),\n                    appDir: this.appDir!,\n                    pageExtensions: this.config.pageExtensions,\n                    rootDir: this.dir,\n                    isDev: true,\n                    tsconfigPath: this.config.typescript.tsconfigPath,\n                    basePath: this.config.basePath,\n                    assetPrefix: this.config.assetPrefix,\n                    nextConfigOutput: this.config.output,\n                    preferredRegion: staticInfo?.preferredRegion,\n                    middlewareConfig: Buffer.from(\n                      JSON.stringify(staticInfo?.middleware || {})\n                    ).toString('base64'),\n                  })\n                } else if (isAPIRoute(page)) {\n                  value = getRouteLoaderEntry({\n                    kind: RouteKind.PAGES_API,\n                    page,\n                    absolutePagePath: relativeRequest,\n                    preferredRegion: staticInfo?.preferredRegion,\n                    middlewareConfig: staticInfo?.middleware || {},\n                  })\n                } else if (\n                  !isMiddlewareFile(page) &&\n                  !isInternalComponent(relativeRequest) &&\n                  !isNonRoutePagesPage(page) &&\n                  !isInstrumentation\n                ) {\n                  value = getRouteLoaderEntry({\n                    kind: RouteKind.PAGES,\n                    page,\n                    pages: this.pagesMapping,\n                    absolutePagePath: relativeRequest,\n                    preferredRegion: staticInfo?.preferredRegion,\n                    middlewareConfig: staticInfo?.middleware ?? {},\n                  })\n                } else {\n                  value = relativeRequest\n                }\n\n                entrypoints[bundlePath] = finalizeEntrypoint({\n                  compilerType: COMPILER_NAMES.server,\n                  name: bundlePath,\n                  isServerComponent,\n                  value,\n                  hasAppDir,\n                })\n              },\n            })\n          })\n        )\n\n        if (!this.hasAmpEntrypoints) {\n          delete entrypoints[CLIENT_STATIC_FILES_RUNTIME_AMP]\n        }\n        if (!this.hasPagesRouterEntrypoints) {\n          delete entrypoints[CLIENT_STATIC_FILES_RUNTIME_MAIN]\n          delete entrypoints['pages/_app']\n          delete entrypoints['pages/_error']\n          delete entrypoints['/_error']\n          delete entrypoints['pages/_document']\n        }\n        // Remove React Refresh entrypoint chunk as `app` doesn't require it.\n        if (!this.hasAmpEntrypoints && !this.hasPagesRouterEntrypoints) {\n          delete entrypoints[CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH]\n        }\n        if (!this.hasAppRouterEntrypoints) {\n          delete entrypoints[CLIENT_STATIC_FILES_RUNTIME_MAIN_APP]\n        }\n\n        return entrypoints\n      }\n    }\n\n    // Enable building of client compilation before server compilation in development\n    // @ts-ignore webpack 5\n    this.activeWebpackConfigs.parallelism = 1\n\n    this.multiCompiler = webpack(\n      this.activeWebpackConfigs\n    ) as unknown as webpack.MultiCompiler\n\n    // Copy over the filesystem so that it is shared between all compilers.\n    const inputFileSystem = this.multiCompiler.compilers[0].inputFileSystem\n    for (const compiler of this.multiCompiler.compilers) {\n      compiler.inputFileSystem = inputFileSystem\n      // This is set for the initial compile. After that Watching class in webpack adds it.\n      compiler.fsStartTime = Date.now()\n      // Ensure NodeEnvironmentPlugin doesn't purge the inputFileSystem. Purging is handled in `done` below.\n      compiler.hooks.beforeRun.intercept({\n        register(tapInfo: any) {\n          if (tapInfo.name === 'NodeEnvironmentPlugin') {\n            return null\n          }\n          return tapInfo\n        },\n      })\n    }\n\n    this.multiCompiler.hooks.done.tap('NextjsHotReloader', () => {\n      inputFileSystem?.purge?.()\n    })\n    watchCompilers(\n      this.multiCompiler.compilers[0],\n      this.multiCompiler.compilers[1],\n      this.multiCompiler.compilers[2]\n    )\n\n    // Watch for changes to client/server page files so we can tell when just\n    // the server file changes and trigger a reload for GS(S)P pages\n    const changedClientPages = new Set<string>()\n    const changedServerPages = new Set<string>()\n    const changedEdgeServerPages = new Set<string>()\n\n    const changedServerComponentPages = new Set<string>()\n    const changedCSSImportPages = new Set<string>()\n\n    const prevClientPageHashes = new Map<string, string>()\n    const prevServerPageHashes = new Map<string, string>()\n    const prevEdgeServerPageHashes = new Map<string, string>()\n    const prevCSSImportModuleHashes = new Map<string, string>()\n\n    const pageExtensionRegex = new RegExp(\n      `\\\\.(?:${this.config.pageExtensions.join('|')})$`\n    )\n\n    const trackPageChanges =\n      (\n        pageHashMap: Map<string, string>,\n        changedItems: Set<string>,\n        serverComponentChangedItems?: Set<string>\n      ) =>\n      (stats: webpack.Compilation) => {\n        try {\n          stats.entrypoints.forEach((entry, key) => {\n            if (\n              key.startsWith('pages/') ||\n              key.startsWith('app/') ||\n              isMiddlewareFilename(key)\n            ) {\n              // TODO this doesn't handle on demand loaded chunks\n              entry.chunks.forEach((chunk) => {\n                if (chunk.id === key) {\n                  const modsIterable: any =\n                    stats.chunkGraph.getChunkModulesIterable(chunk)\n\n                  let hasCSSModuleChanges = false\n                  let chunksHash = new StringXor()\n                  let chunksHashServerLayer = new StringXor()\n\n                  modsIterable.forEach((mod: any) => {\n                    if (\n                      mod.resource &&\n                      mod.resource.replace(/\\\\/g, '/').includes(key) &&\n                      // Shouldn't match CSS modules, etc.\n                      pageExtensionRegex.test(mod.resource)\n                    ) {\n                      // use original source to calculate hash since mod.hash\n                      // includes the source map in development which changes\n                      // every time for both server and client so we calculate\n                      // the hash without the source map for the page module\n                      const hash = require('crypto')\n                        .createHash('sha1')\n                        .update(mod.originalSource().buffer())\n                        .digest()\n                        .toString('hex')\n\n                      if (\n                        mod.layer === WEBPACK_LAYERS.reactServerComponents &&\n                        mod?.buildInfo?.rsc?.type !== 'client'\n                      ) {\n                        chunksHashServerLayer.add(hash)\n                      }\n\n                      chunksHash.add(hash)\n                    } else {\n                      // for non-pages we can use the module hash directly\n                      const hash = stats.chunkGraph.getModuleHash(\n                        mod,\n                        chunk.runtime\n                      )\n\n                      if (\n                        mod.layer === WEBPACK_LAYERS.reactServerComponents &&\n                        mod?.buildInfo?.rsc?.type !== 'client'\n                      ) {\n                        chunksHashServerLayer.add(hash)\n                      }\n\n                      chunksHash.add(hash)\n\n                      // Both CSS import changes from server and client\n                      // components are tracked.\n                      if (\n                        key.startsWith('app/') &&\n                        /\\.(css|scss|sass)$/.test(mod.resource || '')\n                      ) {\n                        const resourceKey = mod.layer + ':' + mod.resource\n                        const prevHash =\n                          prevCSSImportModuleHashes.get(resourceKey)\n                        if (prevHash && prevHash !== hash) {\n                          hasCSSModuleChanges = true\n                        }\n                        prevCSSImportModuleHashes.set(resourceKey, hash)\n                      }\n                    }\n                  })\n\n                  const prevHash = pageHashMap.get(key)\n                  const curHash = chunksHash.toString()\n                  if (prevHash && prevHash !== curHash) {\n                    changedItems.add(key)\n                  }\n                  pageHashMap.set(key, curHash)\n\n                  if (serverComponentChangedItems) {\n                    const serverKey =\n                      WEBPACK_LAYERS.reactServerComponents + ':' + key\n                    const prevServerHash = pageHashMap.get(serverKey)\n                    const curServerHash = chunksHashServerLayer.toString()\n                    if (prevServerHash && prevServerHash !== curServerHash) {\n                      serverComponentChangedItems.add(key)\n                    }\n                    pageHashMap.set(serverKey, curServerHash)\n                  }\n\n                  if (hasCSSModuleChanges) {\n                    changedCSSImportPages.add(key)\n                  }\n                }\n              })\n            }\n          })\n        } catch (err) {\n          console.error(err)\n        }\n      }\n\n    this.multiCompiler.compilers[0].hooks.emit.tap(\n      'NextjsHotReloaderForClient',\n      trackPageChanges(prevClientPageHashes, changedClientPages)\n    )\n    this.multiCompiler.compilers[1].hooks.emit.tap(\n      'NextjsHotReloaderForServer',\n      trackPageChanges(\n        prevServerPageHashes,\n        changedServerPages,\n        changedServerComponentPages\n      )\n    )\n    this.multiCompiler.compilers[2].hooks.emit.tap(\n      'NextjsHotReloaderForServer',\n      trackPageChanges(\n        prevEdgeServerPageHashes,\n        changedEdgeServerPages,\n        changedServerComponentPages\n      )\n    )\n\n    // This plugin watches for changes to _document.js and notifies the client side that it should reload the page\n    this.multiCompiler.compilers[1].hooks.failed.tap(\n      'NextjsHotReloaderForServer',\n      (err: Error) => {\n        this.serverError = err\n        this.serverStats = null\n        this.serverChunkNames = undefined\n      }\n    )\n\n    this.multiCompiler.compilers[2].hooks.done.tap(\n      'NextjsHotReloaderForServer',\n      (stats) => {\n        this.serverError = null\n        this.edgeServerStats = stats\n      }\n    )\n\n    this.multiCompiler.compilers[1].hooks.done.tap(\n      'NextjsHotReloaderForServer',\n      (stats) => {\n        this.serverError = null\n        this.serverStats = stats\n\n        if (!this.pagesDir) {\n          return\n        }\n\n        const { compilation } = stats\n\n        // We only watch `_document` for changes on the server compilation\n        // the rest of the files will be triggered by the client compilation\n        const documentChunk = compilation.namedChunks.get('pages/_document')\n        // If the document chunk can't be found we do nothing\n        if (!documentChunk) {\n          return\n        }\n\n        // Initial value\n        if (this.serverPrevDocumentHash === null) {\n          this.serverPrevDocumentHash = documentChunk.hash || null\n          return\n        }\n\n        // If _document.js didn't change we don't trigger a reload.\n        if (documentChunk.hash === this.serverPrevDocumentHash) {\n          return\n        }\n\n        // As document chunk will change if new app pages are joined,\n        // since react bundle is different it will effect the chunk hash.\n        // So we diff the chunk changes, if there's only new app page chunk joins,\n        // then we don't trigger a reload by checking pages/_document chunk change.\n        if (this.appDir) {\n          const chunkNames = new Set(compilation.namedChunks.keys())\n          const diffChunkNames = difference<string>(\n            this.serverChunkNames || new Set(),\n            chunkNames\n          )\n\n          if (\n            diffChunkNames.length === 0 ||\n            diffChunkNames.every((chunkName) => chunkName.startsWith('app/'))\n          ) {\n            return\n          }\n          this.serverChunkNames = chunkNames\n        }\n\n        this.serverPrevDocumentHash = documentChunk.hash || null\n\n        // Notify reload to reload the page, as _document.js was changed (different hash)\n        this.send({\n          action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE,\n          data: '_document has changed',\n        })\n      }\n    )\n\n    this.multiCompiler.hooks.done.tap('NextjsHotReloaderForServer', () => {\n      const reloadAfterInvalidation = this.reloadAfterInvalidation\n      this.reloadAfterInvalidation = false\n\n      const serverOnlyChanges = difference<string>(\n        changedServerPages,\n        changedClientPages\n      )\n\n      const edgeServerOnlyChanges = difference<string>(\n        changedEdgeServerPages,\n        changedClientPages\n      )\n\n      const pageChanges = serverOnlyChanges\n        .concat(edgeServerOnlyChanges)\n        .filter((key) => key.startsWith('pages/'))\n      const middlewareChanges = Array.from(changedEdgeServerPages).filter(\n        (name) => isMiddlewareFilename(name)\n      )\n\n      if (middlewareChanges.length > 0) {\n        this.send({\n          event: HMR_ACTIONS_SENT_TO_BROWSER.MIDDLEWARE_CHANGES,\n        })\n      }\n\n      if (pageChanges.length > 0) {\n        this.send({\n          event: HMR_ACTIONS_SENT_TO_BROWSER.SERVER_ONLY_CHANGES,\n          pages: serverOnlyChanges.map((pg) =>\n            denormalizePagePath(pg.slice('pages'.length))\n          ),\n        })\n      }\n\n      if (\n        changedServerComponentPages.size ||\n        changedCSSImportPages.size ||\n        reloadAfterInvalidation\n      ) {\n        this.resetFetch()\n        this.refreshServerComponents()\n      }\n\n      changedClientPages.clear()\n      changedServerPages.clear()\n      changedEdgeServerPages.clear()\n      changedServerComponentPages.clear()\n      changedCSSImportPages.clear()\n    })\n\n    this.multiCompiler.compilers[0].hooks.failed.tap(\n      'NextjsHotReloaderForClient',\n      (err: Error) => {\n        this.clientError = err\n        this.clientStats = null\n      }\n    )\n    this.multiCompiler.compilers[0].hooks.done.tap(\n      'NextjsHotReloaderForClient',\n      (stats) => {\n        this.clientError = null\n        this.clientStats = stats\n\n        const { compilation } = stats\n        const chunkNames = new Set(\n          [...compilation.namedChunks.keys()].filter(\n            (name) => !!getRouteFromEntrypoint(name)\n          )\n        )\n\n        if (this.prevChunkNames) {\n          // detect chunks which have to be replaced with a new template\n          // e.g, pages/index.js <-> pages/_error.js\n          const addedPages = diff(chunkNames, this.prevChunkNames!)\n          const removedPages = diff(this.prevChunkNames!, chunkNames)\n\n          if (addedPages.size > 0) {\n            for (const addedPage of addedPages) {\n              const page = getRouteFromEntrypoint(addedPage)\n              this.send({\n                action: HMR_ACTIONS_SENT_TO_BROWSER.ADDED_PAGE,\n                data: [page],\n              })\n            }\n          }\n\n          if (removedPages.size > 0) {\n            for (const removedPage of removedPages) {\n              const page = getRouteFromEntrypoint(removedPage)\n              this.send({\n                action: HMR_ACTIONS_SENT_TO_BROWSER.REMOVED_PAGE,\n                data: [page],\n              })\n            }\n          }\n        }\n\n        this.prevChunkNames = chunkNames\n      }\n    )\n\n    this.webpackHotMiddleware = new WebpackHotMiddleware(\n      this.multiCompiler.compilers,\n      this.versionInfo,\n      this.devtoolsFrontendUrl\n    )\n\n    let booted = false\n\n    this.watcher = await new Promise((resolve) => {\n      const watcher = this.multiCompiler?.watch(\n        // @ts-ignore webpack supports an array of watchOptions when using a multiCompiler\n        this.activeWebpackConfigs.map((config) => config.watchOptions!),\n        // Errors are handled separately\n        (_err: any) => {\n          if (!booted) {\n            booted = true\n            resolve(watcher)\n          }\n        }\n      )\n    })\n\n    this.onDemandEntries = onDemandEntryHandler({\n      hotReloader: this,\n      multiCompiler: this.multiCompiler,\n      pagesDir: this.pagesDir,\n      appDir: this.appDir,\n      rootDir: this.dir,\n      nextConfig: this.config,\n      ...(this.config.onDemandEntries as {\n        maxInactiveAge: number\n        pagesBufferLength: number\n      }),\n    })\n\n    this.middlewares = [\n      getOverlayMiddleware({\n        rootDirectory: this.dir,\n        clientStats: () => this.clientStats,\n        serverStats: () => this.serverStats,\n        edgeServerStats: () => this.edgeServerStats,\n      }),\n      getSourceMapMiddleware({\n        clientStats: () => this.clientStats,\n        serverStats: () => this.serverStats,\n        edgeServerStats: () => this.edgeServerStats,\n      }),\n    ]\n  }\n\n  public invalidate(\n    { reloadAfterInvalidation }: { reloadAfterInvalidation: boolean } = {\n      reloadAfterInvalidation: false,\n    }\n  ) {\n    // Cache the `reloadAfterInvalidation` flag, and use it to reload the page when compilation is done\n    this.reloadAfterInvalidation = reloadAfterInvalidation\n    const outputPath = this.multiCompiler?.outputPath\n    if (outputPath) {\n      getInvalidator(outputPath)?.invalidate()\n    }\n  }\n\n  public async stop(): Promise<void> {\n    await new Promise((resolve, reject) => {\n      this.watcher.close((err: any) => (err ? reject(err) : resolve(true)))\n    })\n\n    if (this.fallbackWatcher) {\n      await new Promise((resolve, reject) => {\n        this.fallbackWatcher.close((err: any) =>\n          err ? reject(err) : resolve(true)\n        )\n      })\n    }\n    this.multiCompiler = undefined\n  }\n\n  public async getCompilationErrors(page: string) {\n    const getErrors = ({ compilation }: webpack.Stats) => {\n      const failedPages = erroredPages(compilation)\n      const normalizedPage = normalizePathSep(page)\n      // If there is an error related to the requesting page we display it instead of the first error\n      return failedPages[normalizedPage]?.length > 0\n        ? failedPages[normalizedPage]\n        : compilation.errors\n    }\n\n    if (this.clientError) {\n      return [this.clientError]\n    } else if (this.serverError) {\n      return [this.serverError]\n    } else if (this.clientStats?.hasErrors()) {\n      return getErrors(this.clientStats)\n    } else if (this.serverStats?.hasErrors()) {\n      return getErrors(this.serverStats)\n    } else if (this.edgeServerStats?.hasErrors()) {\n      return getErrors(this.edgeServerStats)\n    } else {\n      return []\n    }\n  }\n\n  public send(action: HMR_ACTION_TYPES): void {\n    this.webpackHotMiddleware!.publish(action)\n  }\n\n  public async ensurePage({\n    page,\n    clientOnly,\n    appPaths,\n    definition,\n    isApp,\n    url,\n  }: {\n    page: string\n    clientOnly: boolean\n    appPaths?: ReadonlyArray<string> | null\n    isApp?: boolean\n    definition?: RouteDefinition\n    url?: string\n  }): Promise<void> {\n    return this.hotReloaderSpan\n      .traceChild('ensure-page', {\n        inputPage: page,\n      })\n      .traceAsyncFn(async () => {\n        // Make sure we don't re-build or dispose prebuilt pages\n        if (page !== '/_error' && BLOCKED_PAGES.indexOf(page) !== -1) {\n          return\n        }\n        const error = clientOnly\n          ? this.clientError\n          : this.serverError || this.clientError\n        if (error) {\n          throw error\n        }\n\n        return this.onDemandEntries?.ensurePage({\n          page,\n          appPaths,\n          definition,\n          isApp,\n          url,\n        })\n      })\n  }\n}\n"],"names":["HotReloaderWebpack","getVersionInfo","matchNextPageBundleRequest","renderScriptError","MILLISECONDS_IN_NANOSECOND","BigInt","isTestMode","process","env","NEXT_TEST_MODE","__NEXT_TEST_MODE","DEBUG","diff","a","b","Set","filter","v","has","wsServer","ws","Server","noServer","res","error","verbose","setHeader","code","finished","undefined","console","stack","statusCode","end","addCorsSupport","req","url","startsWith","preflight","headers","origin","method","writeHead","getPathMatch","findEntryModule","module","compilation","issuer","moduleGraph","getIssuer","erroredPages","failedPages","errors","entryModule","name","enhancedName","getRouteFromEntrypoint","push","enabled","installed","staleness","require","version","fetch","ok","latest","canary","json","parseVersionInfo","e","constructor","dir","config","pagesDir","distDir","buildId","encryptionKey","previewProps","rewrites","appDir","telemetry","resetFetch","clientError","serverError","hmrServerError","pagesMapping","versionInfo","reloadAfterInvalidation","hasAmpEntrypoints","hasAppRouterEntrypoints","hasPagesRouterEntrypoints","middlewares","clientStats","serverStats","edgeServerStats","serverPrevDocumentHash","hotReloaderSpan","trace","__NEXT_VERSION","stop","run","parsedUrl","handlePageBundleRequest","pageBundleRes","parsedPageBundleUrl","pathname","params","decodedPagePath","path","map","param","decodeURIComponent","join","_","DecodeError","page","denormalizePagePath","BLOCKED_PAGES","indexOf","ensurePage","clientOnly","getProperError","getCompilationErrors","length","middleware","calledNext","setHmrServerError","clearHmrServerError","send","action","HMR_ACTIONS_SENT_TO_BROWSER","RELOAD_PAGE","data","refreshServerComponents","SERVER_COMPONENT_CHANGES","onHMR","_socket","head","callback","handleUpgrade","socket","client","webpackHotMiddleware","onDemandEntries","addEventListener","toString","payload","JSON","parse","traceChild","event","spanName","startTime","Math","floor","attrs","attributes","endTime","updatedModules","m","replace","WEBPACK_LAYERS","appPagesBrowser","isPageHidden","errorCount","warningCount","stackTrace","hadRuntimeError","Log","warn","FAST_REFRESH_RUNTIME_RELOAD","fileMessage","file","exec","fileUrl","URL","cwd","modules","searchParams","getAll","filepath","slice","manualTraceChild","clientId","id","clean","span","traceAsyncFn","recursiveDelete","getWebpackConfig","webpackConfigSpan","pageExtensions","pagePaths","Promise","all","findPageFile","createPagesMapping","isDev","pagesType","PAGE_TYPES","PAGES","i","entrypoints","createEntrypoints","envFiles","pages","previewMode","rootDir","commonWebpackOptions","dev","originalRewrites","_originalRewrites","originalRedirects","_originalRedirects","runWebpackSpan","info","loadProjectInfo","getBaseWebpackConfig","compilerType","COMPILER_NAMES","server","edgeServer","buildFallbackError","fallbackWatcher","fallbackConfig","beforeFiles","afterFiles","fallback","isDevFallback","fallbackCompiler","webpack","resolve","bootedFallbackCompiler","watch","watchOptions","_err","tracedGetVersionInfo","versionInfoSpan","start","startSpan","isEnabled","nodeDebugType","getNodeDebugType","devtoolsFrontendUrl","debugPort","debugInfo","debugInfoList","then","fs","mkdir","recursive","distPackageJsonPath","writeFile","activeWebpackConfigs","defaultEntry","entry","args","outputPath","multiCompiler","entries","getEntries","isClientCompilation","isNodeServerCompilation","isEdgeServerCompilation","Object","keys","entryKey","entryData","bundlePath","dispose","result","key","isEntry","type","EntryTypes","ENTRY","isChildEntry","CHILD_ENTRY","pageExists","existsSync","absolutePagePath","absoluteEntryFilePath","hasAppDir","isAppPath","staticInfo","getStaticInfoIncludingLayouts","isInsideAppDir","pageFilePath","amp","isServerComponent","rsc","RSC_MODULE_TYPES","pageType","APP","ROOT","isInstrumentation","isInstrumentationHookFile","runDependingOnPageType","pageRuntime","runtime","onEdgeServer","status","BUILDING","normalizedBundlePath","finalizeEntrypoint","value","getInstrumentationEntry","isEdgeServer","appDirLoader","getAppEntry","appPaths","pagePath","posix","APP_DIR_ALIAS","relative","tsconfigPath","typescript","basePath","assetPrefix","nextConfigOutput","output","preferredRegion","middlewareConfig","Buffer","from","stringify","import","getEdgeServerEntry","onClient","request","getClientEntry","onServer","relativeRequest","context","isAbsolute","isAPIRoute","getRouteLoaderEntry","kind","RouteKind","PAGES_API","isMiddlewareFile","isInternalComponent","isNonRoutePagesPage","CLIENT_STATIC_FILES_RUNTIME_AMP","CLIENT_STATIC_FILES_RUNTIME_MAIN","CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH","CLIENT_STATIC_FILES_RUNTIME_MAIN_APP","parallelism","inputFileSystem","compilers","compiler","fsStartTime","Date","now","hooks","beforeRun","intercept","register","tapInfo","done","tap","purge","watchCompilers","changedClientPages","changedServerPages","changedEdgeServerPages","changedServerComponentPages","changedCSSImportPages","prevClientPageHashes","Map","prevServerPageHashes","prevEdgeServerPageHashes","prevCSSImportModuleHashes","pageExtensionRegex","RegExp","trackPageChanges","pageHashMap","changedItems","serverComponentChangedItems","stats","forEach","isMiddlewareFilename","chunks","chunk","modsIterable","chunkGraph","getChunkModulesIterable","hasCSSModuleChanges","chunksHash","StringXor","chunksHashServerLayer","mod","resource","includes","test","hash","createHash","update","originalSource","buffer","digest","layer","reactServerComponents","buildInfo","add","getModuleHash","resourceKey","prevHash","get","set","curHash","serverKey","prevServerHash","curServerHash","err","emit","failed","serverChunkNames","documentChunk","namedChunks","chunkNames","diffChunkNames","difference","every","chunkName","serverOnlyChanges","edgeServerOnlyChanges","pageChanges","concat","middlewareChanges","Array","MIDDLEWARE_CHANGES","SERVER_ONLY_CHANGES","pg","size","clear","prevChunkNames","addedPages","removedPages","addedPage","ADDED_PAGE","removedPage","REMOVED_PAGE","WebpackHotMiddleware","booted","watcher","onDemandEntryHandler","hotReloader","nextConfig","getOverlayMiddleware","rootDirectory","getSourceMapMiddleware","invalidate","getInvalidator","reject","close","getErrors","normalizedPage","normalizePathSep","hasErrors","publish","definition","isApp","inputPage"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4067, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4072, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/dev/turbopack/manifest-loader.ts"],"sourcesContent":["import type {\n  EdgeFunctionDefinition,\n  MiddlewareManifest,\n} from '../../../build/webpack/plugins/middleware-plugin'\nimport type { StatsAsset, StatsChunk, StatsChunkGroup, StatsModule, StatsCompilation as WebpackStats } from 'webpack'\nimport type { BuildManifest } from '../../get-page-files'\nimport type { AppBuildManifest } from '../../../build/webpack/plugins/app-build-manifest-plugin'\nimport type { PagesManifest } from '../../../build/webpack/plugins/pages-manifest-plugin'\nimport { pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport type { ActionManifest } from '../../../build/webpack/plugins/flight-client-entry-plugin'\nimport type { NextFontManifest } from '../../../build/webpack/plugins/next-font-manifest-plugin'\nimport type { LoadableManifest } from '../../load-components'\nimport {\n  APP_BUILD_MANIFEST,\n  APP_PATHS_MANIFEST,\n  BUILD_MANIFEST,\n  INTERCEPTION_ROUTE_REWRITE_MANIFEST,\n  MIDDLEWARE_BUILD_MANIFEST,\n  MIDDLEWARE_MANIFEST,\n  MIDDLEWARE_REACT_LOADABLE_MANIFEST,\n  NEXT_FONT_MANIFEST,\n  PAGES_MANIFEST,\n  REACT_LOADABLE_MANIFEST,\n  SERVER_REFERENCE_MANIFEST,\n  TURBOPACK_CLIENT_MIDDLEWARE_MANIFEST,\n  WEBPACK_STATS,\n} from '../../../shared/lib/constants'\nimport { join, posix } from 'path'\nimport { readFile } from 'fs/promises'\nimport type { SetupOpts } from '../../lib/router-utils/setup-dev-bundler'\nimport { deleteCache } from '../require-cache'\nimport { writeFileAtomic } from '../../../lib/fs/write-atomic'\nimport { isInterceptionRouteRewrite } from '../../../lib/generate-interception-routes-rewrites'\nimport {\n  type ClientBuildManifest,\n  normalizeRewritesForBuildManifest,\n  srcEmptySsgManifest,\n  processRoute,\n} from '../../../build/webpack/plugins/build-manifest-plugin'\nimport type { Entrypoints } from './types'\nimport getAssetPathFromRoute from '../../../shared/lib/router/utils/get-asset-path-from-route'\nimport { getEntryKey, type EntryKey } from './entry-key'\nimport type { CustomRoutes } from '../../../lib/load-custom-routes'\nimport { getSortedRoutes } from '../../../shared/lib/router/utils'\nimport { existsSync } from 'fs'\nimport { addMetadataIdToRoute, addRouteSuffix, removeRouteSuffix } from '../turbopack-utils'\nimport { tryToParsePath } from '../../../lib/try-to-parse-path'\n\ninterface InstrumentationDefinition {\n  files: string[]\n  name: 'instrumentation'\n}\n\ntype TurbopackMiddlewareManifest = MiddlewareManifest & {\n  instrumentation?: InstrumentationDefinition\n}\n\nconst getManifestPath = (page: string, distDir: string, name: string, type: string) => {\n  let manifestPath = posix.join(\n    distDir,\n    `server`,\n    type,\n    type === 'middleware' || type === 'instrumentation'\n      ? ''\n      : type === 'app'\n        ? page\n        : getAssetPathFromRoute(page),\n    name\n  )\n  return manifestPath\n}\n\nasync function readPartialManifest<T>(\n  distDir: string,\n  name:\n    | typeof MIDDLEWARE_MANIFEST\n    | typeof BUILD_MANIFEST\n    | typeof APP_BUILD_MANIFEST\n    | typeof PAGES_MANIFEST\n    | typeof WEBPACK_STATS\n    | typeof APP_PATHS_MANIFEST\n    | `${typeof SERVER_REFERENCE_MANIFEST}.json`\n    | `${typeof NEXT_FONT_MANIFEST}.json`\n    | typeof REACT_LOADABLE_MANIFEST,\n  pageName: string,\n  type: 'pages' | 'app' | 'middleware' | 'instrumentation' = 'pages'\n): Promise<T> {\n  const page = pageName\n  const isSitemapRoute = /[\\\\/]sitemap(.xml)?\\/route$/.test(page)\n  let manifestPath = getManifestPath(page, distDir, name, type)\n\n  // Check the ambiguity of /sitemap and /sitemap.xml\n  if (isSitemapRoute && !existsSync(manifestPath)) {\n    manifestPath = getManifestPath(pageName.replace(/\\/sitemap\\/route$/, '/sitemap.xml/route'), distDir, name, type)\n  }\n  // existsSync is faster than using the async version\n  if(!existsSync(manifestPath) && page.endsWith('/route')) {\n    // TODO: Improve implementation of metadata routes, currently it requires this extra check for the variants of the files that can be written.\n    let metadataPage = addRouteSuffix(addMetadataIdToRoute(removeRouteSuffix(page)))\n    manifestPath = getManifestPath(metadataPage, distDir, name, type)\n  }\n  return JSON.parse(await readFile(posix.join(manifestPath), 'utf-8')) as T\n}\n\nexport class TurbopackManifestLoader {\n  private actionManifests: Map<EntryKey, ActionManifest> = new Map()\n  private appBuildManifests: Map<EntryKey, AppBuildManifest> = new Map()\n  private appPathsManifests: Map<EntryKey, PagesManifest> = new Map()\n  private buildManifests: Map<EntryKey, BuildManifest> = new Map()\n  private fontManifests: Map<EntryKey, NextFontManifest> = new Map()\n  private loadableManifests: Map<EntryKey, LoadableManifest> = new Map()\n  private middlewareManifests: Map<EntryKey, TurbopackMiddlewareManifest> =\n    new Map()\n  private pagesManifests: Map<string, PagesManifest> = new Map()\n  private webpackStats: Map<EntryKey, WebpackStats> = new Map()\n  private encryptionKey: string\n\n  private readonly distDir: string\n  private readonly buildId: string\n\n  constructor({\n    distDir,\n    buildId,\n    encryptionKey,\n  }: {\n    buildId: string\n    distDir: string\n    encryptionKey: string\n  }) {\n    this.distDir = distDir\n    this.buildId = buildId\n    this.encryptionKey = encryptionKey\n  }\n\n  delete(key: EntryKey) {\n    this.actionManifests.delete(key)\n    this.appBuildManifests.delete(key)\n    this.appPathsManifests.delete(key)\n    this.buildManifests.delete(key)\n    this.fontManifests.delete(key)\n    this.loadableManifests.delete(key)\n    this.middlewareManifests.delete(key)\n    this.pagesManifests.delete(key)\n    this.webpackStats.delete(key)\n  }\n\n  async loadActionManifest(pageName: string): Promise<void> {\n    this.actionManifests.set(\n      getEntryKey('app', 'server', pageName),\n      await readPartialManifest(\n        this.distDir,\n        `${SERVER_REFERENCE_MANIFEST}.json`,\n        pageName,\n        'app'\n      )\n    )\n  }\n\n  private async mergeActionManifests(manifests: Iterable<ActionManifest>) {\n    type ActionEntries = ActionManifest['edge' | 'node']\n    const manifest: ActionManifest = {\n      node: {},\n      edge: {},\n      encryptionKey: this.encryptionKey,\n    }\n\n    function mergeActionIds(\n      actionEntries: ActionEntries,\n      other: ActionEntries\n    ): void {\n      for (const key in other) {\n        const action = (actionEntries[key] ??= {\n          workers: {},\n          layer: {},\n        })\n        Object.assign(action.workers, other[key].workers)\n        Object.assign(action.layer, other[key].layer)\n      }\n    }\n\n    for (const m of manifests) {\n      mergeActionIds(manifest.node, m.node)\n      mergeActionIds(manifest.edge, m.edge)\n    }\n\n    return manifest\n  }\n\n  private async writeActionManifest(): Promise<void> {\n    const actionManifest = await this.mergeActionManifests(\n      this.actionManifests.values()\n    )\n    const actionManifestJsonPath = join(\n      this.distDir,\n      'server',\n      `${SERVER_REFERENCE_MANIFEST}.json`\n    )\n    const actionManifestJsPath = join(\n      this.distDir,\n      'server',\n      `${SERVER_REFERENCE_MANIFEST}.js`\n    )\n    const json = JSON.stringify(actionManifest, null, 2)\n    deleteCache(actionManifestJsonPath)\n    deleteCache(actionManifestJsPath)\n    await writeFileAtomic(actionManifestJsonPath, json)\n    await writeFileAtomic(\n      actionManifestJsPath,\n      `self.__RSC_SERVER_MANIFEST=${JSON.stringify(json)}`\n    )\n  }\n\n  async loadAppBuildManifest(pageName: string): Promise<void> {\n    this.appBuildManifests.set(\n      getEntryKey('app', 'server', pageName),\n      await readPartialManifest(\n        this.distDir,\n        APP_BUILD_MANIFEST,\n        pageName,\n        'app'\n      )\n    )\n  }\n\n  private mergeAppBuildManifests(manifests: Iterable<AppBuildManifest>) {\n    const manifest: AppBuildManifest = {\n      pages: {},\n    }\n    for (const m of manifests) {\n      Object.assign(manifest.pages, m.pages)\n    }\n    return manifest\n  }\n\n  private async writeAppBuildManifest(): Promise<void> {\n    const appBuildManifest = this.mergeAppBuildManifests(\n      this.appBuildManifests.values()\n    )\n    const appBuildManifestPath = join(this.distDir, APP_BUILD_MANIFEST)\n    deleteCache(appBuildManifestPath)\n    await writeFileAtomic(\n      appBuildManifestPath,\n      JSON.stringify(appBuildManifest, null, 2)\n    )\n  }\n\n  async loadAppPathsManifest(pageName: string): Promise<void> {\n    this.appPathsManifests.set(\n      getEntryKey('app', 'server', pageName),\n      await readPartialManifest(\n        this.distDir,\n        APP_PATHS_MANIFEST,\n        pageName,\n        'app'\n      )\n    )\n  }\n\n  private async writeAppPathsManifest(): Promise<void> {\n    const appPathsManifest = this.mergePagesManifests(\n      this.appPathsManifests.values()\n    )\n    const appPathsManifestPath = join(\n      this.distDir,\n      'server',\n      APP_PATHS_MANIFEST\n    )\n    deleteCache(appPathsManifestPath)\n    await writeFileAtomic(\n      appPathsManifestPath,\n      JSON.stringify(appPathsManifest, null, 2)\n    )\n  }\n\n  private async writeWebpackStats(): Promise<void> {\n    const webpackStats = this.mergeWebpackStats(\n      this.webpackStats.values()\n    )\n    const path = join(\n      this.distDir,\n      'server',\n      WEBPACK_STATS\n    )\n    deleteCache(path)\n    await writeFileAtomic(\n      path,\n      JSON.stringify(webpackStats, null, 2)\n    )\n  }\n\n  async loadBuildManifest(\n    pageName: string,\n    type: 'app' | 'pages' = 'pages'\n  ): Promise<void> {\n    this.buildManifests.set(\n      getEntryKey(type, 'server', pageName),\n      await readPartialManifest(this.distDir, BUILD_MANIFEST, pageName, type)\n    )\n  }\n\n  async loadWebpackStats(\n    pageName: string,\n    type: 'app' | 'pages' = 'pages'\n  ): Promise<void> {\n    this.webpackStats.set(\n      getEntryKey(type, 'client', pageName),\n      await readPartialManifest(this.distDir, WEBPACK_STATS, pageName, type)\n    )\n  }\n\n  private mergeWebpackStats(statsFiles: Iterable<WebpackStats>): WebpackStats {\n    const entrypoints: Record<string, StatsChunkGroup> = {};\n    const assets: Map<string, StatsAsset> = new Map()\n    const chunks: Map<string, StatsChunk> = new Map()\n    const modules: Map<string | number, StatsModule> = new Map()\n\n    for (const statsFile of statsFiles) {\n      if (statsFile.entrypoints) {\n        for (const [k, v] of Object.entries(\n          statsFile.entrypoints\n        )) {\n          if (!entrypoints[k]) {\n            entrypoints[k] = v\n          }\n        }\n      }\n\n      if (statsFile.assets) {\n        for (const asset of statsFile.assets) {\n          if (!assets.has(asset.name)) {\n            assets.set(asset.name, asset)\n          }\n        }\n      }\n\n      if (statsFile.chunks) {\n        for (const chunk of statsFile.chunks) {\n          if (!chunks.has(chunk.name)) {\n            chunks.set(chunk.name, chunk)\n          }\n        }\n      }\n\n      if (statsFile.modules) {\n        for (const module of statsFile.modules) {\n          const id = module.id;\n          if (id != null) {\n            // Merge the chunk list for the module. This can vary across endpoints.\n            const existing = modules.get(id);\n            if (existing == null) {\n              modules.set(id, module)\n            } else if (module.chunks != null && existing.chunks != null) {\n              for (const chunk of module.chunks) {\n                if (!existing.chunks.includes(chunk)) {\n                  existing.chunks.push(chunk)\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      entrypoints,\n      assets: [...assets.values()],\n      chunks: [...chunks.values()],\n      modules: [...modules.values()],\n    }\n  }\n\n  private mergeBuildManifests(manifests: Iterable<BuildManifest>) {\n    const manifest: Partial<BuildManifest> & Pick<BuildManifest, 'pages'> = {\n      pages: {\n        '/_app': [],\n      },\n      // Something in next.js depends on these to exist even for app dir rendering\n      devFiles: [],\n      ampDevFiles: [],\n      polyfillFiles: [],\n      lowPriorityFiles: [\n        `static/${this.buildId}/_ssgManifest.js`,\n        `static/${this.buildId}/_buildManifest.js`,\n      ],\n      rootMainFiles: [],\n      ampFirstPages: [],\n    }\n    for (const m of manifests) {\n      Object.assign(manifest.pages, m.pages)\n      if (m.rootMainFiles.length) manifest.rootMainFiles = m.rootMainFiles\n      // polyfillFiles should always be the same, so we can overwrite instead of actually merging\n      if (m.polyfillFiles.length) manifest.polyfillFiles = m.polyfillFiles\n    }\n    return manifest\n  }\n\n  private async writeBuildManifest(\n    entrypoints: Entrypoints,\n    devRewrites: SetupOpts['fsChecker']['rewrites'] | undefined,\n    productionRewrites: CustomRoutes['rewrites'] | undefined\n  ): Promise<void> {\n    const rewrites = productionRewrites ?? {\n      ...devRewrites,\n      beforeFiles: (devRewrites?.beforeFiles ?? []).map(processRoute),\n      afterFiles: (devRewrites?.afterFiles ?? []).map(processRoute),\n      fallback: (devRewrites?.fallback ?? []).map(processRoute),\n    }\n    const buildManifest = this.mergeBuildManifests(this.buildManifests.values())\n    const buildManifestPath = join(this.distDir, BUILD_MANIFEST)\n    const middlewareBuildManifestPath = join(\n      this.distDir,\n      'server',\n      `${MIDDLEWARE_BUILD_MANIFEST}.js`\n    )\n    const interceptionRewriteManifestPath = join(\n      this.distDir,\n      'server',\n      `${INTERCEPTION_ROUTE_REWRITE_MANIFEST}.js`\n    )\n    deleteCache(buildManifestPath)\n    deleteCache(middlewareBuildManifestPath)\n    deleteCache(interceptionRewriteManifestPath)\n    await writeFileAtomic(\n      buildManifestPath,\n      JSON.stringify(buildManifest, null, 2)\n    )\n    await writeFileAtomic(\n      middlewareBuildManifestPath,\n      `self.__BUILD_MANIFEST=${JSON.stringify(buildManifest)};`\n    )\n\n    const interceptionRewrites = JSON.stringify(\n      rewrites.beforeFiles.filter(isInterceptionRouteRewrite)\n    )\n\n    await writeFileAtomic(\n      interceptionRewriteManifestPath,\n      `self.__INTERCEPTION_ROUTE_REWRITE_MANIFEST=${JSON.stringify(\n        interceptionRewrites\n      )};`\n    )\n\n    const pagesKeys = [...entrypoints.page.keys()]\n    if (entrypoints.global.app) {\n      pagesKeys.push('/_app')\n    }\n    if (entrypoints.global.error) {\n      pagesKeys.push('/_error')\n    }\n\n    const sortedPageKeys = getSortedRoutes(pagesKeys)\n    const content: ClientBuildManifest = {\n      __rewrites: normalizeRewritesForBuildManifest(rewrites) as any,\n      ...Object.fromEntries(\n        sortedPageKeys.map((pathname) => [\n          pathname,\n          [`static/chunks/pages${pathname === '/' ? '/index' : pathname}.js`],\n        ])\n      ),\n      sortedPages: sortedPageKeys,\n    }\n    const buildManifestJs = `self.__BUILD_MANIFEST = ${JSON.stringify(\n      content\n    )};self.__BUILD_MANIFEST_CB && self.__BUILD_MANIFEST_CB()`\n    await writeFileAtomic(\n      join(this.distDir, 'static', this.buildId, '_buildManifest.js'),\n      buildManifestJs\n    )\n    await writeFileAtomic(\n      join(this.distDir, 'static', this.buildId, '_ssgManifest.js'),\n      srcEmptySsgManifest\n    )\n  }\n\n  private async writeClientMiddlewareManifest(): Promise<void> {\n    const middlewareManifest = this.mergeMiddlewareManifests(\n      this.middlewareManifests.values()\n    )\n\n    const matchers = middlewareManifest?.middleware['/']?.matchers || []\n\n    const clientMiddlewareManifestPath = join(\n      this.distDir,\n      'static',\n      this.buildId,\n      `${TURBOPACK_CLIENT_MIDDLEWARE_MANIFEST}`\n    )\n    deleteCache(clientMiddlewareManifestPath)\n    await writeFileAtomic(\n      clientMiddlewareManifestPath,\n      JSON.stringify(matchers, null, 2)\n    )\n  }\n\n  private async writeFallbackBuildManifest(): Promise<void> {\n    const fallbackBuildManifest = this.mergeBuildManifests(\n      [\n        this.buildManifests.get(getEntryKey('pages', 'server', '_app')),\n        this.buildManifests.get(getEntryKey('pages', 'server', '_error')),\n      ].filter(Boolean) as BuildManifest[]\n    )\n    const fallbackBuildManifestPath = join(\n      this.distDir,\n      `fallback-${BUILD_MANIFEST}`\n    )\n    deleteCache(fallbackBuildManifestPath)\n    await writeFileAtomic(\n      fallbackBuildManifestPath,\n      JSON.stringify(fallbackBuildManifest, null, 2)\n    )\n  }\n\n  async loadFontManifest(\n    pageName: string,\n    type: 'app' | 'pages' = 'pages'\n  ): Promise<void> {\n    this.fontManifests.set(\n      getEntryKey(type, 'server', pageName),\n      await readPartialManifest(\n        this.distDir,\n        `${NEXT_FONT_MANIFEST}.json`,\n        pageName,\n        type\n      )\n    )\n  }\n\n  private mergeFontManifests(manifests: Iterable<NextFontManifest>) {\n    const manifest: NextFontManifest = {\n      app: {},\n      appUsingSizeAdjust: false,\n      pages: {},\n      pagesUsingSizeAdjust: false,\n    }\n    for (const m of manifests) {\n      Object.assign(manifest.app, m.app)\n      Object.assign(manifest.pages, m.pages)\n\n      manifest.appUsingSizeAdjust =\n        manifest.appUsingSizeAdjust || m.appUsingSizeAdjust\n      manifest.pagesUsingSizeAdjust =\n        manifest.pagesUsingSizeAdjust || m.pagesUsingSizeAdjust\n    }\n    return manifest\n  }\n\n  private async writeNextFontManifest(): Promise<void> {\n    const fontManifest = this.mergeFontManifests(this.fontManifests.values())\n    const json = JSON.stringify(fontManifest, null, 2)\n\n    const fontManifestJsonPath = join(\n      this.distDir,\n      'server',\n      `${NEXT_FONT_MANIFEST}.json`\n    )\n    const fontManifestJsPath = join(\n      this.distDir,\n      'server',\n      `${NEXT_FONT_MANIFEST}.js`\n    )\n    deleteCache(fontManifestJsonPath)\n    deleteCache(fontManifestJsPath)\n    await writeFileAtomic(fontManifestJsonPath, json)\n    await writeFileAtomic(\n      fontManifestJsPath,\n      `self.__NEXT_FONT_MANIFEST=${JSON.stringify(json)}`\n    )\n  }\n\n  async loadLoadableManifest(\n    pageName: string,\n    type: 'app' | 'pages' = 'pages'\n  ): Promise<void> {\n    this.loadableManifests.set(\n      getEntryKey(type, 'server', pageName),\n      await readPartialManifest(\n        this.distDir,\n        REACT_LOADABLE_MANIFEST,\n        pageName,\n        type\n      )\n    )\n  }\n\n  private mergeLoadableManifests(manifests: Iterable<LoadableManifest>) {\n    const manifest: LoadableManifest = {}\n    for (const m of manifests) {\n      Object.assign(manifest, m)\n    }\n    return manifest\n  }\n\n  private async writeLoadableManifest(): Promise<void> {\n    const loadableManifest = this.mergeLoadableManifests(\n      this.loadableManifests.values()\n    )\n    const loadableManifestPath = join(this.distDir, REACT_LOADABLE_MANIFEST)\n    const middlewareloadableManifestPath = join(\n      this.distDir,\n      'server',\n      `${MIDDLEWARE_REACT_LOADABLE_MANIFEST}.js`\n    )\n\n    const json = JSON.stringify(loadableManifest, null, 2)\n\n    deleteCache(loadableManifestPath)\n    deleteCache(middlewareloadableManifestPath)\n    await writeFileAtomic(loadableManifestPath, json)\n    await writeFileAtomic(\n      middlewareloadableManifestPath,\n      `self.__REACT_LOADABLE_MANIFEST=${JSON.stringify(json)}`\n    )\n  }\n\n  async loadMiddlewareManifest(\n    pageName: string,\n    type: 'pages' | 'app' | 'middleware' | 'instrumentation'\n  ): Promise<void> {\n    this.middlewareManifests.set(\n      getEntryKey(\n        type === 'middleware' || type === 'instrumentation' ? 'root' : type,\n        'server',\n        pageName\n      ),\n      await readPartialManifest(\n        this.distDir,\n        MIDDLEWARE_MANIFEST,\n        pageName,\n        type\n      )\n    )\n  }\n\n  getMiddlewareManifest(key: EntryKey) {\n    return this.middlewareManifests.get(key)\n  }\n\n  deleteMiddlewareManifest(key: EntryKey) {\n    return this.middlewareManifests.delete(key)\n  }\n\n  private mergeMiddlewareManifests(\n    manifests: Iterable<TurbopackMiddlewareManifest>\n  ): MiddlewareManifest {\n    const manifest: MiddlewareManifest = {\n      version: 3,\n      middleware: {},\n      sortedMiddleware: [],\n      functions: {},\n    }\n    let instrumentation: InstrumentationDefinition | undefined = undefined\n    for (const m of manifests) {\n      Object.assign(manifest.functions, m.functions)\n      Object.assign(manifest.middleware, m.middleware)\n      if (m.instrumentation) {\n        instrumentation = m.instrumentation\n      }\n    }\n    const updateFunctionDefinition = (\n      fun: EdgeFunctionDefinition\n    ): EdgeFunctionDefinition => {\n      return {\n        ...fun,\n        files: [...(instrumentation?.files ?? []), ...fun.files],\n      }\n    }\n    for (const key of Object.keys(manifest.middleware)) {\n      const value = manifest.middleware[key]\n      manifest.middleware[key] = updateFunctionDefinition(value)\n    }\n    for (const key of Object.keys(manifest.functions)) {\n      const value = manifest.functions[key]\n      manifest.functions[key] = updateFunctionDefinition(value)\n    }\n    for (const fun of Object.values(manifest.functions).concat(\n      Object.values(manifest.middleware)\n    )) {\n      for (const matcher of fun.matchers) {\n        if (!matcher.regexp) {\n          matcher.regexp = pathToRegexp(matcher.originalSource, [], {\n            delimiter: '/',\n            sensitive: false,\n            strict: true,\n          }).source.replaceAll('\\\\/', '/')\n        }\n      }\n    }\n    manifest.sortedMiddleware = Object.keys(manifest.middleware)\n\n    return manifest\n  }\n\n  private async writeMiddlewareManifest(): Promise<void> {\n    const middlewareManifest = this.mergeMiddlewareManifests(\n      this.middlewareManifests.values()\n    )\n\n    // Normalize regexes as it uses path-to-regexp\n    for (const key in middlewareManifest.middleware) {\n      middlewareManifest.middleware[key].matchers.forEach((matcher) => {\n        if (!matcher.regexp.startsWith('^')) {\n          const parsedPage = tryToParsePath(matcher.regexp)\n          if (parsedPage.error || !parsedPage.regexStr) {\n            throw new Error(`Invalid source: ${matcher.regexp}`)\n          }\n          matcher.regexp = parsedPage.regexStr\n        }\n      })\n    }\n\n    const middlewareManifestPath = join(\n      this.distDir,\n      'server',\n      MIDDLEWARE_MANIFEST\n    )\n    deleteCache(middlewareManifestPath)\n    await writeFileAtomic(\n      middlewareManifestPath,\n      JSON.stringify(middlewareManifest, null, 2)\n    )\n  }\n\n  async loadPagesManifest(pageName: string): Promise<void> {\n    this.pagesManifests.set(\n      getEntryKey('pages', 'server', pageName),\n      await readPartialManifest(this.distDir, PAGES_MANIFEST, pageName)\n    )\n  }\n\n  private mergePagesManifests(manifests: Iterable<PagesManifest>) {\n    const manifest: PagesManifest = {}\n    for (const m of manifests) {\n      Object.assign(manifest, m)\n    }\n    return manifest\n  }\n\n  private async writePagesManifest(): Promise<void> {\n    const pagesManifest = this.mergePagesManifests(this.pagesManifests.values())\n    const pagesManifestPath = join(this.distDir, 'server', PAGES_MANIFEST)\n    deleteCache(pagesManifestPath)\n    await writeFileAtomic(\n      pagesManifestPath,\n      JSON.stringify(pagesManifest, null, 2)\n    )\n  }\n\n  async writeManifests({\n    devRewrites,\n    productionRewrites,\n    entrypoints,\n  }: {\n    devRewrites: SetupOpts['fsChecker']['rewrites'] | undefined\n    productionRewrites: CustomRoutes['rewrites'] | undefined\n    entrypoints: Entrypoints\n  }) {\n    await this.writeActionManifest()\n    await this.writeAppBuildManifest()\n    await this.writeAppPathsManifest()\n    await this.writeBuildManifest(entrypoints, devRewrites, productionRewrites)\n    await this.writeFallbackBuildManifest()\n    await this.writeLoadableManifest()\n    await this.writeMiddlewareManifest()\n    await this.writeClientMiddlewareManifest()\n    await this.writeNextFontManifest()\n    await this.writePagesManifest()\n\n    if (process.env.TURBOPACK_STATS != null) {\n      await this.writeWebpackStats()\n    }\n  }\n}\n"],"names":["TurbopackManifestLoader","getManifestPath","page","distDir","name","type","manifestPath","posix","join","getAssetPathFromRoute","readPartialManifest","pageName","isSitemapRoute","test","existsSync","replace","endsWith","metadataPage","addRouteSuffix","addMetadataIdToRoute","removeRouteSuffix","JSON","parse","readFile","constructor","buildId","encryptionKey","actionManifests","Map","appBuildManifests","appPathsManifests","buildManifests","fontManifests","loadableManifests","middlewareManifests","pagesManifests","webpackStats","delete","key","loadActionManifest","set","getEntryKey","SERVER_REFERENCE_MANIFEST","mergeActionManifests","manifests","manifest","node","edge","mergeActionIds","actionEntries","other","action","workers","layer","Object","assign","m","writeActionManifest","actionManifest","values","actionManifestJsonPath","actionManifestJsPath","json","stringify","deleteCache","writeFileAtomic","loadAppBuildManifest","APP_BUILD_MANIFEST","mergeAppBuildManifests","pages","writeAppBuildManifest","appBuildManifest","appBuildManifestPath","loadAppPathsManifest","APP_PATHS_MANIFEST","writeAppPathsManifest","appPathsManifest","mergePagesManifests","appPathsManifestPath","writeWebpackStats","mergeWebpackStats","path","WEBPACK_STATS","loadBuildManifest","BUILD_MANIFEST","loadWebpackStats","statsFiles","entrypoints","assets","chunks","modules","statsFile","k","v","entries","asset","has","chunk","module","id","existing","get","includes","push","mergeBuildManifests","devFiles","ampDevFiles","polyfillFiles","lowPriorityFiles","rootMainFiles","ampFirstPages","length","writeBuildManifest","devRewrites","productionRewrites","rewrites","beforeFiles","map","processRoute","afterFiles","fallback","buildManifest","buildManifestPath","middlewareBuildManifestPath","MIDDLEWARE_BUILD_MANIFEST","interceptionRewriteManifestPath","INTERCEPTION_ROUTE_REWRITE_MANIFEST","interceptionRewrites","filter","isInterceptionRouteRewrite","pagesKeys","keys","global","app","error","sortedPageKeys","getSortedRoutes","content","__rewrites","normalizeRewritesForBuildManifest","fromEntries","pathname","sortedPages","buildManifestJs","srcEmptySsgManifest","writeClientMiddlewareManifest","middlewareManifest","mergeMiddlewareManifests","matchers","middleware","clientMiddlewareManifestPath","TURBOPACK_CLIENT_MIDDLEWARE_MANIFEST","writeFallbackBuildManifest","fallbackBuildManifest","Boolean","fallbackBuildManifestPath","loadFontManifest","NEXT_FONT_MANIFEST","mergeFontManifests","appUsingSizeAdjust","pagesUsingSizeAdjust","writeNextFontManifest","fontManifest","fontManifestJsonPath","fontManifestJsPath","loadLoadableManifest","REACT_LOADABLE_MANIFEST","mergeLoadableManifests","writeLoadableManifest","loadableManifest","loadableManifestPath","middlewareloadableManifestPath","MIDDLEWARE_REACT_LOADABLE_MANIFEST","loadMiddlewareManifest","MIDDLEWARE_MANIFEST","getMiddlewareManifest","deleteMiddlewareManifest","version","sortedMiddleware","functions","instrumentation","undefined","updateFunctionDefinition","fun","files","value","concat","matcher","regexp","pathToRegexp","originalSource","delimiter","sensitive","strict","source","replaceAll","writeMiddlewareManifest","forEach","startsWith","parsedPage","tryToParsePath","regexStr","Error","middlewareManifestPath","loadPagesManifest","PAGES_MANIFEST","writePagesManifest","pagesManifest","pagesManifestPath","writeManifests","process","env","TURBOPACK_STATS"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4516, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4521, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/dev/hot-reloader-turbopack.ts"],"sourcesContent":["import type { Socket } from 'net'\nimport { mkdir, writeFile } from 'fs/promises'\nimport { join, extname } from 'path'\nimport { pathToFileURL } from 'url'\n\nimport ws from 'next/dist/compiled/ws'\n\nimport type { OutputState } from '../../build/output/store'\nimport { store as consoleStore } from '../../build/output/store'\nimport type {\n  CompilationError,\n  HMR_ACTION_TYPES,\n  NextJsHotReloaderInterface,\n  ReloadPageAction,\n  SyncAction,\n  TurbopackConnectedAction,\n} from './hot-reloader-types'\nimport { HMR_ACTIONS_SENT_TO_BROWSER } from './hot-reloader-types'\nimport type {\n  Update as TurbopackUpdate,\n  Endpoint,\n  WrittenEndpoint,\n  TurbopackResult,\n  Project,\n} from '../../build/swc/types'\nimport { createDefineEnv } from '../../build/swc'\nimport * as Log from '../../build/output/log'\nimport {\n  getVersionInfo,\n  matchNextPageBundleRequest,\n} from './hot-reloader-webpack'\nimport { BLOCKED_PAGES } from '../../shared/lib/constants'\nimport {\n  getOverlayMiddleware,\n  getSourceMapMiddleware,\n} from '../../client/components/react-dev-overlay/server/middleware-turbopack'\nimport { PageNotFoundError } from '../../shared/lib/utils'\nimport { debounce } from '../utils'\nimport { deleteAppClientCache, deleteCache } from './require-cache'\nimport {\n  clearAllModuleContexts,\n  clearModuleContext,\n} from '../lib/render-server'\nimport { denormalizePagePath } from '../../shared/lib/page-path/denormalize-page-path'\nimport { trace } from '../../trace'\nimport {\n  AssetMapper,\n  type ChangeSubscriptions,\n  type ClientState,\n  type EntryIssuesMap,\n  formatIssue,\n  getTurbopackJsConfig,\n  handleEntrypoints,\n  handlePagesErrorRoute,\n  handleRouteType,\n  hasEntrypointForKey,\n  msToNs,\n  processIssues,\n  type ReadyIds,\n  renderStyledStringToErrorAnsi,\n  type SendHmr,\n  type StartBuilding,\n  processTopLevelIssues,\n  type TopLevelIssuesMap,\n  isWellKnownError,\n  printNonFatalIssue,\n  normalizedPageToTurbopackStructureRoute,\n  isPersistentCachingEnabled,\n} from './turbopack-utils'\nimport {\n  propagateServerField,\n  type ServerFields,\n  type SetupOpts,\n} from '../lib/router-utils/setup-dev-bundler'\nimport { TurbopackManifestLoader } from './turbopack/manifest-loader'\nimport type { Entrypoints } from './turbopack/types'\nimport { findPagePathData } from './on-demand-entry-handler'\nimport type { RouteDefinition } from '../route-definitions/route-definition'\nimport {\n  type EntryKey,\n  getEntryKey,\n  splitEntryKey,\n} from './turbopack/entry-key'\nimport { FAST_REFRESH_RUNTIME_RELOAD } from './messages'\nimport { generateEncryptionKeyBase64 } from '../app-render/encryption-utils-server'\nimport { isAppPageRouteDefinition } from '../route-definitions/app-page-route-definition'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { getNodeDebugType } from '../lib/utils'\nimport { isMetadataRouteFile } from '../../lib/metadata/is-metadata-route'\nimport {\n  setBundlerFindSourceMapImplementation,\n  type ModernSourceMapPayload,\n} from '../patch-error-inspect'\n// import { getSupportedBrowsers } from '../../build/utils'\n\nconst wsServer = new ws.Server({ noServer: true })\nconst isTestMode = !!(\n  process.env.NEXT_TEST_MODE ||\n  process.env.__NEXT_TEST_MODE ||\n  process.env.DEBUG\n)\n\nconst sessionId = Math.floor(Number.MAX_SAFE_INTEGER * Math.random())\n\n/**\n * Replaces turbopack://[project] with the specified project in the `source` field.\n */\nfunction rewriteTurbopackSources(\n  projectRoot: string,\n  sourceMap: ModernSourceMapPayload\n): void {\n  if ('sections' in sourceMap) {\n    for (const section of sourceMap.sections) {\n      rewriteTurbopackSources(projectRoot, section.map)\n    }\n  } else {\n    for (let i = 0; i < sourceMap.sources.length; i++) {\n      sourceMap.sources[i] = pathToFileURL(\n        join(\n          projectRoot,\n          sourceMap.sources[i].replace(/turbopack:\\/\\/\\[project\\]/, '')\n        )\n      ).toString()\n    }\n  }\n}\n\nfunction getSourceMapFromTurbopack(\n  project: Project,\n  projectRoot: string,\n  sourceURL: string\n): ModernSourceMapPayload | undefined {\n  let sourceMapJson: string | null = null\n\n  try {\n    sourceMapJson = project.getSourceMapSync(sourceURL)\n  } catch (err) {}\n\n  if (sourceMapJson === null) {\n    return undefined\n  } else {\n    const payload: ModernSourceMapPayload = JSON.parse(sourceMapJson)\n    // The sourcemap from Turbopack is not yet written to disk so its `sources`\n    // are not absolute paths yet. We need to rewrite them to be absolute paths.\n    rewriteTurbopackSources(projectRoot, payload)\n    return payload\n  }\n}\n\nexport async function createHotReloaderTurbopack(\n  opts: SetupOpts,\n  serverFields: ServerFields,\n  distDir: string,\n  resetFetch: () => void\n): Promise<NextJsHotReloaderInterface> {\n  const dev = true\n  const buildId = 'development'\n  const { nextConfig, dir } = opts\n\n  const { loadBindings } =\n    require('../../build/swc') as typeof import('../../build/swc')\n\n  let bindings = await loadBindings()\n\n  // For the debugging purpose, check if createNext or equivalent next instance setup in test cases\n  // works correctly. Normally `run-test` hides output so only will be visible when `--debug` flag is used.\n  if (process.env.TURBOPACK && isTestMode) {\n    require('console').log('Creating turbopack project', {\n      dir,\n      testMode: isTestMode,\n    })\n  }\n\n  const hasRewrites =\n    opts.fsChecker.rewrites.afterFiles.length > 0 ||\n    opts.fsChecker.rewrites.beforeFiles.length > 0 ||\n    opts.fsChecker.rewrites.fallback.length > 0\n\n  const hotReloaderSpan = trace('hot-reloader', undefined, {\n    version: process.env.__NEXT_VERSION as string,\n  })\n  // Ensure the hotReloaderSpan is flushed immediately as it's the parentSpan for all processing\n  // of the current `next dev` invocation.\n  hotReloaderSpan.stop()\n\n  const encryptionKey = await generateEncryptionKeyBase64({\n    isBuild: false,\n    distDir,\n  })\n\n  // TODO: Implement\n  let clientRouterFilters: any\n  if (nextConfig.experimental.clientRouterFilter) {\n    // TODO this need to be set correctly for persistent caching to work\n  }\n\n  // const supportedBrowsers = await getSupportedBrowsers(dir, dev)\n  const supportedBrowsers = [\n    'last 1 Chrome versions, last 1 Firefox versions, last 1 Safari versions, last 1 Edge versions',\n  ]\n\n  const project = await bindings.turbo.createProject(\n    {\n      projectPath: dir,\n      rootPath:\n        opts.nextConfig.experimental.turbo?.root ||\n        opts.nextConfig.outputFileTracingRoot ||\n        dir,\n      distDir,\n      nextConfig: opts.nextConfig,\n      jsConfig: await getTurbopackJsConfig(dir, nextConfig),\n      watch: {\n        enable: dev,\n        pollIntervalMs: nextConfig.watchOptions?.pollIntervalMs,\n      },\n      dev,\n      env: process.env as Record<string, string>,\n      defineEnv: createDefineEnv({\n        isTurbopack: true,\n        clientRouterFilters,\n        config: nextConfig,\n        dev,\n        distDir,\n        fetchCacheKeyPrefix: opts.nextConfig.experimental.fetchCacheKeyPrefix,\n        hasRewrites,\n        // TODO: Implement\n        middlewareMatchers: undefined,\n      }),\n      buildId,\n      encryptionKey,\n      previewProps: opts.fsChecker.prerenderManifest.preview,\n      browserslistQuery: supportedBrowsers.join(', '),\n    },\n    {\n      persistentCaching: isPersistentCachingEnabled(opts.nextConfig),\n      memoryLimit: opts.nextConfig.experimental.turbo?.memoryLimit,\n    }\n  )\n  setBundlerFindSourceMapImplementation(\n    getSourceMapFromTurbopack.bind(null, project, dir)\n  )\n  opts.onDevServerCleanup?.(async () => {\n    setBundlerFindSourceMapImplementation(() => undefined)\n    await project.onExit()\n  })\n  const entrypointsSubscription = project.entrypointsSubscribe()\n\n  const currentWrittenEntrypoints: Map<EntryKey, WrittenEndpoint> = new Map()\n  const currentEntrypoints: Entrypoints = {\n    global: {\n      app: undefined,\n      document: undefined,\n      error: undefined,\n\n      middleware: undefined,\n      instrumentation: undefined,\n    },\n\n    page: new Map(),\n    app: new Map(),\n  }\n\n  const currentTopLevelIssues: TopLevelIssuesMap = new Map()\n  const currentEntryIssues: EntryIssuesMap = new Map()\n\n  const manifestLoader = new TurbopackManifestLoader({\n    buildId,\n    distDir,\n    encryptionKey,\n  })\n\n  // Dev specific\n  const changeSubscriptions: ChangeSubscriptions = new Map()\n  const serverPathState = new Map<string, string>()\n  const readyIds: ReadyIds = new Set()\n  let currentEntriesHandlingResolve: ((value?: unknown) => void) | undefined\n  let currentEntriesHandling = new Promise(\n    (resolve) => (currentEntriesHandlingResolve = resolve)\n  )\n\n  const assetMapper = new AssetMapper()\n\n  function clearRequireCache(\n    key: EntryKey,\n    writtenEndpoint: WrittenEndpoint,\n    {\n      force,\n    }: {\n      // Always clear the cache, don't check if files have changed\n      force?: boolean\n    } = {}\n  ): void {\n    if (force) {\n      for (const { path, contentHash } of writtenEndpoint.serverPaths) {\n        serverPathState.set(path, contentHash)\n      }\n    } else {\n      // Figure out if the server files have changed\n      let hasChange = false\n      for (const { path, contentHash } of writtenEndpoint.serverPaths) {\n        // We ignore source maps\n        if (path.endsWith('.map')) continue\n        const localKey = `${key}:${path}`\n        const localHash = serverPathState.get(localKey)\n        const globalHash = serverPathState.get(path)\n        if (\n          (localHash && localHash !== contentHash) ||\n          (globalHash && globalHash !== contentHash)\n        ) {\n          hasChange = true\n          serverPathState.set(key, contentHash)\n          serverPathState.set(path, contentHash)\n        } else {\n          if (!localHash) {\n            serverPathState.set(key, contentHash)\n          }\n          if (!globalHash) {\n            serverPathState.set(path, contentHash)\n          }\n        }\n      }\n\n      if (!hasChange) {\n        return\n      }\n    }\n\n    resetFetch()\n\n    const hasAppPaths = writtenEndpoint.serverPaths.some(({ path: p }) =>\n      p.startsWith('server/app')\n    )\n\n    if (hasAppPaths) {\n      deleteAppClientCache()\n    }\n\n    const serverPaths = writtenEndpoint.serverPaths.map(({ path: p }) =>\n      join(distDir, p)\n    )\n\n    for (const file of serverPaths) {\n      clearModuleContext(file)\n      deleteCache(file)\n    }\n\n    return\n  }\n\n  const buildingIds = new Set()\n\n  const startBuilding: StartBuilding = (id, requestUrl, forceRebuild) => {\n    if (!forceRebuild && readyIds.has(id)) {\n      return () => {}\n    }\n    if (buildingIds.size === 0) {\n      consoleStore.setState(\n        {\n          loading: true,\n          trigger: id,\n          url: requestUrl,\n        } as OutputState,\n        true\n      )\n    }\n    buildingIds.add(id)\n    return function finishBuilding() {\n      if (buildingIds.size === 0) {\n        return\n      }\n      readyIds.add(id)\n      buildingIds.delete(id)\n      if (buildingIds.size === 0) {\n        hmrEventHappened = false\n        consoleStore.setState(\n          {\n            loading: false,\n          } as OutputState,\n          true\n        )\n      }\n    }\n  }\n\n  let hmrEventHappened = false\n  let hmrHash = 0\n\n  const clients = new Set<ws>()\n  const clientStates = new WeakMap<ws, ClientState>()\n\n  function sendToClient(client: ws, payload: HMR_ACTION_TYPES) {\n    client.send(JSON.stringify(payload))\n  }\n\n  function sendEnqueuedMessages() {\n    for (const [, issueMap] of currentEntryIssues) {\n      if (\n        [...issueMap.values()].filter((i) => i.severity !== 'warning').length >\n        0\n      ) {\n        // During compilation errors we want to delay the HMR events until errors are fixed\n        return\n      }\n    }\n\n    for (const client of clients) {\n      const state = clientStates.get(client)\n      if (!state) {\n        continue\n      }\n\n      for (const [, issueMap] of state.clientIssues) {\n        if (\n          [...issueMap.values()].filter((i) => i.severity !== 'warning')\n            .length > 0\n        ) {\n          // During compilation errors we want to delay the HMR events until errors are fixed\n          return\n        }\n      }\n\n      for (const payload of state.hmrPayloads.values()) {\n        sendToClient(client, payload)\n      }\n      state.hmrPayloads.clear()\n\n      if (state.turbopackUpdates.length > 0) {\n        sendToClient(client, {\n          action: HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_MESSAGE,\n          data: state.turbopackUpdates,\n        })\n        state.turbopackUpdates.length = 0\n      }\n    }\n  }\n  const sendEnqueuedMessagesDebounce = debounce(sendEnqueuedMessages, 2)\n\n  const sendHmr: SendHmr = (id: string, payload: HMR_ACTION_TYPES) => {\n    for (const client of clients) {\n      clientStates.get(client)?.hmrPayloads.set(id, payload)\n    }\n\n    hmrEventHappened = true\n    sendEnqueuedMessagesDebounce()\n  }\n\n  function sendTurbopackMessage(payload: TurbopackUpdate) {\n    // TODO(PACK-2049): For some reason we end up emitting hundreds of issues messages on bigger apps,\n    //   a lot of which are duplicates.\n    //   They are currently not handled on the client at all, so might as well not send them for now.\n    payload.diagnostics = []\n    payload.issues = []\n\n    for (const client of clients) {\n      clientStates.get(client)?.turbopackUpdates.push(payload)\n    }\n\n    hmrEventHappened = true\n    sendEnqueuedMessagesDebounce()\n  }\n\n  async function subscribeToChanges(\n    key: EntryKey,\n    includeIssues: boolean,\n    endpoint: Endpoint,\n    makePayload: (\n      change: TurbopackResult\n    ) => Promise<HMR_ACTION_TYPES> | HMR_ACTION_TYPES | void,\n    onError?: (\n      error: Error\n    ) => Promise<HMR_ACTION_TYPES> | HMR_ACTION_TYPES | void\n  ) {\n    if (changeSubscriptions.has(key)) {\n      return\n    }\n\n    const { side } = splitEntryKey(key)\n\n    const changedPromise = endpoint[`${side}Changed`](includeIssues)\n    changeSubscriptions.set(key, changedPromise)\n    try {\n      const changed = await changedPromise\n\n      for await (const change of changed) {\n        processIssues(currentEntryIssues, key, change, false, true)\n        const payload = await makePayload(change)\n        if (payload) {\n          sendHmr(key, payload)\n        }\n      }\n    } catch (e) {\n      changeSubscriptions.delete(key)\n      const payload = await onError?.(e as Error)\n      if (payload) {\n        sendHmr(key, payload)\n      }\n      return\n    }\n    changeSubscriptions.delete(key)\n  }\n\n  async function unsubscribeFromChanges(key: EntryKey) {\n    const subscription = await changeSubscriptions.get(key)\n    if (subscription) {\n      await subscription.return?.()\n      changeSubscriptions.delete(key)\n    }\n    currentEntryIssues.delete(key)\n  }\n\n  async function subscribeToHmrEvents(client: ws, id: string) {\n    const key = getEntryKey('assets', 'client', id)\n    if (!hasEntrypointForKey(currentEntrypoints, key, assetMapper)) {\n      // maybe throw an error / force the client to reload?\n      return\n    }\n\n    const state = clientStates.get(client)\n    if (!state || state.subscriptions.has(id)) {\n      return\n    }\n\n    const subscription = project!.hmrEvents(id)\n    state.subscriptions.set(id, subscription)\n\n    // The subscription will always emit once, which is the initial\n    // computation. This is not a change, so swallow it.\n    try {\n      await subscription.next()\n\n      for await (const data of subscription) {\n        processIssues(state.clientIssues, key, data, false, true)\n        if (data.type !== 'issues') {\n          sendTurbopackMessage(data)\n        }\n      }\n    } catch (e) {\n      // The client might be using an HMR session from a previous server, tell them\n      // to fully reload the page to resolve the issue. We can't use\n      // `hotReloader.send` since that would force every connected client to\n      // reload, only this client is out of date.\n      const reloadAction: ReloadPageAction = {\n        action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE,\n        data: `error in HMR event subscription for ${id}: ${e}`,\n      }\n      sendToClient(client, reloadAction)\n      client.close()\n      return\n    }\n  }\n\n  function unsubscribeFromHmrEvents(client: ws, id: string) {\n    const state = clientStates.get(client)\n    if (!state) {\n      return\n    }\n\n    const subscription = state.subscriptions.get(id)\n    subscription?.return!()\n\n    const key = getEntryKey('assets', 'client', id)\n    state.clientIssues.delete(key)\n  }\n\n  async function handleEntrypointsSubscription() {\n    for await (const entrypoints of entrypointsSubscription) {\n      if (!currentEntriesHandlingResolve) {\n        currentEntriesHandling = new Promise(\n          // eslint-disable-next-line no-loop-func\n          (resolve) => (currentEntriesHandlingResolve = resolve)\n        )\n      }\n\n      processTopLevelIssues(currentTopLevelIssues, entrypoints)\n\n      await handleEntrypoints({\n        entrypoints,\n\n        currentEntrypoints,\n\n        currentEntryIssues,\n        manifestLoader,\n        devRewrites: opts.fsChecker.rewrites,\n        productionRewrites: undefined,\n        logErrors: true,\n\n        dev: {\n          assetMapper,\n          changeSubscriptions,\n          clients,\n          clientStates,\n          serverFields,\n\n          hooks: {\n            handleWrittenEndpoint: (id, result) => {\n              currentWrittenEntrypoints.set(id, result)\n              clearRequireCache(id, result)\n            },\n            propagateServerField: propagateServerField.bind(null, opts),\n            sendHmr,\n            startBuilding,\n            subscribeToChanges,\n            unsubscribeFromChanges,\n            unsubscribeFromHmrEvents,\n          },\n        },\n      })\n\n      currentEntriesHandlingResolve!()\n      currentEntriesHandlingResolve = undefined\n    }\n  }\n\n  await mkdir(join(distDir, 'server'), { recursive: true })\n  await mkdir(join(distDir, 'static', buildId), { recursive: true })\n  await writeFile(\n    join(distDir, 'package.json'),\n    JSON.stringify(\n      {\n        type: 'commonjs',\n      },\n      null,\n      2\n    )\n  )\n\n  const middlewares = [\n    getOverlayMiddleware(project),\n    getSourceMapMiddleware(project),\n  ]\n\n  const versionInfoPromise = getVersionInfo(\n    isTestMode || opts.telemetry.isEnabled\n  )\n\n  let devtoolsFrontendUrl: string | undefined\n  const nodeDebugType = getNodeDebugType()\n  if (nodeDebugType) {\n    const debugPort = process.debugPort\n    let debugInfo\n    try {\n      // It requires to use 127.0.0.1 instead of localhost for server-side fetching.\n      const debugInfoList = await fetch(\n        `http://127.0.0.1:${debugPort}/json/list`\n      ).then((res) => res.json())\n      debugInfo = debugInfoList[0]\n    } catch {}\n    if (debugInfo) {\n      devtoolsFrontendUrl = debugInfo.devtoolsFrontendUrl\n    }\n  }\n\n  const hotReloader: NextJsHotReloaderInterface = {\n    turbopackProject: project,\n    activeWebpackConfigs: undefined,\n    serverStats: null,\n    edgeServerStats: null,\n    async run(req, res, _parsedUrl) {\n      // intercept page chunks request and ensure them with turbopack\n      if (req.url?.startsWith('/_next/static/chunks/pages/')) {\n        const params = matchNextPageBundleRequest(req.url)\n\n        if (params) {\n          const decodedPagePath = `/${params.path\n            .map((param: string) => decodeURIComponent(param))\n            .join('/')}`\n\n          const denormalizedPagePath = denormalizePagePath(decodedPagePath)\n\n          await hotReloader\n            .ensurePage({\n              page: denormalizedPagePath,\n              clientOnly: false,\n              definition: undefined,\n              url: req.url,\n            })\n            .catch(console.error)\n        }\n      }\n\n      for (const middleware of middlewares) {\n        let calledNext = false\n\n        await middleware(req, res, () => {\n          calledNext = true\n        })\n\n        if (!calledNext) {\n          return { finished: true }\n        }\n      }\n\n      // Request was not finished.\n      return { finished: undefined }\n    },\n\n    // TODO: Figure out if socket type can match the NextJsHotReloaderInterface\n    onHMR(req, socket: Socket, head, onUpgrade) {\n      wsServer.handleUpgrade(req, socket, head, (client) => {\n        onUpgrade(client)\n        const clientIssues: EntryIssuesMap = new Map()\n        const subscriptions: Map<string, AsyncIterator<any>> = new Map()\n\n        clients.add(client)\n        clientStates.set(client, {\n          clientIssues,\n          hmrPayloads: new Map(),\n          turbopackUpdates: [],\n          subscriptions,\n        })\n\n        client.on('close', () => {\n          // Remove active subscriptions\n          for (const subscription of subscriptions.values()) {\n            subscription.return?.()\n          }\n          clientStates.delete(client)\n          clients.delete(client)\n        })\n\n        client.addEventListener('message', ({ data }) => {\n          const parsedData = JSON.parse(\n            typeof data !== 'string' ? data.toString() : data\n          )\n\n          // Next.js messages\n          switch (parsedData.event) {\n            case 'ping':\n              // Ping doesn't need additional handling in Turbopack.\n              break\n            case 'span-end': {\n              hotReloaderSpan.manualTraceChild(\n                parsedData.spanName,\n                msToNs(parsedData.startTime),\n                msToNs(parsedData.endTime),\n                parsedData.attributes\n              )\n              break\n            }\n            case 'client-hmr-latency': // { id, startTime, endTime, page, updatedModules, isPageHidden }\n              hotReloaderSpan.manualTraceChild(\n                parsedData.event,\n                msToNs(parsedData.startTime),\n                msToNs(parsedData.endTime),\n                {\n                  updatedModules: parsedData.updatedModules,\n                  page: parsedData.page,\n                  isPageHidden: parsedData.isPageHidden,\n                }\n              )\n              break\n            case 'client-error': // { errorCount, clientId }\n            case 'client-warning': // { warningCount, clientId }\n            case 'client-success': // { clientId }\n            case 'server-component-reload-page': // { clientId }\n            case 'client-reload-page': // { clientId }\n            case 'client-removed-page': // { page }\n            case 'client-full-reload': // { stackTrace, hadRuntimeError }\n              const { hadRuntimeError, dependencyChain } = parsedData\n              if (hadRuntimeError) {\n                Log.warn(FAST_REFRESH_RUNTIME_RELOAD)\n              }\n              if (\n                Array.isArray(dependencyChain) &&\n                typeof dependencyChain[0] === 'string'\n              ) {\n                const cleanedModulePath = dependencyChain[0]\n                  .replace(/^\\[project\\]/, '.')\n                  .replace(/ \\[.*\\] \\(.*\\)$/, '')\n                Log.warn(\n                  `Fast Refresh had to perform a full reload when ${cleanedModulePath} changed. Read more: https://nextjs.org/docs/messages/fast-refresh-reload`\n                )\n              }\n              break\n            case 'client-added-page':\n              // TODO\n              break\n\n            default:\n              // Might be a Turbopack message...\n              if (!parsedData.type) {\n                throw new Error(`unrecognized HMR message \"${data}\"`)\n              }\n          }\n\n          // Turbopack messages\n          switch (parsedData.type) {\n            case 'turbopack-subscribe':\n              subscribeToHmrEvents(client, parsedData.path)\n              break\n\n            case 'turbopack-unsubscribe':\n              unsubscribeFromHmrEvents(client, parsedData.path)\n              break\n\n            default:\n              if (!parsedData.event) {\n                throw new Error(`unrecognized Turbopack HMR message \"${data}\"`)\n              }\n          }\n        })\n\n        const turbopackConnected: TurbopackConnectedAction = {\n          action: HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_CONNECTED,\n          data: { sessionId },\n        }\n        sendToClient(client, turbopackConnected)\n\n        const errors: CompilationError[] = []\n\n        for (const entryIssues of currentEntryIssues.values()) {\n          for (const issue of entryIssues.values()) {\n            if (issue.severity !== 'warning') {\n              errors.push({\n                message: formatIssue(issue),\n              })\n            } else {\n              printNonFatalIssue(issue)\n            }\n          }\n        }\n\n        ;(async function () {\n          const versionInfo = await versionInfoPromise\n\n          const sync: SyncAction = {\n            action: HMR_ACTIONS_SENT_TO_BROWSER.SYNC,\n            errors,\n            warnings: [],\n            hash: '',\n            versionInfo,\n            debug: {\n              devtoolsFrontendUrl,\n            },\n          }\n\n          sendToClient(client, sync)\n        })()\n      })\n    },\n\n    send(action) {\n      const payload = JSON.stringify(action)\n      for (const client of clients) {\n        client.send(payload)\n      }\n    },\n\n    setHmrServerError(_error) {\n      // Not implemented yet.\n    },\n    clearHmrServerError() {\n      // Not implemented yet.\n    },\n    async start() {},\n    async stop() {\n      // Not implemented yet.\n    },\n    async getCompilationErrors(page) {\n      const appEntryKey = getEntryKey('app', 'server', page)\n      const pagesEntryKey = getEntryKey('pages', 'server', page)\n\n      const topLevelIssues = currentTopLevelIssues.values()\n\n      const thisEntryIssues =\n        currentEntryIssues.get(appEntryKey) ??\n        currentEntryIssues.get(pagesEntryKey)\n\n      if (thisEntryIssues !== undefined && thisEntryIssues.size > 0) {\n        // If there is an error related to the requesting page we display it instead of the first error\n        return [...topLevelIssues, ...thisEntryIssues.values()]\n          .map((issue) => {\n            const formattedIssue = formatIssue(issue)\n            if (issue.severity === 'warning') {\n              printNonFatalIssue(issue)\n              return null\n            } else if (isWellKnownError(issue)) {\n              Log.error(formattedIssue)\n            }\n\n            return new Error(formattedIssue)\n          })\n          .filter((error) => error !== null)\n      }\n\n      // Otherwise, return all errors across pages\n      const errors = []\n      for (const issue of topLevelIssues) {\n        if (issue.severity !== 'warning') {\n          errors.push(new Error(formatIssue(issue)))\n        }\n      }\n      for (const entryIssues of currentEntryIssues.values()) {\n        for (const issue of entryIssues.values()) {\n          if (issue.severity !== 'warning') {\n            const message = formatIssue(issue)\n            errors.push(new Error(message))\n          } else {\n            printNonFatalIssue(issue)\n          }\n        }\n      }\n      return errors\n    },\n    async invalidate({\n      // .env files or tsconfig/jsconfig change\n      reloadAfterInvalidation,\n    }) {\n      if (reloadAfterInvalidation) {\n        for (const [key, entrypoint] of currentWrittenEntrypoints) {\n          clearRequireCache(key, entrypoint, { force: true })\n        }\n\n        await clearAllModuleContexts()\n        this.send({\n          action: HMR_ACTIONS_SENT_TO_BROWSER.SERVER_COMPONENT_CHANGES,\n        })\n      }\n    },\n    async buildFallbackError() {\n      // Not implemented yet.\n    },\n    async ensurePage({\n      page: inputPage,\n      // Unused parameters\n      // clientOnly,\n      appPaths,\n      definition,\n      isApp,\n      url: requestUrl,\n    }) {\n      return hotReloaderSpan\n        .traceChild('ensure-page', {\n          inputPage,\n        })\n        .traceAsyncFn(async () => {\n          if (BLOCKED_PAGES.includes(inputPage) && inputPage !== '/_error') {\n            return\n          }\n\n          await currentEntriesHandling\n\n          // TODO We shouldn't look into the filesystem again. This should use the information from entrypoints\n          let routeDef: Pick<\n            RouteDefinition,\n            'filename' | 'bundlePath' | 'page'\n          > =\n            definition ??\n            (await findPagePathData(\n              dir,\n              inputPage,\n              nextConfig.pageExtensions,\n              opts.pagesDir,\n              opts.appDir\n            ))\n\n          // If the route is actually an app page route, then we should have access\n          // to the app route definition, and therefore, the appPaths from it.\n          if (!appPaths && definition && isAppPageRouteDefinition(definition)) {\n            appPaths = definition.appPaths\n          }\n\n          let page = routeDef.page\n          if (appPaths) {\n            const normalizedPage = normalizeAppPath(page)\n\n            // filter out paths that are not exact matches (e.g. catchall)\n            const matchingAppPaths = appPaths.filter(\n              (path) => normalizeAppPath(path) === normalizedPage\n            )\n\n            // the last item in the array is the root page, if there are parallel routes\n            page = matchingAppPaths[matchingAppPaths.length - 1]\n          }\n\n          const pathname = definition?.pathname ?? inputPage\n\n          if (page === '/_error') {\n            let finishBuilding = startBuilding(pathname, requestUrl, false)\n            try {\n              await handlePagesErrorRoute({\n                dev: true,\n                currentEntryIssues,\n                entrypoints: currentEntrypoints,\n                manifestLoader,\n                devRewrites: opts.fsChecker.rewrites,\n                productionRewrites: undefined,\n                logErrors: true,\n\n                hooks: {\n                  subscribeToChanges,\n                  handleWrittenEndpoint: (id, result) => {\n                    clearRequireCache(id, result)\n                    currentWrittenEntrypoints.set(id, result)\n                    assetMapper.setPathsForKey(id, result.clientPaths)\n                  },\n                },\n              })\n            } finally {\n              finishBuilding()\n            }\n            return\n          }\n\n          const isInsideAppDir = routeDef.bundlePath.startsWith('app/')\n          const isEntryMetadataRouteFile = isMetadataRouteFile(\n            routeDef.filename.replace(opts.appDir || '', ''),\n            nextConfig.pageExtensions,\n            true\n          )\n          const normalizedAppPage = isEntryMetadataRouteFile\n            ? normalizedPageToTurbopackStructureRoute(\n                page,\n                extname(routeDef.filename)\n              )\n            : page\n\n          const route = isInsideAppDir\n            ? currentEntrypoints.app.get(normalizedAppPage)\n            : currentEntrypoints.page.get(page)\n\n          if (!route) {\n            // TODO: why is this entry missing in turbopack?\n            if (page === '/middleware') return\n            if (page === '/src/middleware') return\n            if (page === '/instrumentation') return\n            if (page === '/src/instrumentation') return\n\n            throw new PageNotFoundError(`route not found ${page}`)\n          }\n\n          // We don't throw on ensureOpts.isApp === true for page-api\n          // since this can happen when app pages make\n          // api requests to page API routes.\n          if (isApp && route.type === 'page') {\n            throw new Error(`mis-matched route type: isApp && page for ${page}`)\n          }\n\n          const finishBuilding = startBuilding(pathname, requestUrl, false)\n          try {\n            await handleRouteType({\n              dev,\n              page,\n              pathname,\n              route,\n              currentEntryIssues,\n              entrypoints: currentEntrypoints,\n              manifestLoader,\n              readyIds,\n              devRewrites: opts.fsChecker.rewrites,\n              productionRewrites: undefined,\n              logErrors: true,\n\n              hooks: {\n                subscribeToChanges,\n                handleWrittenEndpoint: (id, result) => {\n                  currentWrittenEntrypoints.set(id, result)\n                  clearRequireCache(id, result)\n                  assetMapper.setPathsForKey(id, result.clientPaths)\n                },\n              },\n            })\n          } finally {\n            finishBuilding()\n          }\n        })\n    },\n  }\n\n  handleEntrypointsSubscription().catch((err) => {\n    console.error(err)\n    process.exit(1)\n  })\n\n  // Write empty manifests\n  await currentEntriesHandling\n  await manifestLoader.writeManifests({\n    devRewrites: opts.fsChecker.rewrites,\n    productionRewrites: undefined,\n    entrypoints: currentEntrypoints,\n  })\n\n  async function handleProjectUpdates() {\n    for await (const updateMessage of project.updateInfoSubscribe(30)) {\n      switch (updateMessage.updateType) {\n        case 'start': {\n          hotReloader.send({ action: HMR_ACTIONS_SENT_TO_BROWSER.BUILDING })\n          break\n        }\n        case 'end': {\n          sendEnqueuedMessages()\n\n          function addErrors(\n            errorsMap: Map<string, CompilationError>,\n            issues: EntryIssuesMap\n          ) {\n            for (const issueMap of issues.values()) {\n              for (const [key, issue] of issueMap) {\n                if (issue.severity === 'warning') continue\n                if (errorsMap.has(key)) continue\n\n                const message = formatIssue(issue)\n\n                errorsMap.set(key, {\n                  message,\n                  details: issue.detail\n                    ? renderStyledStringToErrorAnsi(issue.detail)\n                    : undefined,\n                })\n              }\n            }\n          }\n\n          const errors = new Map<string, CompilationError>()\n          addErrors(errors, currentEntryIssues)\n\n          for (const client of clients) {\n            const state = clientStates.get(client)\n            if (!state) {\n              continue\n            }\n\n            const clientErrors = new Map(errors)\n            addErrors(clientErrors, state.clientIssues)\n\n            sendToClient(client, {\n              action: HMR_ACTIONS_SENT_TO_BROWSER.BUILT,\n              hash: String(++hmrHash),\n              errors: [...clientErrors.values()],\n              warnings: [],\n            })\n          }\n\n          if (hmrEventHappened) {\n            const time = updateMessage.value.duration\n            const timeMessage =\n              time > 2000 ? `${Math.round(time / 100) / 10}s` : `${time}ms`\n            Log.event(`Compiled in ${timeMessage}`)\n            hmrEventHappened = false\n          }\n          break\n        }\n        default:\n      }\n    }\n  }\n\n  handleProjectUpdates().catch((err) => {\n    console.error(err)\n    process.exit(1)\n  })\n\n  return hotReloader\n}\n"],"names":["createHotReloaderTurbopack","wsServer","ws","Server","noServer","isTestMode","process","env","NEXT_TEST_MODE","__NEXT_TEST_MODE","DEBUG","sessionId","Math","floor","Number","MAX_SAFE_INTEGER","random","rewriteTurbopackSources","projectRoot","sourceMap","section","sections","map","i","sources","length","pathToFileURL","join","replace","toString","getSourceMapFromTurbopack","project","sourceURL","sourceMapJson","getSourceMapSync","err","undefined","payload","JSON","parse","opts","serverFields","distDir","resetFetch","nextConfig","dev","buildId","dir","loadBindings","require","bindings","TURBOPACK","log","testMode","hasRewrites","fsChecker","rewrites","afterFiles","beforeFiles","fallback","hotReloaderSpan","trace","version","__NEXT_VERSION","stop","encryptionKey","generateEncryptionKeyBase64","isBuild","clientRouterFilters","experimental","clientRouterFilter","supportedBrowsers","turbo","createProject","projectPath","rootPath","root","outputFileTracingRoot","jsConfig","getTurbopackJsConfig","watch","enable","pollIntervalMs","watchOptions","defineEnv","createDefineEnv","isTurbopack","config","fetchCacheKeyPrefix","middlewareMatchers","previewProps","prerenderManifest","preview","browserslistQuery","persistentCaching","isPersistentCachingEnabled","memoryLimit","setBundlerFindSourceMapImplementation","bind","onDevServerCleanup","onExit","entrypointsSubscription","entrypointsSubscribe","currentWrittenEntrypoints","Map","currentEntrypoints","global","app","document","error","middleware","instrumentation","page","currentTopLevelIssues","currentEntryIssues","manifestLoader","TurbopackManifestLoader","changeSubscriptions","serverPathState","readyIds","Set","currentEntriesHandlingResolve","currentEntriesHandling","Promise","resolve","assetMapper","AssetMapper","clearRequireCache","key","writtenEndpoint","force","path","contentHash","serverPaths","set","hasChange","endsWith","localKey","localHash","get","globalHash","hasAppPaths","some","p","startsWith","deleteAppClientCache","file","clearModuleContext","deleteCache","buildingIds","startBuilding","id","requestUrl","forceRebuild","has","size","consoleStore","setState","loading","trigger","url","add","finishBuilding","delete","hmrEventHappened","hmrHash","clients","clientStates","WeakMap","sendToClient","client","send","stringify","sendEnqueuedMessages","issueMap","values","filter","severity","state","clientIssues","hmrPayloads","clear","turbopackUpdates","action","HMR_ACTIONS_SENT_TO_BROWSER","TURBOPACK_MESSAGE","data","sendEnqueuedMessagesDebounce","debounce","sendHmr","sendTurbopackMessage","diagnostics","issues","push","subscribeToChanges","includeIssues","endpoint","makePayload","onError","side","splitEntryKey","changedPromise","changed","change","processIssues","e","unsubscribeFromChanges","subscription","return","subscribeToHmrEvents","getEntryKey","hasEntrypointForKey","subscriptions","hmrEvents","next","type","reloadAction","RELOAD_PAGE","close","unsubscribeFromHmrEvents","handleEntrypointsSubscription","entrypoints","processTopLevelIssues","handleEntrypoints","devRewrites","productionRewrites","logErrors","hooks","handleWrittenEndpoint","result","propagateServerField","mkdir","recursive","writeFile","middlewares","getOverlayMiddleware","getSourceMapMiddleware","versionInfoPromise","getVersionInfo","telemetry","isEnabled","devtoolsFrontendUrl","nodeDebugType","getNodeDebugType","debugPort","debugInfo","debugInfoList","fetch","then","res","json","hotReloader","turbopackProject","activeWebpackConfigs","serverStats","edgeServerStats","run","req","_parsedUrl","params","matchNextPageBundleRequest","decodedPagePath","param","decodeURIComponent","denormalizedPagePath","denormalizePagePath","ensurePage","clientOnly","definition","catch","console","calledNext","finished","onHMR","socket","head","onUpgrade","handleUpgrade","on","addEventListener","parsedData","event","manualTraceChild","spanName","msToNs","startTime","endTime","attributes","updatedModules","isPageHidden","hadRuntimeError","dependencyChain","Log","warn","FAST_REFRESH_RUNTIME_RELOAD","Array","isArray","cleanedModulePath","Error","turbopackConnected","TURBOPACK_CONNECTED","errors","entryIssues","issue","message","formatIssue","printNonFatalIssue","versionInfo","sync","SYNC","warnings","hash","debug","setHmrServerError","_error","clearHmrServerError","start","getCompilationErrors","appEntryKey","pagesEntryKey","topLevelIssues","thisEntryIssues","formattedIssue","isWellKnownError","invalidate","reloadAfterInvalidation","entrypoint","clearAllModuleContexts","SERVER_COMPONENT_CHANGES","buildFallbackError","inputPage","appPaths","isApp","traceChild","traceAsyncFn","BLOCKED_PAGES","includes","routeDef","findPagePathData","pageExtensions","pagesDir","appDir","isAppPageRouteDefinition","normalizedPage","normalizeAppPath","matchingAppPaths","pathname","handlePagesErrorRoute","setPathsForKey","clientPaths","isInsideAppDir","bundlePath","isEntryMetadataRouteFile","isMetadataRouteFile","filename","normalizedAppPage","normalizedPageToTurbopackStructureRoute","extname","route","PageNotFoundError","handleRouteType","exit","writeManifests","handleProjectUpdates","updateMessage","updateInfoSubscribe","updateType","BUILDING","addErrors","errorsMap","details","detail","renderStyledStringToErrorAnsi","clientErrors","BUILT","String","time","value","duration","timeMessage","round"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5410, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}