{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 11, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/dist/compiled/%40next/font/dist/google/google-fonts-metadata.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.googleFontsMetadata = void 0;\nconst font_data_json_1 = __importDefault(require(\"./font-data.json\"));\nexports.googleFontsMetadata = font_data_json_1.default;\n"],"names":[],"mappings":"AAAA;AACA,IAAI,kBAAkB,AAAC,IAAI,IAAI,IAAI,CAAC,eAAe,IAAK,SAAU,GAAG;IACjE,OAAO,AAAC,OAAO,IAAI,UAAU,GAAI,MAAM;QAAE,WAAW;IAAI;AAC5D;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,mBAAmB,GAAG,KAAK;AACnC,MAAM,mBAAmB;AACzB,QAAQ,mBAAmB,GAAG,iBAAiB,OAAO","ignoreList":[0]}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/dist/compiled/%40next/font/dist/google/validate-google-font-function-call.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateGoogleFontFunctionCall = validateGoogleFontFunctionCall;\nconst constants_1 = require(\"../constants\");\nconst format_available_values_1 = require(\"../format-available-values\");\nconst next_font_error_1 = require(\"../next-font-error\");\nconst google_fonts_metadata_1 = require(\"./google-fonts-metadata\");\n/**\n * Validate the data recieved from next-swc next-transform-font on next/font/google calls\n */\nfunction validateGoogleFontFunctionCall(functionName, fontFunctionArgument) {\n    let { weight, style, preload = true, display = 'swap', axes, fallback, adjustFontFallback = true, variable, subsets, } = fontFunctionArgument || {};\n    if (functionName === '') {\n        (0, next_font_error_1.nextFontError)(`next/font/google has no default export`);\n    }\n    const fontFamily = functionName.replace(/_/g, ' ');\n    // Get the Google font metadata, we'll use this to validate the font arguments and to print better error messages\n    const fontFamilyData = google_fonts_metadata_1.googleFontsMetadata[fontFamily];\n    if (!fontFamilyData) {\n        (0, next_font_error_1.nextFontError)(`Unknown font \\`${fontFamily}\\``);\n    }\n    const availableSubsets = fontFamilyData.subsets;\n    if (availableSubsets.length === 0) {\n        // If the font doesn't have any preloadeable subsets, disable preload\n        preload = false;\n    }\n    else if (preload) {\n        if (!subsets) {\n            (0, next_font_error_1.nextFontError)(`Preload is enabled but no subsets were specified for font \\`${fontFamily}\\`. Please specify subsets or disable preloading if your intended subset can't be preloaded.\\nAvailable subsets: ${(0, format_available_values_1.formatAvailableValues)(availableSubsets)}\\n\\nRead more: https://nextjs.org/docs/messages/google-fonts-missing-subsets`);\n        }\n        subsets.forEach((subset) => {\n            if (!availableSubsets.includes(subset)) {\n                (0, next_font_error_1.nextFontError)(`Unknown subset \\`${subset}\\` for font \\`${fontFamily}\\`.\\nAvailable subsets: ${(0, format_available_values_1.formatAvailableValues)(availableSubsets)}`);\n            }\n        });\n    }\n    const fontWeights = fontFamilyData.weights;\n    const fontStyles = fontFamilyData.styles;\n    // Get the unique weights and styles from the function call\n    const weights = !weight\n        ? []\n        : [...new Set(Array.isArray(weight) ? weight : [weight])];\n    const styles = !style\n        ? []\n        : [...new Set(Array.isArray(style) ? style : [style])];\n    if (weights.length === 0) {\n        // Set variable as default, throw if not available\n        if (fontWeights.includes('variable')) {\n            weights.push('variable');\n        }\n        else {\n            (0, next_font_error_1.nextFontError)(`Missing weight for font \\`${fontFamily}\\`.\\nAvailable weights: ${(0, format_available_values_1.formatAvailableValues)(fontWeights)}`);\n        }\n    }\n    if (weights.length > 1 && weights.includes('variable')) {\n        (0, next_font_error_1.nextFontError)(`Unexpected \\`variable\\` in weight array for font \\`${fontFamily}\\`. You only need \\`variable\\`, it includes all available weights.`);\n    }\n    weights.forEach((selectedWeight) => {\n        if (!fontWeights.includes(selectedWeight)) {\n            (0, next_font_error_1.nextFontError)(`Unknown weight \\`${selectedWeight}\\` for font \\`${fontFamily}\\`.\\nAvailable weights: ${(0, format_available_values_1.formatAvailableValues)(fontWeights)}`);\n        }\n    });\n    if (styles.length === 0) {\n        if (fontStyles.length === 1) {\n            // Handle default style for fonts that only have italic\n            styles.push(fontStyles[0]);\n        }\n        else {\n            // Otherwise set default style to normal\n            styles.push('normal');\n        }\n    }\n    styles.forEach((selectedStyle) => {\n        if (!fontStyles.includes(selectedStyle)) {\n            (0, next_font_error_1.nextFontError)(`Unknown style \\`${selectedStyle}\\` for font \\`${fontFamily}\\`.\\nAvailable styles: ${(0, format_available_values_1.formatAvailableValues)(fontStyles)}`);\n        }\n    });\n    if (!constants_1.allowedDisplayValues.includes(display)) {\n        (0, next_font_error_1.nextFontError)(`Invalid display value \\`${display}\\` for font \\`${fontFamily}\\`.\\nAvailable display values: ${(0, format_available_values_1.formatAvailableValues)(constants_1.allowedDisplayValues)}`);\n    }\n    if (axes) {\n        if (!fontWeights.includes('variable')) {\n            (0, next_font_error_1.nextFontError)('Axes can only be defined for variable fonts.');\n        }\n        if (weights[0] !== 'variable') {\n            (0, next_font_error_1.nextFontError)('Axes can only be defined for variable fonts when the weight property is nonexistent or set to `variable`.');\n        }\n    }\n    return {\n        fontFamily,\n        weights,\n        styles,\n        display,\n        preload,\n        selectedVariableAxes: axes,\n        fallback,\n        adjustFontFallback,\n        variable,\n        subsets,\n    };\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/dist/compiled/%40next/font/dist/google/get-font-axes.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFontAxes = getFontAxes;\nconst format_available_values_1 = require(\"../format-available-values\");\nconst next_font_error_1 = require(\"../next-font-error\");\nconst google_fonts_metadata_1 = require(\"./google-fonts-metadata\");\n/**\n * Validates and gets the data for each font axis required to generate the Google Fonts URL.\n */\nfunction getFontAxes(fontFamily, weights, styles, selectedVariableAxes) {\n    const hasItalic = styles.includes('italic');\n    const hasNormal = styles.includes('normal');\n    // Make sure the order is correct, otherwise Google Fonts will return an error\n    // If only normal is set, we can skip returning the ital axis as normal is the default\n    const ital = hasItalic ? [...(hasNormal ? ['0'] : []), '1'] : undefined;\n    // Weights will always contain one element if it's a variable font\n    if (weights[0] === 'variable') {\n        // Get all the available axes for the current font from the metadata file\n        const allAxes = google_fonts_metadata_1.googleFontsMetadata[fontFamily].axes;\n        if (!allAxes) {\n            throw new Error('invariant variable font without axes');\n        }\n        if (selectedVariableAxes) {\n            // The axes other than weight and style that can be defined for the current variable font\n            const defineAbleAxes = allAxes\n                .map(({ tag }) => tag)\n                .filter((tag) => tag !== 'wght');\n            if (defineAbleAxes.length === 0) {\n                (0, next_font_error_1.nextFontError)(`Font \\`${fontFamily}\\` has no definable \\`axes\\``);\n            }\n            if (!Array.isArray(selectedVariableAxes)) {\n                (0, next_font_error_1.nextFontError)(`Invalid axes value for font \\`${fontFamily}\\`, expected an array of axes.\\nAvailable axes: ${(0, format_available_values_1.formatAvailableValues)(defineAbleAxes)}`);\n            }\n            selectedVariableAxes.forEach((key) => {\n                if (!defineAbleAxes.some((tag) => tag === key)) {\n                    (0, next_font_error_1.nextFontError)(`Invalid axes value \\`${key}\\` for font \\`${fontFamily}\\`.\\nAvailable axes: ${(0, format_available_values_1.formatAvailableValues)(defineAbleAxes)}`);\n                }\n            });\n        }\n        let weightAxis;\n        let variableAxes;\n        for (const { tag, min, max } of allAxes) {\n            if (tag === 'wght') {\n                // In variable fonts the weight is a range\n                weightAxis = `${min}..${max}`;\n            }\n            else if (selectedVariableAxes === null || selectedVariableAxes === void 0 ? void 0 : selectedVariableAxes.includes(tag)) {\n                if (!variableAxes) {\n                    variableAxes = [];\n                }\n                variableAxes.push([tag, `${min}..${max}`]);\n            }\n        }\n        return {\n            wght: weightAxis ? [weightAxis] : undefined,\n            ital,\n            variableAxes,\n        };\n    }\n    else {\n        return {\n            ital,\n            wght: weights,\n        };\n    }\n}\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,WAAW,GAAG;AACtB,MAAM;AACN,MAAM;AACN,MAAM;AACN;;CAEC,GACD,SAAS,YAAY,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,oBAAoB;IAClE,MAAM,YAAY,OAAO,QAAQ,CAAC;IAClC,MAAM,YAAY,OAAO,QAAQ,CAAC;IAClC,8EAA8E;IAC9E,sFAAsF;IACtF,MAAM,OAAO,YAAY;WAAK,YAAY;YAAC;SAAI,GAAG,EAAE;QAAG;KAAI,GAAG;IAC9D,kEAAkE;IAClE,IAAI,OAAO,CAAC,EAAE,KAAK,YAAY;QAC3B,yEAAyE;QACzE,MAAM,UAAU,wBAAwB,mBAAmB,CAAC,WAAW,CAAC,IAAI;QAC5E,IAAI,CAAC,SAAS;YACV,MAAM,IAAI,MAAM;QACpB;QACA,IAAI,sBAAsB;YACtB,yFAAyF;YACzF,MAAM,iBAAiB,QAClB,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,GAAK,KACjB,MAAM,CAAC,CAAC,MAAQ,QAAQ;YAC7B,IAAI,eAAe,MAAM,KAAK,GAAG;gBAC7B,CAAC,GAAG,kBAAkB,aAAa,EAAE,CAAC,OAAO,EAAE,WAAW,4BAA4B,CAAC;YAC3F;YACA,IAAI,CAAC,MAAM,OAAO,CAAC,uBAAuB;gBACtC,CAAC,GAAG,kBAAkB,aAAa,EAAE,CAAC,8BAA8B,EAAE,WAAW,gDAAgD,EAAE,CAAC,GAAG,0BAA0B,qBAAqB,EAAE,iBAAiB;YAC7M;YACA,qBAAqB,OAAO,CAAC,CAAC;gBAC1B,IAAI,CAAC,eAAe,IAAI,CAAC,CAAC,MAAQ,QAAQ,MAAM;oBAC5C,CAAC,GAAG,kBAAkB,aAAa,EAAE,CAAC,qBAAqB,EAAE,IAAI,cAAc,EAAE,WAAW,qBAAqB,EAAE,CAAC,GAAG,0BAA0B,qBAAqB,EAAE,iBAAiB;gBAC7L;YACJ;QACJ;QACA,IAAI;QACJ,IAAI;QACJ,KAAK,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,QAAS;YACrC,IAAI,QAAQ,QAAQ;gBAChB,0CAA0C;gBAC1C,aAAa,GAAG,IAAI,EAAE,EAAE,KAAK;YACjC,OACK,IAAI,yBAAyB,QAAQ,yBAAyB,KAAK,IAAI,KAAK,IAAI,qBAAqB,QAAQ,CAAC,MAAM;gBACrH,IAAI,CAAC,cAAc;oBACf,eAAe,EAAE;gBACrB;gBACA,aAAa,IAAI,CAAC;oBAAC;oBAAK,GAAG,IAAI,EAAE,EAAE,KAAK;iBAAC;YAC7C;QACJ;QACA,OAAO;YACH,MAAM,aAAa;gBAAC;aAAW,GAAG;YAClC;YACA;QACJ;IACJ,OACK;QACD,OAAO;YACH;YACA,MAAM;QACV;IACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/dist/compiled/%40next/font/dist/google/sort-fonts-variant-values.js"],"sourcesContent":["\"use strict\";\n/**\n * Callback function for sorting font variant values.\n * Used as a parameter in `Array.prototype.sort` function to ensure correct sorting.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sortFontsVariantValues = sortFontsVariantValues;\nfunction sortFontsVariantValues(valA, valB) {\n    // If both values contain commas, it indicates they are in \"ital,wght\" format\n    if (valA.includes(',') && valB.includes(',')) {\n        // Split the values into prefix and suffix\n        const [aPrefix, aSuffix] = valA.split(',', 2);\n        const [bPrefix, bSuffix] = valB.split(',', 2);\n        // Compare the prefixes (ital values)\n        if (aPrefix === bPrefix) {\n            // If prefixes are equal, then compare the suffixes (wght values)\n            return parseInt(aSuffix) - parseInt(bSuffix);\n        }\n        else {\n            // If prefixes are different, then compare the prefixes directly\n            return parseInt(aPrefix) - parseInt(bPrefix);\n        }\n    }\n    // If values are not in \"ital,wght\" format, then directly compare them as integers\n    return parseInt(valA) - parseInt(valB);\n}\n"],"names":[],"mappings":"AAAA;AACA;;;CAGC,GACD,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,sBAAsB,GAAG;AACjC,SAAS,uBAAuB,IAAI,EAAE,IAAI;IACtC,6EAA6E;IAC7E,IAAI,KAAK,QAAQ,CAAC,QAAQ,KAAK,QAAQ,CAAC,MAAM;QAC1C,0CAA0C;QAC1C,MAAM,CAAC,SAAS,QAAQ,GAAG,KAAK,KAAK,CAAC,KAAK;QAC3C,MAAM,CAAC,SAAS,QAAQ,GAAG,KAAK,KAAK,CAAC,KAAK;QAC3C,qCAAqC;QACrC,IAAI,YAAY,SAAS;YACrB,iEAAiE;YACjE,OAAO,SAAS,WAAW,SAAS;QACxC,OACK;YACD,gEAAgE;YAChE,OAAO,SAAS,WAAW,SAAS;QACxC;IACJ;IACA,kFAAkF;IAClF,OAAO,SAAS,QAAQ,SAAS;AACrC","ignoreList":[0]}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/dist/compiled/%40next/font/dist/google/get-google-fonts-url.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getGoogleFontsUrl = getGoogleFontsUrl;\nconst sort_fonts_variant_values_1 = require(\"./sort-fonts-variant-values\");\n/**\n * Generate the Google Fonts URL given the requested weight(s), style(s) and additional variable axes\n */\nfunction getGoogleFontsUrl(fontFamily, axes, display) {\n    var _a, _b;\n    // Variants are all combinations of weight and style, each variant will result in a separate font file\n    const variants = [];\n    if (axes.wght) {\n        for (const wght of axes.wght) {\n            if (!axes.ital) {\n                variants.push([['wght', wght], ...((_a = axes.variableAxes) !== null && _a !== void 0 ? _a : [])]);\n            }\n            else {\n                for (const ital of axes.ital) {\n                    variants.push([\n                        ['ital', ital],\n                        ['wght', wght],\n                        ...((_b = axes.variableAxes) !== null && _b !== void 0 ? _b : []),\n                    ]);\n                }\n            }\n        }\n    }\n    else if (axes.variableAxes) {\n        // Variable fonts might not have a range of weights, just add optional variable axes in that case\n        variants.push([...axes.variableAxes]);\n    }\n    // Google api requires the axes to be sorted, starting with lowercase words\n    if (axes.variableAxes) {\n        variants.forEach((variant) => {\n            variant.sort(([a], [b]) => {\n                const aIsLowercase = a.charCodeAt(0) > 96;\n                const bIsLowercase = b.charCodeAt(0) > 96;\n                if (aIsLowercase && !bIsLowercase)\n                    return -1;\n                if (bIsLowercase && !aIsLowercase)\n                    return 1;\n                return a > b ? 1 : -1;\n            });\n        });\n    }\n    let url = `https://fonts.googleapis.com/css2?family=${fontFamily.replace(/ /g, '+')}`;\n    if (variants.length > 0) {\n        url = `${url}:${variants[0].map(([key]) => key).join(',')}@${variants\n            .map((variant) => variant.map(([, val]) => val).join(','))\n            .sort(sort_fonts_variant_values_1.sortFontsVariantValues)\n            .join(';')}`;\n    }\n    url = `${url}&display=${display}`;\n    return url;\n}\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,iBAAiB,GAAG;AAC5B,MAAM;AACN;;CAEC,GACD,SAAS,kBAAkB,UAAU,EAAE,IAAI,EAAE,OAAO;IAChD,IAAI,IAAI;IACR,sGAAsG;IACtG,MAAM,WAAW,EAAE;IACnB,IAAI,KAAK,IAAI,EAAE;QACX,KAAK,MAAM,QAAQ,KAAK,IAAI,CAAE;YAC1B,IAAI,CAAC,KAAK,IAAI,EAAE;gBACZ,SAAS,IAAI,CAAC;oBAAC;wBAAC;wBAAQ;qBAAK;uBAAM,CAAC,KAAK,KAAK,YAAY,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,EAAE;iBAAE;YACrG,OACK;gBACD,KAAK,MAAM,QAAQ,KAAK,IAAI,CAAE;oBAC1B,SAAS,IAAI,CAAC;wBACV;4BAAC;4BAAQ;yBAAK;wBACd;4BAAC;4BAAQ;yBAAK;2BACV,CAAC,KAAK,KAAK,YAAY,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,EAAE;qBACnE;gBACL;YACJ;QACJ;IACJ,OACK,IAAI,KAAK,YAAY,EAAE;QACxB,iGAAiG;QACjG,SAAS,IAAI,CAAC;eAAI,KAAK,YAAY;SAAC;IACxC;IACA,2EAA2E;IAC3E,IAAI,KAAK,YAAY,EAAE;QACnB,SAAS,OAAO,CAAC,CAAC;YACd,QAAQ,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;gBAClB,MAAM,eAAe,EAAE,UAAU,CAAC,KAAK;gBACvC,MAAM,eAAe,EAAE,UAAU,CAAC,KAAK;gBACvC,IAAI,gBAAgB,CAAC,cACjB,OAAO,CAAC;gBACZ,IAAI,gBAAgB,CAAC,cACjB,OAAO;gBACX,OAAO,IAAI,IAAI,IAAI,CAAC;YACxB;QACJ;IACJ;IACA,IAAI,MAAM,CAAC,yCAAyC,EAAE,WAAW,OAAO,CAAC,MAAM,MAAM;IACrF,IAAI,SAAS,MAAM,GAAG,GAAG;QACrB,MAAM,GAAG,IAAI,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAK,KAAK,IAAI,CAAC,KAAK,CAAC,EAAE,SACxD,GAAG,CAAC,CAAC,UAAY,QAAQ,GAAG,CAAC,CAAC,GAAG,IAAI,GAAK,KAAK,IAAI,CAAC,MACpD,IAAI,CAAC,4BAA4B,sBAAsB,EACvD,IAAI,CAAC,MAAM;IACpB;IACA,MAAM,GAAG,IAAI,SAAS,EAAE,SAAS;IACjC,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/dist/compiled/%40next/font/dist/google/find-font-files-in-css.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findFontFilesInCss = findFontFilesInCss;\n/**\n * Find all font files in the CSS response and determine which files should be preloaded.\n * In Google Fonts responses, the @font-face's subset is above it in a comment.\n * Walk through the CSS from top to bottom, keeping track of the current subset.\n */\nfunction findFontFilesInCss(css, subsetsToPreload) {\n    var _a, _b;\n    // Find font files to download\n    const fontFiles = [];\n    // Keep track of the current subset\n    let currentSubset = '';\n    for (const line of css.split('\\n')) {\n        const newSubset = (_a = /\\/\\* (.+?) \\*\\//.exec(line)) === null || _a === void 0 ? void 0 : _a[1];\n        if (newSubset) {\n            // Found new subset in a comment above the next @font-face declaration\n            currentSubset = newSubset;\n        }\n        else {\n            const googleFontFileUrl = (_b = /src: url\\((.+?)\\)/.exec(line)) === null || _b === void 0 ? void 0 : _b[1];\n            if (googleFontFileUrl &&\n                !fontFiles.some((foundFile) => foundFile.googleFontFileUrl === googleFontFileUrl)) {\n                // Found the font file in the @font-face declaration.\n                fontFiles.push({\n                    googleFontFileUrl,\n                    preloadFontFile: !!(subsetsToPreload === null || subsetsToPreload === void 0 ? void 0 : subsetsToPreload.includes(currentSubset)),\n                });\n            }\n        }\n    }\n    return fontFiles;\n}\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,kBAAkB,GAAG;AAC7B;;;;CAIC,GACD,SAAS,mBAAmB,GAAG,EAAE,gBAAgB;IAC7C,IAAI,IAAI;IACR,8BAA8B;IAC9B,MAAM,YAAY,EAAE;IACpB,mCAAmC;IACnC,IAAI,gBAAgB;IACpB,KAAK,MAAM,QAAQ,IAAI,KAAK,CAAC,MAAO;QAChC,MAAM,YAAY,CAAC,KAAK,kBAAkB,IAAI,CAAC,KAAK,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,EAAE,CAAC,EAAE;QAChG,IAAI,WAAW;YACX,sEAAsE;YACtE,gBAAgB;QACpB,OACK;YACD,MAAM,oBAAoB,CAAC,KAAK,oBAAoB,IAAI,CAAC,KAAK,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,EAAE,CAAC,EAAE;YAC1G,IAAI,qBACA,CAAC,UAAU,IAAI,CAAC,CAAC,YAAc,UAAU,iBAAiB,KAAK,oBAAoB;gBACnF,qDAAqD;gBACrD,UAAU,IAAI,CAAC;oBACX;oBACA,iBAAiB,CAAC,CAAC,CAAC,qBAAqB,QAAQ,qBAAqB,KAAK,IAAI,KAAK,IAAI,iBAAiB,QAAQ,CAAC,cAAc;gBACpI;YACJ;QACJ;IACJ;IACA,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/dist/compiled/%40next/font/dist/google/get-fallback-font-override-metrics.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFallbackFontOverrideMetrics = getFallbackFontOverrideMetrics;\n// @ts-ignore\nconst font_utils_1 = require(\"next/dist/server/font-utils\");\n// @ts-ignore\nconst Log = __importStar(require(\"next/dist/build/output/log\"));\n/**\n * Get precalculated fallback font metrics for the Google Fonts family.\n *\n * TODO:\n * We might want to calculate these values with fontkit instead (like in next/font/local).\n * That way we don't have to update the precalculated values every time a new font is added to Google Fonts.\n */\nfunction getFallbackFontOverrideMetrics(fontFamily) {\n    try {\n        const { ascent, descent, lineGap, fallbackFont, sizeAdjust } = (0, font_utils_1.calculateSizeAdjustValues)(fontFamily);\n        return {\n            fallbackFont,\n            ascentOverride: `${ascent}%`,\n            descentOverride: `${descent}%`,\n            lineGapOverride: `${lineGap}%`,\n            sizeAdjust: `${sizeAdjust}%`,\n        };\n    }\n    catch {\n        Log.error(`Failed to find font override values for font \\`${fontFamily}\\``);\n    }\n}\n"],"names":[],"mappings":"AAAA;AACA,IAAI,kBAAkB,AAAC,IAAI,IAAI,IAAI,CAAC,eAAe,IAAK,CAAC,OAAO,MAAM,GAAI,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IAC1F,IAAI,OAAO,WAAW,KAAK;IAC3B,IAAI,OAAO,OAAO,wBAAwB,CAAC,GAAG;IAC9C,IAAI,CAAC,QAAQ,CAAC,SAAS,OAAO,CAAC,EAAE,UAAU,GAAG,KAAK,QAAQ,IAAI,KAAK,YAAY,GAAG;QACjF,OAAO;YAAE,YAAY;YAAM,KAAK;gBAAa,OAAO,CAAC,CAAC,EAAE;YAAE;QAAE;IAC9D;IACA,OAAO,cAAc,CAAC,GAAG,IAAI;AACjC,IAAM,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IACtB,IAAI,OAAO,WAAW,KAAK;IAC3B,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE;AAChB,CAAE;AACF,IAAI,qBAAqB,AAAC,IAAI,IAAI,IAAI,CAAC,kBAAkB,IAAK,CAAC,OAAO,MAAM,GAAI,SAAS,CAAC,EAAE,CAAC;IACzF,OAAO,cAAc,CAAC,GAAG,WAAW;QAAE,YAAY;QAAM,OAAO;IAAE;AACrE,IAAK,SAAS,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,UAAU,GAAG;AACnB,CAAC;AACD,IAAI,eAAe,AAAC,IAAI,IAAI,IAAI,CAAC,YAAY,IAAK,AAAC;IAC/C,IAAI,UAAU,SAAS,CAAC;QACpB,UAAU,OAAO,mBAAmB,IAAI,SAAU,CAAC;YAC/C,IAAI,KAAK,EAAE;YACX,IAAK,IAAI,KAAK,EAAG,IAAI,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,MAAM,CAAC,GAAG;YACjF,OAAO;QACX;QACA,OAAO,QAAQ;IACnB;IACA,OAAO,SAAU,GAAG;QAChB,IAAI,OAAO,IAAI,UAAU,EAAE,OAAO;QAClC,IAAI,SAAS,CAAC;QACd,IAAI,OAAO,MAAM;YAAA,IAAK,IAAI,IAAI,QAAQ,MAAM,IAAI,GAAG,IAAI,EAAE,MAAM,EAAE,IAAK,IAAI,CAAC,CAAC,EAAE,KAAK,WAAW,gBAAgB,QAAQ,KAAK,CAAC,CAAC,EAAE;QAAC;QAChI,mBAAmB,QAAQ;QAC3B,OAAO;IACX;AACJ;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,8BAA8B,GAAG;AACzC,aAAa;AACb,MAAM;AACN,aAAa;AACb,MAAM,MAAM;AACZ;;;;;;CAMC,GACD,SAAS,+BAA+B,UAAU;IAC9C,IAAI;QACA,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,GAAG,CAAC,GAAG,aAAa,yBAAyB,EAAE;QAC3G,OAAO;YACH;YACA,gBAAgB,GAAG,OAAO,CAAC,CAAC;YAC5B,iBAAiB,GAAG,QAAQ,CAAC,CAAC;YAC9B,iBAAiB,GAAG,QAAQ,CAAC,CAAC;YAC9B,YAAY,GAAG,WAAW,CAAC,CAAC;QAChC;IACJ,EACA,OAAM;QACF,IAAI,KAAK,CAAC,CAAC,+CAA+C,EAAE,WAAW,EAAE,CAAC;IAC9E;AACJ","ignoreList":[0]}},
    {"offset": {"line": 423, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 428, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/dist/compiled/%40next/font/dist/google/get-proxy-agent.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getProxyAgent = getProxyAgent;\n// @ts-ignore\nconst https_proxy_agent_1 = __importDefault(require(\"next/dist/compiled/https-proxy-agent\"));\n// @ts-ignore\nconst http_proxy_agent_1 = __importDefault(require(\"next/dist/compiled/http-proxy-agent\"));\n/**\n * If the http(s)_proxy environment variables is set, return a proxy agent.\n */\nfunction getProxyAgent() {\n    const httpsProxy = process.env['https_proxy'] || process.env['HTTPS_PROXY'];\n    if (httpsProxy) {\n        return new https_proxy_agent_1.default(httpsProxy);\n    }\n    const httpProxy = process.env['http_proxy'] || process.env['HTTP_PROXY'];\n    if (httpProxy) {\n        return new http_proxy_agent_1.default(httpProxy);\n    }\n}\n"],"names":[],"mappings":"AAAA;AACA,IAAI,kBAAkB,AAAC,IAAI,IAAI,IAAI,CAAC,eAAe,IAAK,SAAU,GAAG;IACjE,OAAO,AAAC,OAAO,IAAI,UAAU,GAAI,MAAM;QAAE,WAAW;IAAI;AAC5D;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,aAAa,GAAG;AACxB,aAAa;AACb,MAAM,sBAAsB;AAC5B,aAAa;AACb,MAAM,qBAAqB;AAC3B;;CAEC,GACD,SAAS;IACL,MAAM,aAAa,QAAQ,GAAG,CAAC,cAAc,IAAI,QAAQ,GAAG,CAAC,cAAc;IAC3E,IAAI,YAAY;QACZ,OAAO,IAAI,oBAAoB,OAAO,CAAC;IAC3C;IACA,MAAM,YAAY,QAAQ,GAAG,CAAC,aAAa,IAAI,QAAQ,GAAG,CAAC,aAAa;IACxE,IAAI,WAAW;QACX,OAAO,IAAI,mBAAmB,OAAO,CAAC;IAC1C;AACJ","ignoreList":[0]}},
    {"offset": {"line": 454, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 459, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/dist/compiled/%40next/font/dist/google/retry.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.retry = retry;\n// eslint-disable-next-line import/no-extraneous-dependencies\n// @ts-expect-error File exists\nconst async_retry_1 = __importDefault(require(\"next/dist/compiled/async-retry\"));\nasync function retry(fn, retries) {\n    return await (0, async_retry_1.default)(fn, {\n        retries,\n        onRetry(e, attempt) {\n            console.error(e.message + `\\n\\nRetrying ${attempt}/${retries}...`);\n        },\n        minTimeout: 100,\n    });\n}\n"],"names":[],"mappings":"AAAA;AACA,IAAI,kBAAkB,AAAC,IAAI,IAAI,IAAI,CAAC,eAAe,IAAK,SAAU,GAAG;IACjE,OAAO,AAAC,OAAO,IAAI,UAAU,GAAI,MAAM;QAAE,WAAW;IAAI;AAC5D;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,KAAK,GAAG;AAChB,6DAA6D;AAC7D,+BAA+B;AAC/B,MAAM,gBAAgB;AACtB,eAAe,MAAM,EAAE,EAAE,OAAO;IAC5B,OAAO,MAAM,CAAC,GAAG,cAAc,OAAO,EAAE,IAAI;QACxC;QACA,SAAQ,CAAC,EAAE,OAAO;YACd,QAAQ,KAAK,CAAC,EAAE,OAAO,GAAG,CAAC,aAAa,EAAE,QAAQ,CAAC,EAAE,QAAQ,GAAG,CAAC;QACrE;QACA,YAAY;IAChB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 481, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 486, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/dist/compiled/%40next/font/dist/google/fetch-css-from-google-fonts.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fetchCSSFromGoogleFonts = fetchCSSFromGoogleFonts;\n// @ts-ignore\nconst node_fetch_1 = __importDefault(require(\"next/dist/compiled/node-fetch\"));\nconst next_font_error_1 = require(\"../next-font-error\");\nconst get_proxy_agent_1 = require(\"./get-proxy-agent\");\nconst retry_1 = require(\"./retry\");\n/**\n * Fetches the CSS containing the @font-face declarations from Google Fonts.\n * The fetch has a user agent header with a modern browser to ensure we'll get .woff2 files.\n *\n * The env variable NEXT_FONT_GOOGLE_MOCKED_RESPONSES may be set containing a path to mocked data.\n * It's used to define mocked data to avoid hitting the Google Fonts API during tests.\n */\nasync function fetchCSSFromGoogleFonts(url, fontFamily, isDev) {\n    // Check if mocked responses are defined, if so use them instead of fetching from Google Fonts\n    let mockedResponse;\n    if (process.env.NEXT_FONT_GOOGLE_MOCKED_RESPONSES) {\n        const mockFile = require(process.env.NEXT_FONT_GOOGLE_MOCKED_RESPONSES);\n        mockedResponse = mockFile[url];\n        if (!mockedResponse) {\n            (0, next_font_error_1.nextFontError)('Missing mocked response for URL: ' + url);\n        }\n    }\n    let cssResponse;\n    if (mockedResponse) {\n        // Just use the mocked CSS if it's set\n        cssResponse = mockedResponse;\n    }\n    else {\n        // Retry the fetch a few times in case of network issues as some font files\n        // are quite large:\n        // https://github.com/vercel/next.js/issues/45080\n        cssResponse = await (0, retry_1.retry)(async () => {\n            const controller = isDev && typeof AbortController !== 'undefined'\n                ? new AbortController()\n                : undefined;\n            const signal = controller === null || controller === void 0 ? void 0 : controller.signal;\n            const timeoutId = controller\n                ? setTimeout(() => controller.abort(), 3000)\n                : undefined;\n            const res = await (0, node_fetch_1.default)(url, {\n                agent: (0, get_proxy_agent_1.getProxyAgent)(),\n                // Add a timeout in dev\n                signal,\n                headers: {\n                    // The file format is based off of the user agent, make sure woff2 files are fetched\n                    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36',\n                },\n            }).finally(() => {\n                timeoutId && clearTimeout(timeoutId);\n            });\n            if (!res.ok) {\n                (0, next_font_error_1.nextFontError)(`Failed to fetch font \\`${fontFamily}\\`.\\nURL: ${url}\\n\\nPlease check if the network is available.`);\n            }\n            return res.text();\n        }, 3);\n    }\n    return cssResponse;\n}\n"],"names":[],"mappings":"AAAA;AACA,IAAI,kBAAkB,AAAC,IAAI,IAAI,IAAI,CAAC,eAAe,IAAK,SAAU,GAAG;IACjE,OAAO,AAAC,OAAO,IAAI,UAAU,GAAI,MAAM;QAAE,WAAW;IAAI;AAC5D;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,uBAAuB,GAAG;AAClC,aAAa;AACb,MAAM,eAAe;AACrB,MAAM;AACN,MAAM;AACN,MAAM;AACN;;;;;;CAMC,GACD,eAAe,wBAAwB,GAAG,EAAE,UAAU,EAAE,KAAK;IACzD,8FAA8F;IAC9F,IAAI;IACJ,IAAI,QAAQ,GAAG,CAAC,iCAAiC,EAAE;QAC/C,MAAM;;;;;QACN,iBAAiB,QAAQ,CAAC,IAAI;QAC9B,IAAI,CAAC,gBAAgB;YACjB,CAAC,GAAG,kBAAkB,aAAa,EAAE,sCAAsC;QAC/E;IACJ;IACA,IAAI;IACJ,IAAI,gBAAgB;QAChB,sCAAsC;QACtC,cAAc;IAClB,OACK;QACD,2EAA2E;QAC3E,mBAAmB;QACnB,iDAAiD;QACjD,cAAc,MAAM,CAAC,GAAG,QAAQ,KAAK,EAAE;YACnC,MAAM,aAAa,SAAS,OAAO,oBAAoB,cACjD,IAAI,oBACJ;YACN,MAAM,SAAS,eAAe,QAAQ,eAAe,KAAK,IAAI,KAAK,IAAI,WAAW,MAAM;YACxF,MAAM,YAAY,aACZ,WAAW,IAAM,WAAW,KAAK,IAAI,QACrC;YACN,MAAM,MAAM,MAAM,CAAC,GAAG,aAAa,OAAO,EAAE,KAAK;gBAC7C,OAAO,CAAC,GAAG,kBAAkB,aAAa;gBAC1C,uBAAuB;gBACvB;gBACA,SAAS;oBACL,oFAAoF;oBACpF,cAAc;gBAClB;YACJ,GAAG,OAAO,CAAC;gBACP,aAAa,aAAa;YAC9B;YACA,IAAI,CAAC,IAAI,EAAE,EAAE;gBACT,CAAC,GAAG,kBAAkB,aAAa,EAAE,CAAC,uBAAuB,EAAE,WAAW,UAAU,EAAE,IAAI,6CAA6C,CAAC;YAC5I;YACA,OAAO,IAAI,IAAI;QACnB,GAAG;IACP;IACA,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 552, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 557, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/dist/compiled/%40next/font/dist/google/fetch-font-file.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fetchFontFile = fetchFontFile;\n// @ts-ignore\nconst node_fetch_1 = __importDefault(require(\"next/dist/compiled/node-fetch\"));\nconst get_proxy_agent_1 = require(\"./get-proxy-agent\");\nconst retry_1 = require(\"./retry\");\n/**\n * Fetch the url and return a buffer with the font file.\n */\nasync function fetchFontFile(url, isDev) {\n    // Check if we're using mocked data\n    if (process.env.NEXT_FONT_GOOGLE_MOCKED_RESPONSES) {\n        // If it's an absolute path, read the file from the filesystem\n        if (url.startsWith('/')) {\n            return require('fs').readFileSync(url);\n        }\n        // Otherwise just return a unique buffer\n        return Buffer.from(url);\n    }\n    return await (0, retry_1.retry)(async () => {\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), 3000);\n        const arrayBuffer = await (0, node_fetch_1.default)(url, {\n            agent: (0, get_proxy_agent_1.getProxyAgent)(),\n            // Add a timeout in dev\n            signal: isDev ? controller.signal : undefined,\n        })\n            .then((r) => r.arrayBuffer())\n            .finally(() => {\n            clearTimeout(timeoutId);\n        });\n        return Buffer.from(arrayBuffer);\n    }, 3);\n}\n"],"names":[],"mappings":"AAAA;AACA,IAAI,kBAAkB,AAAC,IAAI,IAAI,IAAI,CAAC,eAAe,IAAK,SAAU,GAAG;IACjE,OAAO,AAAC,OAAO,IAAI,UAAU,GAAI,MAAM;QAAE,WAAW;IAAI;AAC5D;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,aAAa,GAAG;AACxB,aAAa;AACb,MAAM,eAAe;AACrB,MAAM;AACN,MAAM;AACN;;CAEC,GACD,eAAe,cAAc,GAAG,EAAE,KAAK;IACnC,mCAAmC;IACnC,IAAI,QAAQ,GAAG,CAAC,iCAAiC,EAAE;QAC/C,8DAA8D;QAC9D,IAAI,IAAI,UAAU,CAAC,MAAM;YACrB,OAAO,6DAAc,YAAY,CAAC;QACtC;QACA,wCAAwC;QACxC,OAAO,OAAO,IAAI,CAAC;IACvB;IACA,OAAO,MAAM,CAAC,GAAG,QAAQ,KAAK,EAAE;QAC5B,MAAM,aAAa,IAAI;QACvB,MAAM,YAAY,WAAW,IAAM,WAAW,KAAK,IAAI;QACvD,MAAM,cAAc,MAAM,CAAC,GAAG,aAAa,OAAO,EAAE,KAAK;YACrD,OAAO,CAAC,GAAG,kBAAkB,aAAa;YAC1C,uBAAuB;YACvB,QAAQ,QAAQ,WAAW,MAAM,GAAG;QACxC,GACK,IAAI,CAAC,CAAC,IAAM,EAAE,WAAW,IACzB,OAAO,CAAC;YACT,aAAa;QACjB;QACA,OAAO,OAAO,IAAI,CAAC;IACvB,GAAG;AACP","ignoreList":[0]}},
    {"offset": {"line": 596, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 601, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/dist/compiled/%40next/font/dist/google/loader.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// @ts-ignore\nconst Log = __importStar(require(\"next/dist/build/output/log\"));\nconst validate_google_font_function_call_1 = require(\"./validate-google-font-function-call\");\nconst get_font_axes_1 = require(\"./get-font-axes\");\nconst get_google_fonts_url_1 = require(\"./get-google-fonts-url\");\nconst next_font_error_1 = require(\"../next-font-error\");\nconst find_font_files_in_css_1 = require(\"./find-font-files-in-css\");\nconst get_fallback_font_override_metrics_1 = require(\"./get-fallback-font-override-metrics\");\nconst fetch_css_from_google_fonts_1 = require(\"./fetch-css-from-google-fonts\");\nconst fetch_font_file_1 = require(\"./fetch-font-file\");\nconst cssCache = new Map();\nconst fontCache = new Map();\n// regexp is based on https://github.com/sindresorhus/escape-string-regexp\nconst reHasRegExp = /[|\\\\{}()[\\]^$+*?.-]/;\nconst reReplaceRegExp = /[|\\\\{}()[\\]^$+*?.-]/g;\nfunction escapeStringRegexp(str) {\n    // see also: https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/escapeRegExp.js#L23\n    if (reHasRegExp.test(str)) {\n        return str.replace(reReplaceRegExp, '\\\\$&');\n    }\n    return str;\n}\nconst nextFontGoogleFontLoader = async ({ functionName, data, emitFontFile, isDev, isServer, }) => {\n    var _a;\n    const { fontFamily, weights, styles, display, preload, selectedVariableAxes, fallback, adjustFontFallback, variable, subsets, } = (0, validate_google_font_function_call_1.validateGoogleFontFunctionCall)(functionName, data[0]);\n    // Validate and get the font axes required to generated the URL\n    const fontAxes = (0, get_font_axes_1.getFontAxes)(fontFamily, weights, styles, selectedVariableAxes);\n    // Generate the Google Fonts URL from the font family, axes and display value\n    const url = (0, get_google_fonts_url_1.getGoogleFontsUrl)(fontFamily, fontAxes, display);\n    // Get precalculated fallback font metrics, used to generate the fallback font CSS\n    const adjustFontFallbackMetrics = adjustFontFallback ? (0, get_fallback_font_override_metrics_1.getFallbackFontOverrideMetrics)(fontFamily) : undefined;\n    const result = {\n        fallbackFonts: fallback,\n        weight: weights.length === 1 && weights[0] !== 'variable'\n            ? weights[0]\n            : undefined,\n        style: styles.length === 1 ? styles[0] : undefined,\n        variable,\n        adjustFontFallback: adjustFontFallbackMetrics,\n    };\n    try {\n        /**\n         * Hacky way to make sure the fetch is only done once.\n         * Otherwise both the client and server compiler would fetch the CSS.\n         * The reason we need to return the actual CSS from both the server and client is because a hash is generated based on the CSS content.\n         */\n        const hasCachedCSS = cssCache.has(url);\n        // Fetch CSS from Google Fonts or get it from the cache\n        let fontFaceDeclarations = hasCachedCSS\n            ? cssCache.get(url)\n            : await (0, fetch_css_from_google_fonts_1.fetchCSSFromGoogleFonts)(url, fontFamily, isDev).catch((err) => {\n                console.error(err);\n                return null;\n            });\n        if (!hasCachedCSS) {\n            cssCache.set(url, fontFaceDeclarations !== null && fontFaceDeclarations !== void 0 ? fontFaceDeclarations : null);\n        }\n        else {\n            cssCache.delete(url);\n        }\n        if (fontFaceDeclarations == null) {\n            (0, next_font_error_1.nextFontError)(`Failed to fetch \\`${fontFamily}\\` from Google Fonts.`);\n        }\n        // CSS Variables may be set on a body tag, ignore them to keep the CSS module pure\n        fontFaceDeclarations = fontFaceDeclarations.split('body {', 1)[0];\n        // Find font files to download, provide the array of subsets we want to preload if preloading is enabled\n        const fontFiles = (0, find_font_files_in_css_1.findFontFilesInCss)(fontFaceDeclarations, preload ? subsets : undefined);\n        // Download the font files extracted from the CSS\n        const downloadedFiles = await Promise.all(fontFiles.map(async ({ googleFontFileUrl, preloadFontFile }) => {\n            const hasCachedFont = fontCache.has(googleFontFileUrl);\n            // Download the font file or get it from cache\n            const fontFileBuffer = hasCachedFont\n                ? fontCache.get(googleFontFileUrl)\n                : await (0, fetch_font_file_1.fetchFontFile)(googleFontFileUrl, isDev).catch((err) => {\n                    console.error(err);\n                    return null;\n                });\n            if (!hasCachedFont) {\n                fontCache.set(googleFontFileUrl, fontFileBuffer !== null && fontFileBuffer !== void 0 ? fontFileBuffer : null);\n            }\n            else {\n                fontCache.delete(googleFontFileUrl);\n            }\n            if (fontFileBuffer == null) {\n                (0, next_font_error_1.nextFontError)(`Failed to fetch \\`${fontFamily}\\` from Google Fonts.`);\n            }\n            const ext = /\\.(woff|woff2|eot|ttf|otf)$/.exec(googleFontFileUrl)[1];\n            // Emit font file to .next/static/media\n            const selfHostedFileUrl = emitFontFile(fontFileBuffer, ext, preloadFontFile, !!adjustFontFallbackMetrics);\n            return {\n                googleFontFileUrl,\n                selfHostedFileUrl,\n            };\n        }));\n        /**\n         * Replace the @font-face sources with the self-hosted files we just downloaded to .next/static/media\n         *\n         * E.g.\n         * @font-face {\n         *   font-family: 'Inter';\n         *   src: url(https://fonts.gstatic.com/...) -> url(/_next/static/media/_.woff2)\n         * }\n         */\n        let updatedCssResponse = fontFaceDeclarations;\n        for (const { googleFontFileUrl, selfHostedFileUrl } of downloadedFiles) {\n            updatedCssResponse = updatedCssResponse.replace(new RegExp(escapeStringRegexp(googleFontFileUrl), 'g'), selfHostedFileUrl);\n        }\n        return {\n            ...result,\n            css: updatedCssResponse,\n        };\n    }\n    catch (err) {\n        if (isDev) {\n            if (isServer) {\n                Log.error(`Failed to download \\`${fontFamily}\\` from Google Fonts. Using fallback font instead.\\n\\n${err.message}}`);\n            }\n            // In dev we should return the fallback font instead of throwing an error\n            let css = `@font-face {\n  font-family: '${fontFamily} Fallback';\n  src: local(\"${(_a = adjustFontFallbackMetrics === null || adjustFontFallbackMetrics === void 0 ? void 0 : adjustFontFallbackMetrics.fallbackFont) !== null && _a !== void 0 ? _a : 'Arial'}\");`;\n            if (adjustFontFallbackMetrics) {\n                css += `\n  ascent-override:${adjustFontFallbackMetrics.ascentOverride};\n  descent-override:${adjustFontFallbackMetrics.descentOverride};\n  line-gap-override:${adjustFontFallbackMetrics.lineGapOverride};\n  size-adjust:${adjustFontFallbackMetrics.sizeAdjust};`;\n            }\n            css += '\\n}';\n            return {\n                ...result,\n                css,\n            };\n        }\n        else {\n            throw err;\n        }\n    }\n};\nexports.default = nextFontGoogleFontLoader;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 776, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}