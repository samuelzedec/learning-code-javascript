{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/lru-cache.ts"],"sourcesContent":["export class LRUCache<T> {\n  private cache: Map<string, T>\n  private sizes: Map<string, number>\n  private totalSize: number\n  private maxSize: number\n  private calculateSize: (value: T) => number\n\n  constructor(maxSize: number, calculateSize?: (value: T) => number) {\n    this.cache = new Map()\n    this.sizes = new Map()\n    this.totalSize = 0\n    this.maxSize = maxSize\n    this.calculateSize = calculateSize || (() => 1)\n  }\n\n  set(key?: string | null, value?: T): void {\n    if (!key || !value) return\n\n    const size = this.calculateSize(value)\n\n    if (size > this.maxSize) {\n      console.warn('Single item size exceeds maxSize')\n      return\n    }\n\n    if (this.cache.has(key)) {\n      this.totalSize -= this.sizes.get(key) || 0\n    }\n\n    this.cache.set(key, value)\n    this.sizes.set(key, size)\n    this.totalSize += size\n\n    this.touch(key)\n  }\n\n  has(key?: string | null): boolean {\n    if (!key) return false\n\n    this.touch(key)\n    return Boolean(this.cache.get(key))\n  }\n\n  get(key?: string | null): T | undefined {\n    if (!key) return\n\n    const value = this.cache.get(key)\n    if (value === undefined) {\n      return undefined\n    }\n\n    this.touch(key)\n    return value\n  }\n\n  private touch(key: string): void {\n    const value = this.cache.get(key)\n    if (value !== undefined) {\n      this.cache.delete(key)\n      this.cache.set(key, value)\n      this.evictIfNecessary()\n    }\n  }\n\n  private evictIfNecessary(): void {\n    while (this.totalSize > this.maxSize && this.cache.size > 0) {\n      this.evictLeastRecentlyUsed()\n    }\n  }\n\n  private evictLeastRecentlyUsed(): void {\n    const lruKey = this.cache.keys().next().value\n    if (lruKey !== undefined) {\n      const lruSize = this.sizes.get(lruKey) || 0\n      this.totalSize -= lruSize\n      this.cache.delete(lruKey)\n      this.sizes.delete(lruKey)\n    }\n  }\n\n  reset() {\n    this.cache.clear()\n    this.sizes.clear()\n    this.totalSize = 0\n  }\n\n  keys() {\n    return [...this.cache.keys()]\n  }\n\n  remove(key: string): void {\n    if (this.cache.has(key)) {\n      this.totalSize -= this.sizes.get(key) || 0\n      this.cache.delete(key)\n      this.sizes.delete(key)\n    }\n  }\n\n  clear(): void {\n    this.cache.clear()\n    this.sizes.clear()\n    this.totalSize = 0\n  }\n\n  get size(): number {\n    return this.cache.size\n  }\n\n  get currentSize(): number {\n    return this.totalSize\n  }\n}\n"],"names":["LRUCache","constructor","maxSize","calculateSize","cache","Map","sizes","totalSize","set","key","value","size","console","warn","has","get","touch","Boolean","undefined","delete","evictIfNecessary","evictLeastRecentlyUsed","lruKey","keys","next","lruSize","reset","clear","remove","currentSize"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/interception-routes.ts"],"sourcesContent":["import { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\n\n// order matters here, the first match will be used\nexport const INTERCEPTION_ROUTE_MARKERS = [\n  '(..)(..)',\n  '(.)',\n  '(..)',\n  '(...)',\n] as const\n\nexport function isInterceptionRouteAppPath(path: string): boolean {\n  // TODO-APP: add more serious validation\n  return (\n    path\n      .split('/')\n      .find((segment) =>\n        INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n      ) !== undefined\n  )\n}\n\nexport function extractInterceptionRouteInformation(path: string) {\n  let interceptingRoute: string | undefined,\n    marker: (typeof INTERCEPTION_ROUTE_MARKERS)[number] | undefined,\n    interceptedRoute: string | undefined\n\n  for (const segment of path.split('/')) {\n    marker = INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n    if (marker) {\n      ;[interceptingRoute, interceptedRoute] = path.split(marker, 2)\n      break\n    }\n  }\n\n  if (!interceptingRoute || !marker || !interceptedRoute) {\n    throw new Error(\n      `Invalid interception route: ${path}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`\n    )\n  }\n\n  interceptingRoute = normalizeAppPath(interceptingRoute) // normalize the path, e.g. /(blog)/feed -> /feed\n\n  switch (marker) {\n    case '(.)':\n      // (.) indicates that we should match with sibling routes, so we just need to append the intercepted route to the intercepting route\n      if (interceptingRoute === '/') {\n        interceptedRoute = `/${interceptedRoute}`\n      } else {\n        interceptedRoute = interceptingRoute + '/' + interceptedRoute\n      }\n      break\n    case '(..)':\n      // (..) indicates that we should match at one level up, so we need to remove the last segment of the intercepting route\n      if (interceptingRoute === '/') {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..) marker at the root level, use (.) instead.`\n        )\n      }\n      interceptedRoute = interceptingRoute\n        .split('/')\n        .slice(0, -1)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    case '(...)':\n      // (...) will match the route segment in the root directory, so we need to use the root directory to prepend the intercepted route\n      interceptedRoute = '/' + interceptedRoute\n      break\n    case '(..)(..)':\n      // (..)(..) indicates that we should match at two levels up, so we need to remove the last two segments of the intercepting route\n\n      const splitInterceptingRoute = interceptingRoute.split('/')\n      if (splitInterceptingRoute.length <= 2) {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..)(..) marker at the root level or one level up.`\n        )\n      }\n\n      interceptedRoute = splitInterceptingRoute\n        .slice(0, -2)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    default:\n      throw new Error('Invariant: unexpected marker')\n  }\n\n  return { interceptingRoute, interceptedRoute }\n}\n"],"names":["INTERCEPTION_ROUTE_MARKERS","extractInterceptionRouteInformation","isInterceptionRouteAppPath","path","split","find","segment","m","startsWith","undefined","interceptingRoute","marker","interceptedRoute","Error","normalizeAppPath","slice","concat","join","splitInterceptingRoute","length"],"mappings":";;;;;;;;;;;;;;;;IAGaA,0BAA0B,EAAA;eAA1BA;;IAkBGC,mCAAmC,EAAA;eAAnCA;;IAXAC,0BAA0B,EAAA;eAA1BA;;;0BAViB;AAG1B,MAAMF,6BAA6B;IACxC;IACA;IACA;IACA;CACD;AAEM,SAASE,2BAA2BC,IAAY;IACrD,wCAAwC;IACxC,OACEA,KACGC,KAAK,CAAC,KACNC,IAAI,CAAC,CAACC,UACLN,2BAA2BK,IAAI,CAAC,CAACE,IAAMD,QAAQE,UAAU,CAACD,SACtDE;AAEZ;AAEO,SAASR,oCAAoCE,IAAY;IAC9D,IAAIO,mBACFC,QACAC;IAEF,KAAK,MAAMN,WAAWH,KAAKC,KAAK,CAAC,KAAM;QACrCO,SAASX,2BAA2BK,IAAI,CAAC,CAACE,IAAMD,QAAQE,UAAU,CAACD;QACnE,IAAII,QAAQ;;YACT,CAACD,mBAAmBE,iBAAiB,GAAGT,KAAKC,KAAK,CAACO,QAAQ;YAC5D;QACF;IACF;IAEA,IAAI,CAACD,qBAAqB,CAACC,UAAU,CAACC,kBAAkB;QACtD,MAAM,IAAIC,MACR,CAAC,4BAA4B,EAAEV,KAAK,iFAAiF,CAAC;IAE1H;IAEAO,oBAAoBI,CAAAA,GAAAA,UAAAA,gBAAgB,EAACJ,mBAAmB,iDAAiD;;IAEzG,OAAQC;QACN,KAAK;YACH,oIAAoI;YACpI,IAAID,sBAAsB,KAAK;gBAC7BE,mBAAmB,CAAC,CAAC,EAAEA,kBAAkB;YAC3C,OAAO;gBACLA,mBAAmBF,oBAAoB,MAAME;YAC/C;YACA;QACF,KAAK;YACH,uHAAuH;YACvH,IAAIF,sBAAsB,KAAK;gBAC7B,MAAM,IAAIG,MACR,CAAC,4BAA4B,EAAEV,KAAK,4DAA4D,CAAC;YAErG;YACAS,mBAAmBF,kBAChBN,KAAK,CAAC,KACNW,KAAK,CAAC,GAAG,CAAC,GACVC,MAAM,CAACJ,kBACPK,IAAI,CAAC;YACR;QACF,KAAK;YACH,kIAAkI;YAClIL,mBAAmB,MAAMA;YACzB;QACF,KAAK;YACH,iIAAiI;YAEjI,MAAMM,yBAAyBR,kBAAkBN,KAAK,CAAC;YACvD,IAAIc,uBAAuBC,MAAM,IAAI,GAAG;gBACtC,MAAM,IAAIN,MACR,CAAC,4BAA4B,EAAEV,KAAK,+DAA+D,CAAC;YAExG;YAEAS,mBAAmBM,uBAChBH,KAAK,CAAC,GAAG,CAAC,GACVC,MAAM,CAACJ,kBACPK,IAAI,CAAC;YACR;QACF;YACE,MAAM,IAAIJ,MAAM;IACpB;IAEA,OAAO;QAAEH;QAAmBE;IAAiB;AAC/C","ignoreList":[0]}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/find-page-file.ts"],"sourcesContent":["import { fileExists } from '../../lib/file-exists'\nimport { getPagePaths } from '../../shared/lib/page-path/get-page-paths'\nimport { nonNullable } from '../../lib/non-nullable'\nimport { join, sep, normalize } from 'path'\nimport { promises as fsPromises } from 'fs'\nimport { warn } from '../../build/output/log'\nimport { cyan } from '../../lib/picocolors'\nimport { isMetadataRouteFile } from '../../lib/metadata/is-metadata-route'\nimport type { PageExtensions } from '../../build/page-extensions-type'\n\nasync function isTrueCasePagePath(pagePath: string, pagesDir: string) {\n  const pageSegments = normalize(pagePath).split(sep).filter(Boolean)\n  const segmentExistsPromises = pageSegments.map(async (segment, i) => {\n    const segmentParentDir = join(pagesDir, ...pageSegments.slice(0, i))\n    const parentDirEntries = await fsPromises.readdir(segmentParentDir)\n    return parentDirEntries.includes(segment)\n  })\n\n  return (await Promise.all(segmentExistsPromises)).every(Boolean)\n}\n\n/**\n * Finds a page file with the given parameters. If the page is duplicated with\n * multiple extensions it will throw, otherwise it will return the *relative*\n * path to the page file or null if it is not found.\n *\n * @param pagesDir Absolute path to the pages folder with trailing `/pages`.\n * @param normalizedPagePath The page normalized (it will be denormalized).\n * @param pageExtensions Array of page extensions.\n */\nexport async function findPageFile(\n  pagesDir: string,\n  normalizedPagePath: string,\n  pageExtensions: PageExtensions,\n  isAppDir: boolean\n): Promise<string | null> {\n  const pagePaths = getPagePaths(normalizedPagePath, pageExtensions, isAppDir)\n  const [existingPath, ...others] = (\n    await Promise.all(\n      pagePaths.map(async (path) => {\n        const filePath = join(pagesDir, path)\n        try {\n          return (await fileExists(filePath)) ? path : null\n        } catch (err: any) {\n          if (!err?.code?.includes('ENOTDIR')) throw err\n        }\n        return null\n      })\n    )\n  ).filter(nonNullable)\n\n  if (!existingPath) {\n    return null\n  }\n\n  if (!(await isTrueCasePagePath(existingPath, pagesDir))) {\n    return null\n  }\n\n  if (others.length > 0) {\n    warn(\n      `Duplicate page detected. ${cyan(join('pages', existingPath))} and ${cyan(\n        join('pages', others[0])\n      )} both resolve to ${cyan(normalizedPagePath)}.`\n    )\n  }\n\n  return existingPath\n}\n\n/**\n *\n * createValidFileMatcher receives configured page extensions and return helpers to determine:\n * `isLayoutsLeafPage`: if a file is a valid page file or routes file under app directory\n * `isTrackedFiles`: if it's a tracked file for webpack watcher\n *\n */\nexport function createValidFileMatcher(\n  pageExtensions: PageExtensions,\n  appDirPath: string | undefined\n) {\n  const getExtensionRegexString = (extensions: string[]) =>\n    `(?:${extensions.join('|')})`\n\n  const validExtensionFileRegex = new RegExp(\n    '\\\\.' + getExtensionRegexString(pageExtensions) + '$'\n  )\n  const leafOnlyPageFileRegex = new RegExp(\n    `(^(page|route)|[\\\\\\\\/](page|route))\\\\.${getExtensionRegexString(\n      pageExtensions\n    )}$`\n  )\n  const rootNotFoundFileRegex = new RegExp(\n    `^not-found\\\\.${getExtensionRegexString(pageExtensions)}$`\n  )\n  /** TODO-METADATA: support other metadata routes\n   *  regex for:\n   *\n   * /robots.txt|<ext>\n   * /sitemap.xml|<ext>\n   * /favicon.ico\n   * /manifest.json|<ext>\n   * <route>/icon.png|jpg|<ext>\n   * <route>/apple-touch-icon.png|jpg|<ext>\n   *\n   */\n\n  /**\n   * Match the file if it's a metadata route file, static: if the file is a static metadata file.\n   * It needs to be a file which doesn't match the custom metadata routes e.g. `app/robots.txt/route.js`\n   */\n  function isMetadataFile(filePath: string) {\n    const appDirRelativePath = appDirPath\n      ? filePath.replace(appDirPath, '')\n      : filePath\n\n    return isMetadataRouteFile(appDirRelativePath, pageExtensions, true)\n  }\n\n  // Determine if the file is leaf node page file or route file under layouts,\n  // 'page.<extension>' | 'route.<extension>'\n  function isAppRouterPage(filePath: string) {\n    return leafOnlyPageFileRegex.test(filePath) || isMetadataFile(filePath)\n  }\n\n  function isPageFile(filePath: string) {\n    return validExtensionFileRegex.test(filePath) || isMetadataFile(filePath)\n  }\n\n  function isRootNotFound(filePath: string) {\n    if (!appDirPath) {\n      return false\n    }\n    if (!filePath.startsWith(appDirPath + sep)) {\n      return false\n    }\n    const rest = filePath.slice(appDirPath.length + 1)\n    return rootNotFoundFileRegex.test(rest)\n  }\n\n  return {\n    isPageFile,\n    isAppRouterPage,\n    isMetadataFile,\n    isRootNotFound,\n  }\n}\n"],"names":["createValidFileMatcher","findPageFile","isTrueCasePagePath","pagePath","pagesDir","pageSegments","normalize","split","sep","filter","Boolean","segmentExistsPromises","map","segment","i","segmentParentDir","join","slice","parentDirEntries","fsPromises","readdir","includes","Promise","all","every","normalizedPagePath","pageExtensions","isAppDir","pagePaths","getPagePaths","existingPath","others","path","filePath","fileExists","err","code","nonNullable","length","warn","cyan","appDirPath","getExtensionRegexString","extensions","validExtensionFileRegex","RegExp","leafOnlyPageFileRegex","rootNotFoundFileRegex","isMetadataFile","appDirRelativePath","replace","isMetadataRouteFile","isAppRouterPage","test","isPageFile","isRootNotFound","startsWith","rest"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/trace/constants.ts"],"sourcesContent":["/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/\n\n// eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */\n\nenum BaseServerSpan {\n  handleRequest = 'BaseServer.handleRequest',\n  run = 'BaseServer.run',\n  pipe = 'BaseServer.pipe',\n  getStaticHTML = 'BaseServer.getStaticHTML',\n  render = 'BaseServer.render',\n  renderToResponseWithComponents = 'BaseServer.renderToResponseWithComponents',\n  renderToResponse = 'BaseServer.renderToResponse',\n  renderToHTML = 'BaseServer.renderToHTML',\n  renderError = 'BaseServer.renderError',\n  renderErrorToResponse = 'BaseServer.renderErrorToResponse',\n  renderErrorToHTML = 'BaseServer.renderErrorToHTML',\n  render404 = 'BaseServer.render404',\n}\n\nenum LoadComponentsSpan {\n  loadDefaultErrorComponents = 'LoadComponents.loadDefaultErrorComponents',\n  loadComponents = 'LoadComponents.loadComponents',\n}\n\nenum NextServerSpan {\n  getRequestHandler = 'NextServer.getRequestHandler',\n  getServer = 'NextServer.getServer',\n  getServerRequestHandler = 'NextServer.getServerRequestHandler',\n  createServer = 'createServer.createServer',\n}\n\nenum NextNodeServerSpan {\n  compression = 'NextNodeServer.compression',\n  getBuildId = 'NextNodeServer.getBuildId',\n  createComponentTree = 'NextNodeServer.createComponentTree',\n  clientComponentLoading = 'NextNodeServer.clientComponentLoading',\n  getLayoutOrPageModule = 'NextNodeServer.getLayoutOrPageModule',\n  generateStaticRoutes = 'NextNodeServer.generateStaticRoutes',\n  generateFsStaticRoutes = 'NextNodeServer.generateFsStaticRoutes',\n  generatePublicRoutes = 'NextNodeServer.generatePublicRoutes',\n  generateImageRoutes = 'NextNodeServer.generateImageRoutes.route',\n  sendRenderResult = 'NextNodeServer.sendRenderResult',\n  proxyRequest = 'NextNodeServer.proxyRequest',\n  runApi = 'NextNodeServer.runApi',\n  render = 'NextNodeServer.render',\n  renderHTML = 'NextNodeServer.renderHTML',\n  imageOptimizer = 'NextNodeServer.imageOptimizer',\n  getPagePath = 'NextNodeServer.getPagePath',\n  getRoutesManifest = 'NextNodeServer.getRoutesManifest',\n  findPageComponents = 'NextNodeServer.findPageComponents',\n  getFontManifest = 'NextNodeServer.getFontManifest',\n  getServerComponentManifest = 'NextNodeServer.getServerComponentManifest',\n  getRequestHandler = 'NextNodeServer.getRequestHandler',\n  renderToHTML = 'NextNodeServer.renderToHTML',\n  renderError = 'NextNodeServer.renderError',\n  renderErrorToHTML = 'NextNodeServer.renderErrorToHTML',\n  render404 = 'NextNodeServer.render404',\n  startResponse = 'NextNodeServer.startResponse',\n\n  // nested inner span, does not require parent scope name\n  route = 'route',\n  onProxyReq = 'onProxyReq',\n  apiResolver = 'apiResolver',\n  internalFetch = 'internalFetch',\n}\n\nenum StartServerSpan {\n  startServer = 'startServer.startServer',\n}\n\nenum RenderSpan {\n  getServerSideProps = 'Render.getServerSideProps',\n  getStaticProps = 'Render.getStaticProps',\n  renderToString = 'Render.renderToString',\n  renderDocument = 'Render.renderDocument',\n  createBodyResult = 'Render.createBodyResult',\n}\n\nenum AppRenderSpan {\n  renderToString = 'AppRender.renderToString',\n  renderToReadableStream = 'AppRender.renderToReadableStream',\n  getBodyResult = 'AppRender.getBodyResult',\n  fetch = 'AppRender.fetch',\n}\n\nenum RouterSpan {\n  executeRoute = 'Router.executeRoute',\n}\n\nenum NodeSpan {\n  runHandler = 'Node.runHandler',\n}\n\nenum AppRouteRouteHandlersSpan {\n  runHandler = 'AppRouteRouteHandlers.runHandler',\n}\n\nenum ResolveMetadataSpan {\n  generateMetadata = 'ResolveMetadata.generateMetadata',\n  generateViewport = 'ResolveMetadata.generateViewport',\n}\n\nenum MiddlewareSpan {\n  execute = 'Middleware.execute',\n}\n\ntype SpanTypes =\n  | `${BaseServerSpan}`\n  | `${LoadComponentsSpan}`\n  | `${NextServerSpan}`\n  | `${StartServerSpan}`\n  | `${NextNodeServerSpan}`\n  | `${RenderSpan}`\n  | `${RouterSpan}`\n  | `${AppRenderSpan}`\n  | `${NodeSpan}`\n  | `${AppRouteRouteHandlersSpan}`\n  | `${ResolveMetadataSpan}`\n  | `${MiddlewareSpan}`\n\n// This list is used to filter out spans that are not relevant to the user\nexport const NextVanillaSpanAllowlist = [\n  MiddlewareSpan.execute,\n  BaseServerSpan.handleRequest,\n  RenderSpan.getServerSideProps,\n  RenderSpan.getStaticProps,\n  AppRenderSpan.fetch,\n  AppRenderSpan.getBodyResult,\n  RenderSpan.renderDocument,\n  NodeSpan.runHandler,\n  AppRouteRouteHandlersSpan.runHandler,\n  ResolveMetadataSpan.generateMetadata,\n  ResolveMetadataSpan.generateViewport,\n  NextNodeServerSpan.createComponentTree,\n  NextNodeServerSpan.findPageComponents,\n  NextNodeServerSpan.getLayoutOrPageModule,\n  NextNodeServerSpan.startResponse,\n  NextNodeServerSpan.clientComponentLoading,\n]\n\n// These Spans are allowed to be always logged\n// when the otel log prefix env is set\nexport const LogSpanAllowList = [\n  NextNodeServerSpan.findPageComponents,\n  NextNodeServerSpan.createComponentTree,\n  NextNodeServerSpan.clientComponentLoading,\n]\n\nexport {\n  BaseServerSpan,\n  LoadComponentsSpan,\n  NextServerSpan,\n  NextNodeServerSpan,\n  StartServerSpan,\n  RenderSpan,\n  RouterSpan,\n  AppRenderSpan,\n  NodeSpan,\n  AppRouteRouteHandlersSpan,\n  ResolveMetadataSpan,\n  MiddlewareSpan,\n}\n\nexport type { SpanTypes }\n"],"names":["AppRenderSpan","AppRouteRouteHandlersSpan","BaseServerSpan","LoadComponentsSpan","LogSpanAllowList","MiddlewareSpan","NextNodeServerSpan","NextServerSpan","NextVanillaSpanAllowlist","NodeSpan","RenderSpan","ResolveMetadataSpan","RouterSpan","StartServerSpan"],"mappings":"AAAA;;;;;EAKE,GAEF,4CAA4C;AAC5C,4BAA4B,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;IA0J1BA,aAAa,EAAA;eAAbA;;IAEAC,yBAAyB,EAAA;eAAzBA;;IATAC,cAAc,EAAA;eAAdA;;IACAC,kBAAkB,EAAA;eAAlBA;;IARWC,gBAAgB,EAAA;eAAhBA;;IAkBXC,cAAc,EAAA;eAAdA;;IARAC,kBAAkB,EAAA;eAAlBA;;IADAC,cAAc,EAAA;eAAdA;;IA9BWC,wBAAwB,EAAA;eAAxBA;;IAoCXC,QAAQ,EAAA;eAARA;;IAHAC,UAAU,EAAA;eAAVA;;IAKAC,mBAAmB,EAAA;eAAnBA;;IAJAC,UAAU,EAAA;eAAVA;;IAFAC,eAAe,EAAA;eAAfA;;;AArJF,IAAKX,iBAAAA,WAAAA,GAAAA,SAAAA,cAAAA;;;;;;;;;;;;;WAAAA;EAAAA,kBAAAA,CAAAA;AAeL,IAAKC,qBAAAA,WAAAA,GAAAA,SAAAA,kBAAAA;;;WAAAA;EAAAA,sBAAAA,CAAAA;AAKL,IAAKI,iBAAAA,WAAAA,GAAAA,SAAAA,cAAAA;;;;;WAAAA;EAAAA,kBAAAA,CAAAA;AAOL,IAAKD,qBAAAA,WAAAA,GAAAA,SAAAA,kBAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;IA4BH,wDAAwD;;;;;WA5BrDA;EAAAA,sBAAAA,CAAAA;AAmCL,IAAKO,kBAAAA,WAAAA,GAAAA,SAAAA,eAAAA;;WAAAA;EAAAA,mBAAAA,CAAAA;AAIL,IAAKH,aAAAA,WAAAA,GAAAA,SAAAA,UAAAA;;;;;;WAAAA;EAAAA,cAAAA,CAAAA;AAQL,IAAKV,gBAAAA,WAAAA,GAAAA,SAAAA,aAAAA;;;;;WAAAA;EAAAA,iBAAAA,CAAAA;AAOL,IAAKY,aAAAA,WAAAA,GAAAA,SAAAA,UAAAA;;WAAAA;EAAAA,cAAAA,CAAAA;AAIL,IAAKH,WAAAA,WAAAA,GAAAA,SAAAA,QAAAA;;WAAAA;EAAAA,YAAAA,CAAAA;AAIL,IAAKR,4BAAAA,WAAAA,GAAAA,SAAAA,yBAAAA;;WAAAA;EAAAA,6BAAAA,CAAAA;AAIL,IAAKU,sBAAAA,WAAAA,GAAAA,SAAAA,mBAAAA;;;WAAAA;EAAAA,uBAAAA,CAAAA;AAKL,IAAKN,iBAAAA,WAAAA,GAAAA,SAAAA,cAAAA;;WAAAA;EAAAA,kBAAAA,CAAAA;AAmBE,MAAMG,2BAA2B;;;;;;;;;;;;;;;;;CAiBvC;AAIM,MAAMJ,mBAAmB;;;;CAI/B","ignoreList":[0]}},
    {"offset": {"line": 516, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 521, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/trace/tracer.ts"],"sourcesContent":["import type { FetchEventResult } from '../../web/types'\nimport type { TextMapSetter } from '@opentelemetry/api'\nimport type { SpanTypes } from './constants'\nimport { LogSpanAllowList, NextVanillaSpanAllowlist } from './constants'\n\nimport type {\n  ContextAPI,\n  Span,\n  SpanOptions,\n  Tracer,\n  AttributeValue,\n  TextMapGetter,\n} from 'next/dist/compiled/@opentelemetry/api'\nimport { isThenable } from '../../../shared/lib/is-thenable'\n\nlet api: typeof import('next/dist/compiled/@opentelemetry/api')\n\n// we want to allow users to use their own version of @opentelemetry/api if they\n// want to, so we try to require it first, and if it fails we fall back to the\n// version that is bundled with Next.js\n// this is because @opentelemetry/api has to be synced with the version of\n// @opentelemetry/tracing that is used, and we don't want to force users to use\n// the version that is bundled with Next.js.\n// the API is ~stable, so this should be fine\nif (process.env.NEXT_RUNTIME === 'edge') {\n  api = require('@opentelemetry/api')\n} else {\n  try {\n    api = require('@opentelemetry/api')\n  } catch (err) {\n    api = require('next/dist/compiled/@opentelemetry/api')\n  }\n}\n\nconst { context, propagation, trace, SpanStatusCode, SpanKind, ROOT_CONTEXT } =\n  api\n\nexport class BubbledError extends Error {\n  constructor(\n    public readonly bubble?: boolean,\n    public readonly result?: FetchEventResult\n  ) {\n    super()\n  }\n}\n\nexport function isBubbledError(error: unknown): error is BubbledError {\n  if (typeof error !== 'object' || error === null) return false\n  return error instanceof BubbledError\n}\n\nconst closeSpanWithError = (span: Span, error?: Error) => {\n  if (isBubbledError(error) && error.bubble) {\n    span.setAttribute('next.bubble', true)\n  } else {\n    if (error) {\n      span.recordException(error)\n    }\n    span.setStatus({ code: SpanStatusCode.ERROR, message: error?.message })\n  }\n  span.end()\n}\n\ntype TracerSpanOptions = Omit<SpanOptions, 'attributes'> & {\n  parentSpan?: Span\n  spanName?: string\n  attributes?: Partial<Record<AttributeNames, AttributeValue | undefined>>\n  hideSpan?: boolean\n}\n\ninterface NextTracer {\n  getContext(): ContextAPI\n\n  /**\n   * Instruments a function by automatically creating a span activated on its\n   * scope.\n   *\n   * The span will automatically be finished when one of these conditions is\n   * met:\n   *\n   * * The function returns a promise, in which case the span will finish when\n   * the promise is resolved or rejected.\n   * * The function takes a callback as its second parameter, in which case the\n   * span will finish when that callback is called.\n   * * The function doesn't accept a callback and doesn't return a promise, in\n   * which case the span will finish at the end of the function execution.\n   *\n   */\n  trace<T>(\n    type: SpanTypes,\n    fn: (span?: Span, done?: (error?: Error) => any) => Promise<T>\n  ): Promise<T>\n  trace<T>(\n    type: SpanTypes,\n    fn: (span?: Span, done?: (error?: Error) => any) => T\n  ): T\n  trace<T>(\n    type: SpanTypes,\n    options: TracerSpanOptions,\n    fn: (span?: Span, done?: (error?: Error) => any) => Promise<T>\n  ): Promise<T>\n  trace<T>(\n    type: SpanTypes,\n    options: TracerSpanOptions,\n    fn: (span?: Span, done?: (error?: Error) => any) => T\n  ): T\n\n  /**\n   * Wrap a function to automatically create a span activated on its\n   * scope when it's called.\n   *\n   * The span will automatically be finished when one of these conditions is\n   * met:\n   *\n   * * The function returns a promise, in which case the span will finish when\n   * the promise is resolved or rejected.\n   * * The function takes a callback as its last parameter, in which case the\n   * span will finish when that callback is called.\n   * * The function doesn't accept a callback and doesn't return a promise, in\n   * which case the span will finish at the end of the function execution.\n   */\n  wrap<T = (...args: Array<any>) => any>(type: SpanTypes, fn: T): T\n  wrap<T = (...args: Array<any>) => any>(\n    type: SpanTypes,\n    options: TracerSpanOptions,\n    fn: T\n  ): T\n  wrap<T = (...args: Array<any>) => any>(\n    type: SpanTypes,\n    options: (...args: any[]) => TracerSpanOptions,\n    fn: T\n  ): T\n\n  /**\n   * Starts and returns a new Span representing a logical unit of work.\n   *\n   * This method do NOT modify the current Context by default. In result, any inner span will not\n   * automatically set its parent context to the span created by this method unless manually activate\n   * context via `tracer.getContext().with`. `trace`, or `wrap` is generally recommended as it gracefully\n   * handles context activation. (ref: https://github.com/open-telemetry/opentelemetry-js/issues/1923)\n   */\n  startSpan(type: SpanTypes): Span\n  startSpan(type: SpanTypes, options: TracerSpanOptions): Span\n\n  /**\n   * Returns currently activated span if current context is in the scope of the span.\n   * Returns undefined otherwise.\n   */\n  getActiveScopeSpan(): Span | undefined\n\n  /**\n   * Returns trace propagation data for the currently active context. The format is equal to data provided\n   * through the OpenTelemetry propagator API.\n   */\n  getTracePropagationData(): ClientTraceDataEntry[]\n}\n\ntype NextAttributeNames =\n  | 'next.route'\n  | 'next.page'\n  | 'next.rsc'\n  | 'next.segment'\n  | 'next.span_name'\n  | 'next.span_type'\n  | 'next.clientComponentLoadCount'\ntype OTELAttributeNames = `http.${string}` | `net.${string}`\ntype AttributeNames = NextAttributeNames | OTELAttributeNames\n\n/** we use this map to propagate attributes from nested spans to the top span */\nconst rootSpanAttributesStore = new Map<\n  number,\n  Map<AttributeNames, AttributeValue | undefined>\n>()\nconst rootSpanIdKey = api.createContextKey('next.rootSpanId')\nlet lastSpanId = 0\nconst getSpanId = () => lastSpanId++\n\nexport interface ClientTraceDataEntry {\n  key: string\n  value: string\n}\n\nconst clientTraceDataSetter: TextMapSetter<ClientTraceDataEntry[]> = {\n  set(carrier, key, value) {\n    carrier.push({\n      key,\n      value,\n    })\n  },\n}\n\nclass NextTracerImpl implements NextTracer {\n  /**\n   * Returns an instance to the trace with configured name.\n   * Since wrap / trace can be defined in any place prior to actual trace subscriber initialization,\n   * This should be lazily evaluated.\n   */\n  private getTracerInstance(): Tracer {\n    return trace.getTracer('next.js', '0.0.1')\n  }\n\n  public getContext(): ContextAPI {\n    return context\n  }\n\n  public getTracePropagationData(): ClientTraceDataEntry[] {\n    const activeContext = context.active()\n    const entries: ClientTraceDataEntry[] = []\n    propagation.inject(activeContext, entries, clientTraceDataSetter)\n    return entries\n  }\n\n  public getActiveScopeSpan(): Span | undefined {\n    return trace.getSpan(context?.active())\n  }\n\n  public withPropagatedContext<T, C>(\n    carrier: C,\n    fn: () => T,\n    getter?: TextMapGetter<C>\n  ): T {\n    const activeContext = context.active()\n    if (trace.getSpanContext(activeContext)) {\n      // Active span is already set, too late to propagate.\n      return fn()\n    }\n    const remoteContext = propagation.extract(activeContext, carrier, getter)\n    return context.with(remoteContext, fn)\n  }\n\n  // Trace, wrap implementation is inspired by datadog trace implementation\n  // (https://datadoghq.dev/dd-trace-js/interfaces/tracer.html#trace).\n  public trace<T>(\n    type: SpanTypes,\n    fn: (span?: Span, done?: (error?: Error) => any) => Promise<T>\n  ): Promise<T>\n  public trace<T>(\n    type: SpanTypes,\n    fn: (span?: Span, done?: (error?: Error) => any) => T\n  ): T\n  public trace<T>(\n    type: SpanTypes,\n    options: TracerSpanOptions,\n    fn: (span?: Span, done?: (error?: Error) => any) => Promise<T>\n  ): Promise<T>\n  public trace<T>(\n    type: SpanTypes,\n    options: TracerSpanOptions,\n    fn: (span?: Span, done?: (error?: Error) => any) => T\n  ): T\n  public trace<T>(...args: Array<any>) {\n    const [type, fnOrOptions, fnOrEmpty] = args\n\n    // coerce options form overload\n    const {\n      fn,\n      options,\n    }: {\n      fn: (span?: Span, done?: (error?: Error) => any) => T | Promise<T>\n      options: TracerSpanOptions\n    } =\n      typeof fnOrOptions === 'function'\n        ? {\n            fn: fnOrOptions,\n            options: {},\n          }\n        : {\n            fn: fnOrEmpty,\n            options: { ...fnOrOptions },\n          }\n\n    const spanName = options.spanName ?? type\n\n    if (\n      (!NextVanillaSpanAllowlist.includes(type) &&\n        process.env.NEXT_OTEL_VERBOSE !== '1') ||\n      options.hideSpan\n    ) {\n      return fn()\n    }\n\n    // Trying to get active scoped span to assign parent. If option specifies parent span manually, will try to use it.\n    let spanContext = this.getSpanContext(\n      options?.parentSpan ?? this.getActiveScopeSpan()\n    )\n    let isRootSpan = false\n\n    if (!spanContext) {\n      spanContext = context?.active() ?? ROOT_CONTEXT\n      isRootSpan = true\n    } else if (trace.getSpanContext(spanContext)?.isRemote) {\n      isRootSpan = true\n    }\n\n    const spanId = getSpanId()\n\n    options.attributes = {\n      'next.span_name': spanName,\n      'next.span_type': type,\n      ...options.attributes,\n    }\n\n    return context.with(spanContext.setValue(rootSpanIdKey, spanId), () =>\n      this.getTracerInstance().startActiveSpan(\n        spanName,\n        options,\n        (span: Span) => {\n          const startTime =\n            'performance' in globalThis && 'measure' in performance\n              ? globalThis.performance.now()\n              : undefined\n\n          const onCleanup = () => {\n            rootSpanAttributesStore.delete(spanId)\n            if (\n              startTime &&\n              process.env.NEXT_OTEL_PERFORMANCE_PREFIX &&\n              LogSpanAllowList.includes(type || ('' as any))\n            ) {\n              performance.measure(\n                `${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-${(\n                  type.split('.').pop() || ''\n                ).replace(\n                  /[A-Z]/g,\n                  (match: string) => '-' + match.toLowerCase()\n                )}`,\n                {\n                  start: startTime,\n                  end: performance.now(),\n                }\n              )\n            }\n          }\n\n          if (isRootSpan) {\n            rootSpanAttributesStore.set(\n              spanId,\n              new Map(\n                Object.entries(options.attributes ?? {}) as [\n                  AttributeNames,\n                  AttributeValue | undefined,\n                ][]\n              )\n            )\n          }\n          try {\n            if (fn.length > 1) {\n              return fn(span, (err) => closeSpanWithError(span, err))\n            }\n\n            const result = fn(span)\n            if (isThenable(result)) {\n              // If there's error make sure it throws\n              return result\n                .then((res) => {\n                  span.end()\n                  // Need to pass down the promise result,\n                  // it could be react stream response with error { error, stream }\n                  return res\n                })\n                .catch((err) => {\n                  closeSpanWithError(span, err)\n                  throw err\n                })\n                .finally(onCleanup)\n            } else {\n              span.end()\n              onCleanup()\n            }\n\n            return result\n          } catch (err: any) {\n            closeSpanWithError(span, err)\n            onCleanup()\n            throw err\n          }\n        }\n      )\n    )\n  }\n\n  public wrap<T = (...args: Array<any>) => any>(type: SpanTypes, fn: T): T\n  public wrap<T = (...args: Array<any>) => any>(\n    type: SpanTypes,\n    options: TracerSpanOptions,\n    fn: T\n  ): T\n  public wrap<T = (...args: Array<any>) => any>(\n    type: SpanTypes,\n    options: (...args: any[]) => TracerSpanOptions,\n    fn: T\n  ): T\n  public wrap(...args: Array<any>) {\n    const tracer = this\n    const [name, options, fn] =\n      args.length === 3 ? args : [args[0], {}, args[1]]\n\n    if (\n      !NextVanillaSpanAllowlist.includes(name) &&\n      process.env.NEXT_OTEL_VERBOSE !== '1'\n    ) {\n      return fn\n    }\n\n    return function (this: any) {\n      let optionsObj = options\n      if (typeof optionsObj === 'function' && typeof fn === 'function') {\n        optionsObj = optionsObj.apply(this, arguments)\n      }\n\n      const lastArgId = arguments.length - 1\n      const cb = arguments[lastArgId]\n\n      if (typeof cb === 'function') {\n        const scopeBoundCb = tracer.getContext().bind(context.active(), cb)\n        return tracer.trace(name, optionsObj, (_span, done) => {\n          arguments[lastArgId] = function (err: any) {\n            done?.(err)\n            return scopeBoundCb.apply(this, arguments)\n          }\n\n          return fn.apply(this, arguments)\n        })\n      } else {\n        return tracer.trace(name, optionsObj, () => fn.apply(this, arguments))\n      }\n    }\n  }\n\n  public startSpan(type: SpanTypes): Span\n  public startSpan(type: SpanTypes, options: TracerSpanOptions): Span\n  public startSpan(...args: Array<any>): Span {\n    const [type, options]: [string, TracerSpanOptions | undefined] = args as any\n\n    const spanContext = this.getSpanContext(\n      options?.parentSpan ?? this.getActiveScopeSpan()\n    )\n    return this.getTracerInstance().startSpan(type, options, spanContext)\n  }\n\n  private getSpanContext(parentSpan?: Span) {\n    const spanContext = parentSpan\n      ? trace.setSpan(context.active(), parentSpan)\n      : undefined\n\n    return spanContext\n  }\n\n  public getRootSpanAttributes() {\n    const spanId = context.active().getValue(rootSpanIdKey) as number\n    return rootSpanAttributesStore.get(spanId)\n  }\n\n  public setRootSpanAttribute(key: AttributeNames, value: AttributeValue) {\n    const spanId = context.active().getValue(rootSpanIdKey) as number\n    const attributes = rootSpanAttributesStore.get(spanId)\n    if (attributes) {\n      attributes.set(key, value)\n    }\n  }\n}\n\nconst getTracer = (() => {\n  const tracer = new NextTracerImpl()\n\n  return () => tracer\n})()\n\nexport { getTracer, SpanStatusCode, SpanKind }\nexport type { NextTracer, Span, SpanOptions, ContextAPI, TracerSpanOptions }\n"],"names":["BubbledError","SpanKind","SpanStatusCode","getTracer","isBubbledError","api","process","env","NEXT_RUNTIME","require","err","context","propagation","trace","ROOT_CONTEXT","Error","constructor","bubble","result","error","closeSpanWithError","span","setAttribute","recordException","setStatus","code","ERROR","message","end","rootSpanAttributesStore","Map","rootSpanIdKey","createContextKey","lastSpanId","getSpanId","clientTraceDataSetter","set","carrier","key","value","push","NextTracerImpl","getTracerInstance","getContext","getTracePropagationData","activeContext","active","entries","inject","getActiveScopeSpan","getSpan","withPropagatedContext","fn","getter","getSpanContext","remoteContext","extract","with","args","type","fnOrOptions","fnOrEmpty","options","spanName","NextVanillaSpanAllowlist","includes","NEXT_OTEL_VERBOSE","hideSpan","spanContext","parentSpan","isRootSpan","isRemote","spanId","attributes","setValue","startActiveSpan","startTime","globalThis","performance","now","undefined","onCleanup","delete","NEXT_OTEL_PERFORMANCE_PREFIX","LogSpanAllowList","measure","split","pop","replace","match","toLowerCase","start","Object","length","isThenable","then","res","catch","finally","wrap","tracer","name","optionsObj","apply","arguments","lastArgId","cb","scopeBoundCb","bind","_span","done","startSpan","setSpan","getRootSpanAttributes","getValue","get","setRootSpanAttribute"],"mappings":";;;;;;;;;;;;;;;;;;IAqCaA,YAAY,EAAA;eAAZA;;IA+auBC,QAAQ,EAAA;eAARA;;IAAhBC,cAAc,EAAA;eAAdA;;IAAXC,SAAS,EAAA;eAATA;;IAtaOC,cAAc,EAAA;eAAdA;;;2BA3C2C;4BAUhC;AAE3B,IAAIC;AAEJ,gFAAgF;AAChF,8EAA8E;AAC9E,uCAAuC;AACvC,0EAA0E;AAC1E,+EAA+E;AAC/E,4CAA4C;AAC5C,6CAA6C;AAC7C,IAAIC,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAI;QACFH,MAAMI,QAAQ;IAChB,EAAE,OAAOC,KAAK;QACZL,MAAMI,QAAQ;IAChB;AACF;AAEA,MAAM,EAAEE,OAAO,EAAEC,WAAW,EAAEC,KAAK,EAAEX,cAAc,EAAED,QAAQ,EAAEa,YAAY,EAAE,GAC3ET;AAEK,MAAML,qBAAqBe;IAChCC,YACkBC,MAAgB,EAChBC,MAAyB,CACzC;QACA,KAAK,IAAA,IAAA,CAHWD,MAAAA,GAAAA,QAAAA,IAAAA,CACAC,MAAAA,GAAAA;IAGlB;AACF;AAEO,SAASd,eAAee,KAAc;IAC3C,IAAI,OAAOA,UAAU,YAAYA,UAAU,MAAM,OAAO;IACxD,OAAOA,iBAAiBnB;AAC1B;AAEA,MAAMoB,qBAAqB,CAACC,MAAYF;IACtC,IAAIf,eAAee,UAAUA,MAAMF,MAAM,EAAE;QACzCI,KAAKC,YAAY,CAAC,eAAe;IACnC,OAAO;QACL,IAAIH,OAAO;YACTE,KAAKE,eAAe,CAACJ;QACvB;QACAE,KAAKG,SAAS,CAAC;YAAEC,MAAMvB,eAAewB,KAAK;YAAEC,OAAO,EAAER,SAAAA,OAAAA,KAAAA,IAAAA,MAAOQ,OAAO;QAAC;IACvE;IACAN,KAAKO,GAAG;AACV;AA2GA,8EAA8E,GAC9E,MAAMC,0BAA0B,IAAIC;AAIpC,MAAMC,gBAAgB1B,IAAI2B,gBAAgB,CAAC;AAC3C,IAAIC,aAAa;AACjB,MAAMC,YAAY,IAAMD;AAOxB,MAAME,wBAA+D;IACnEC,KAAIC,OAAO,EAAEC,GAAG,EAAEC,KAAK;QACrBF,QAAQG,IAAI,CAAC;YACXF;YACAC;QACF;IACF;AACF;AAEA,MAAME;IACJ;;;;GAIC,GACOC,oBAA4B;QAClC,OAAO7B,MAAMV,SAAS,CAAC,WAAW;IACpC;IAEOwC,aAAyB;QAC9B,OAAOhC;IACT;IAEOiC,0BAAkD;QACvD,MAAMC,gBAAgBlC,QAAQmC,MAAM;QACpC,MAAMC,UAAkC,EAAE;QAC1CnC,YAAYoC,MAAM,CAACH,eAAeE,SAASZ;QAC3C,OAAOY;IACT;IAEOE,qBAAuC;QAC5C,OAAOpC,MAAMqC,OAAO,CAACvC,WAAAA,OAAAA,KAAAA,IAAAA,QAASmC,MAAM;IACtC;IAEOK,sBACLd,OAAU,EACVe,EAAW,EACXC,MAAyB,EACtB;QACH,MAAMR,gBAAgBlC,QAAQmC,MAAM;QACpC,IAAIjC,MAAMyC,cAAc,CAACT,gBAAgB;YACvC,qDAAqD;YACrD,OAAOO;QACT;QACA,MAAMG,gBAAgB3C,YAAY4C,OAAO,CAACX,eAAeR,SAASgB;QAClE,OAAO1C,QAAQ8C,IAAI,CAACF,eAAeH;IACrC;IAsBOvC,MAAS,GAAG6C,IAAgB,EAAE;YAwCxB7C;QAvCX,MAAM,CAAC8C,MAAMC,aAAaC,UAAU,GAAGH;QAEvC,+BAA+B;QAC/B,MAAM,EACJN,EAAE,EACFU,OAAO,EACR,GAIC,OAAOF,gBAAgB,aACnB;YACER,IAAIQ;YACJE,SAAS,CAAC;QACZ,IACA;YACEV,IAAIS;YACJC,SAAS;gBAAE,GAAGF,WAAW;YAAC;QAC5B;QAEN,MAAMG,WAAWD,QAAQC,QAAQ,IAAIJ;QAErC,IACG,CAACK,WAAAA,wBAAwB,CAACC,QAAQ,CAACN,SAClCrD,QAAQC,GAAG,CAAC2D,iBAAiB,KAAK,OACpCJ,QAAQK,QAAQ,EAChB;YACA,OAAOf;QACT;QAEA,mHAAmH;QACnH,IAAIgB,cAAc,IAAI,CAACd,cAAc,CACnCQ,CAAAA,WAAAA,OAAAA,KAAAA,IAAAA,QAASO,UAAU,KAAI,IAAI,CAACpB,kBAAkB;QAEhD,IAAIqB,aAAa;QAEjB,IAAI,CAACF,aAAa;YAChBA,cAAczD,CAAAA,WAAAA,OAAAA,KAAAA,IAAAA,QAASmC,MAAM,EAAA,KAAMhC;YACnCwD,aAAa;QACf,OAAO,IAAA,CAAIzD,wBAAAA,MAAMyC,cAAc,CAACc,YAAAA,KAAAA,OAAAA,KAAAA,IAArBvD,sBAAmC0D,QAAQ,EAAE;YACtDD,aAAa;QACf;QAEA,MAAME,SAAStC;QAEf4B,QAAQW,UAAU,GAAG;YACnB,kBAAkBV;YAClB,kBAAkBJ;YAClB,GAAGG,QAAQW,UAAU;QACvB;QAEA,OAAO9D,QAAQ8C,IAAI,CAACW,YAAYM,QAAQ,CAAC3C,eAAeyC,SAAS,IAC/D,IAAI,CAAC9B,iBAAiB,GAAGiC,eAAe,CACtCZ,UACAD,SACA,CAACzC;gBACC,MAAMuD,YACJ,iBAAiBC,cAAc,aAAaC,cACxCD,WAAWC,WAAW,CAACC,GAAG,KAC1BC;gBAEN,MAAMC,YAAY;oBAChBpD,wBAAwBqD,MAAM,CAACV;oBAC/B,IACEI,aACAtE,QAAQC,GAAG,CAAC4E,4BAA4B,IACxCC,WAAAA,gBAAgB,CAACnB,QAAQ,CAACN,QAAS,KACnC;wBACAmB,YAAYO,OAAO,CACjB,GAAG/E,QAAQC,GAAG,CAAC4E,4BAA4B,CAAC,MAAM,EAChDxB,CAAAA,KAAK2B,KAAK,CAAC,KAAKC,GAAG,MAAM,EAAC,EAC1BC,OAAO,CACP,UACA,CAACC,QAAkB,MAAMA,MAAMC,WAAW,KACzC,EACH;4BACEC,OAAOf;4BACPhD,KAAKkD,YAAYC,GAAG;wBACtB;oBAEJ;gBACF;gBAEA,IAAIT,YAAY;oBACdzC,wBAAwBO,GAAG,CACzBoC,QACA,IAAI1C,IACF8D,OAAO7C,OAAO,CAACe,QAAQW,UAAU,IAAI,CAAC;gBAM5C;gBACA,IAAI;oBACF,IAAIrB,GAAGyC,MAAM,GAAG,GAAG;wBACjB,OAAOzC,GAAG/B,MAAM,CAACX,MAAQU,mBAAmBC,MAAMX;oBACpD;oBAEA,MAAMQ,SAASkC,GAAG/B;oBAClB,IAAIyE,CAAAA,GAAAA,YAAAA,UAAU,EAAC5E,SAAS;wBACtB,uCAAuC;wBACvC,OAAOA,OACJ6E,IAAI,CAAC,CAACC;4BACL3E,KAAKO,GAAG;4BACR,wCAAwC;4BACxC,iEAAiE;4BACjE,OAAOoE;wBACT,GACCC,KAAK,CAAC,CAACvF;4BACNU,mBAAmBC,MAAMX;4BACzB,MAAMA;wBACR,GACCwF,OAAO,CAACjB;oBACb,OAAO;wBACL5D,KAAKO,GAAG;wBACRqD;oBACF;oBAEA,OAAO/D;gBACT,EAAE,OAAOR,KAAU;oBACjBU,mBAAmBC,MAAMX;oBACzBuE;oBACA,MAAMvE;gBACR;YACF;IAGN;IAaOyF,KAAK,GAAGzC,IAAgB,EAAE;QAC/B,MAAM0C,SAAS,IAAI;QACnB,MAAM,CAACC,MAAMvC,SAASV,GAAG,GACvBM,KAAKmC,MAAM,KAAK,IAAInC,OAAO;YAACA,IAAI,CAAC,EAAE;YAAE,CAAC;YAAGA,IAAI,CAAC,EAAE;SAAC;QAEnD,IACE,CAACM,WAAAA,wBAAwB,CAACC,QAAQ,CAACoC,SACnC/F,QAAQC,GAAG,CAAC2D,iBAAiB,KAAK,KAClC;YACA,OAAOd;QACT;QAEA,OAAO;YACL,IAAIkD,aAAaxC;YACjB,IAAI,OAAOwC,eAAe,cAAc,OAAOlD,OAAO,YAAY;gBAChEkD,aAAaA,WAAWC,KAAK,CAAC,IAAI,EAAEC;YACtC;YAEA,MAAMC,YAAYD,UAAUX,MAAM,GAAG;YACrC,MAAMa,KAAKF,SAAS,CAACC,UAAU;YAE/B,IAAI,OAAOC,OAAO,YAAY;gBAC5B,MAAMC,eAAeP,OAAOzD,UAAU,GAAGiE,IAAI,CAACjG,QAAQmC,MAAM,IAAI4D;gBAChE,OAAON,OAAOvF,KAAK,CAACwF,MAAMC,YAAY,CAACO,OAAOC;oBAC5CN,SAAS,CAACC,UAAU,GAAG,SAAU/F,GAAQ;wBACvCoG,QAAAA,OAAAA,KAAAA,IAAAA,KAAOpG;wBACP,OAAOiG,aAAaJ,KAAK,CAAC,IAAI,EAAEC;oBAClC;oBAEA,OAAOpD,GAAGmD,KAAK,CAAC,IAAI,EAAEC;gBACxB;YACF,OAAO;gBACL,OAAOJ,OAAOvF,KAAK,CAACwF,MAAMC,YAAY,IAAMlD,GAAGmD,KAAK,CAAC,IAAI,EAAEC;YAC7D;QACF;IACF;IAIOO,UAAU,GAAGrD,IAAgB,EAAQ;QAC1C,MAAM,CAACC,MAAMG,QAAQ,GAA4CJ;QAEjE,MAAMU,cAAc,IAAI,CAACd,cAAc,CACrCQ,CAAAA,WAAAA,OAAAA,KAAAA,IAAAA,QAASO,UAAU,KAAI,IAAI,CAACpB,kBAAkB;QAEhD,OAAO,IAAI,CAACP,iBAAiB,GAAGqE,SAAS,CAACpD,MAAMG,SAASM;IAC3D;IAEQd,eAAee,UAAiB,EAAE;QACxC,MAAMD,cAAcC,aAChBxD,MAAMmG,OAAO,CAACrG,QAAQmC,MAAM,IAAIuB,cAChCW;QAEJ,OAAOZ;IACT;IAEO6C,wBAAwB;QAC7B,MAAMzC,SAAS7D,QAAQmC,MAAM,GAAGoE,QAAQ,CAACnF;QACzC,OAAOF,wBAAwBsF,GAAG,CAAC3C;IACrC;IAEO4C,qBAAqB9E,GAAmB,EAAEC,KAAqB,EAAE;QACtE,MAAMiC,SAAS7D,QAAQmC,MAAM,GAAGoE,QAAQ,CAACnF;QACzC,MAAM0C,aAAa5C,wBAAwBsF,GAAG,CAAC3C;QAC/C,IAAIC,YAAY;YACdA,WAAWrC,GAAG,CAACE,KAAKC;QACtB;IACF;AACF;AAEA,MAAMpC,YAAa,CAAA;IACjB,MAAMiG,SAAS,IAAI3D;IAEnB,OAAO,IAAM2D;AACf,CAAA","ignoreList":[0]}},
    {"offset": {"line": 769, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 774, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/incremental-cache/fetch-cache.ts"],"sourcesContent":["import type { CacheHandler, CacheHandlerContext, CacheHandlerValue } from './'\nimport {\n  CachedRouteKind,\n  IncrementalCacheKind,\n  type IncrementalCacheValue,\n} from '../../response-cache'\n\nimport { LRUCache } from '../lru-cache'\nimport {\n  CACHE_ONE_YEAR,\n  NEXT_CACHE_SOFT_TAGS_HEADER,\n} from '../../../lib/constants'\n\nlet rateLimitedUntil = 0\nlet memoryCache: LRUCache<CacheHandlerValue> | undefined\n\ninterface NextFetchCacheParams {\n  internal?: boolean\n  fetchType?: string\n  fetchIdx?: number\n  fetchUrl?: string\n}\n\nconst CACHE_TAGS_HEADER = 'x-vercel-cache-tags' as const\nconst CACHE_HEADERS_HEADER = 'x-vercel-sc-headers' as const\nconst CACHE_STATE_HEADER = 'x-vercel-cache-state' as const\nconst CACHE_REVALIDATE_HEADER = 'x-vercel-revalidate' as const\nconst CACHE_FETCH_URL_HEADER = 'x-vercel-cache-item-name' as const\nconst CACHE_CONTROL_VALUE_HEADER = 'x-vercel-cache-control' as const\n\nconst DEBUG = Boolean(process.env.NEXT_PRIVATE_DEBUG_CACHE)\n\nasync function fetchRetryWithTimeout(\n  url: Parameters<typeof fetch>[0],\n  init: Parameters<typeof fetch>[1],\n  retryIndex = 0\n): Promise<Response> {\n  const controller = new AbortController()\n  const timeout = setTimeout(() => {\n    controller.abort()\n  }, 500)\n\n  return fetch(url, {\n    ...(init || {}),\n    signal: controller.signal,\n  })\n    .catch((err) => {\n      if (retryIndex === 3) {\n        throw err\n      } else {\n        if (DEBUG) {\n          console.log(`Fetch failed for ${url} retry ${retryIndex}`)\n        }\n        return fetchRetryWithTimeout(url, init, retryIndex + 1)\n      }\n    })\n    .finally(() => {\n      clearTimeout(timeout)\n    })\n}\n\nexport default class FetchCache implements CacheHandler {\n  private headers: Record<string, string>\n  private cacheEndpoint?: string\n\n  private hasMatchingTags(arr1: string[], arr2: string[]) {\n    if (arr1.length !== arr2.length) return false\n\n    const set1 = new Set(arr1)\n    const set2 = new Set(arr2)\n\n    if (set1.size !== set2.size) return false\n\n    for (let tag of set1) {\n      if (!set2.has(tag)) return false\n    }\n\n    return true\n  }\n\n  static isAvailable(ctx: {\n    _requestHeaders: CacheHandlerContext['_requestHeaders']\n  }) {\n    return !!(\n      ctx._requestHeaders['x-vercel-sc-host'] || process.env.SUSPENSE_CACHE_URL\n    )\n  }\n\n  constructor(ctx: CacheHandlerContext) {\n    this.headers = {}\n    this.headers['Content-Type'] = 'application/json'\n\n    if (CACHE_HEADERS_HEADER in ctx._requestHeaders) {\n      const newHeaders = JSON.parse(\n        ctx._requestHeaders[CACHE_HEADERS_HEADER] as string\n      )\n      for (const k in newHeaders) {\n        this.headers[k] = newHeaders[k]\n      }\n      delete ctx._requestHeaders[CACHE_HEADERS_HEADER]\n    }\n    const scHost =\n      ctx._requestHeaders['x-vercel-sc-host'] || process.env.SUSPENSE_CACHE_URL\n\n    const scBasePath =\n      ctx._requestHeaders['x-vercel-sc-basepath'] ||\n      process.env.SUSPENSE_CACHE_BASEPATH\n\n    if (process.env.SUSPENSE_CACHE_AUTH_TOKEN) {\n      this.headers['Authorization'] =\n        `Bearer ${process.env.SUSPENSE_CACHE_AUTH_TOKEN}`\n    }\n\n    if (scHost) {\n      const scProto = process.env.SUSPENSE_CACHE_PROTO || 'https'\n      this.cacheEndpoint = `${scProto}://${scHost}${scBasePath || ''}`\n      if (DEBUG) {\n        console.log('using cache endpoint', this.cacheEndpoint)\n      }\n    } else if (DEBUG) {\n      console.log('no cache endpoint available')\n    }\n\n    if (ctx.maxMemoryCacheSize) {\n      if (!memoryCache) {\n        if (DEBUG) {\n          console.log('using memory store for fetch cache')\n        }\n\n        memoryCache = new LRUCache(ctx.maxMemoryCacheSize, function length({\n          value,\n        }) {\n          if (!value) {\n            return 25\n          } else if (value.kind === CachedRouteKind.REDIRECT) {\n            return JSON.stringify(value.props).length\n          } else if (value.kind === CachedRouteKind.IMAGE) {\n            throw new Error('invariant image should not be incremental-cache')\n          } else if (value.kind === CachedRouteKind.FETCH) {\n            return JSON.stringify(value.data || '').length\n          } else if (value.kind === CachedRouteKind.APP_ROUTE) {\n            return value.body.length\n          }\n          // rough estimate of size of cache value\n          return (\n            value.html.length +\n            (JSON.stringify(\n              value.kind === CachedRouteKind.APP_PAGE\n                ? value.rscData\n                : value.pageData\n            )?.length || 0)\n          )\n        })\n      }\n    } else {\n      if (DEBUG) {\n        console.log('not using memory store for fetch cache')\n      }\n    }\n  }\n\n  public resetRequestCache(): void {\n    memoryCache?.reset()\n  }\n\n  public async revalidateTag(\n    ...args: Parameters<CacheHandler['revalidateTag']>\n  ) {\n    let [tags] = args\n    tags = typeof tags === 'string' ? [tags] : tags\n    if (DEBUG) {\n      console.log('revalidateTag', tags)\n    }\n\n    if (!tags.length) return\n\n    if (Date.now() < rateLimitedUntil) {\n      if (DEBUG) {\n        console.log('rate limited ', rateLimitedUntil)\n      }\n      return\n    }\n\n    for (let i = 0; i < Math.ceil(tags.length / 64); i++) {\n      const currentTags = tags.slice(i * 64, i * 64 + 64)\n      try {\n        const res = await fetchRetryWithTimeout(\n          `${this.cacheEndpoint}/v1/suspense-cache/revalidate?tags=${currentTags\n            .map((tag) => encodeURIComponent(tag))\n            .join(',')}`,\n          {\n            method: 'POST',\n            headers: this.headers,\n            // @ts-expect-error not on public type\n            next: { internal: true },\n          }\n        )\n\n        if (res.status === 429) {\n          const retryAfter = res.headers.get('retry-after') || '60000'\n          rateLimitedUntil = Date.now() + parseInt(retryAfter)\n        }\n\n        if (!res.ok) {\n          throw new Error(`Request failed with status ${res.status}.`)\n        }\n      } catch (err) {\n        console.warn(`Failed to revalidate tag`, currentTags, err)\n      }\n    }\n  }\n\n  public async get(...args: Parameters<CacheHandler['get']>) {\n    const [key, ctx] = args\n    const { tags, softTags, kind: kindHint, fetchIdx, fetchUrl } = ctx\n\n    if (kindHint !== IncrementalCacheKind.FETCH) {\n      return null\n    }\n\n    if (Date.now() < rateLimitedUntil) {\n      if (DEBUG) {\n        console.log('rate limited')\n      }\n      return null\n    }\n\n    // memory cache is cleared at the end of each request\n    // so that revalidate events are pulled from upstream\n    // on successive requests\n    let data = memoryCache?.get(key)\n\n    const hasFetchKindAndMatchingTags =\n      data?.value?.kind === CachedRouteKind.FETCH &&\n      this.hasMatchingTags(tags ?? [], data.value.tags ?? [])\n\n    // Get data from fetch cache. Also check if new tags have been\n    // specified with the same cache key (fetch URL)\n    if (this.cacheEndpoint && (!data || !hasFetchKindAndMatchingTags)) {\n      try {\n        const start = Date.now()\n        const fetchParams: NextFetchCacheParams = {\n          internal: true,\n          fetchType: 'cache-get',\n          fetchUrl: fetchUrl,\n          fetchIdx,\n        }\n        const res = await fetch(\n          `${this.cacheEndpoint}/v1/suspense-cache/${key}`,\n          {\n            method: 'GET',\n            headers: {\n              ...this.headers,\n              [CACHE_FETCH_URL_HEADER]: fetchUrl,\n              [CACHE_TAGS_HEADER]: tags?.join(',') || '',\n              [NEXT_CACHE_SOFT_TAGS_HEADER]: softTags?.join(',') || '',\n            } as any,\n            next: fetchParams as NextFetchRequestConfig,\n          }\n        )\n\n        if (res.status === 429) {\n          const retryAfter = res.headers.get('retry-after') || '60000'\n          rateLimitedUntil = Date.now() + parseInt(retryAfter)\n        }\n\n        if (res.status === 404) {\n          if (DEBUG) {\n            console.log(\n              `no fetch cache entry for ${key}, duration: ${\n                Date.now() - start\n              }ms`\n            )\n          }\n          return null\n        }\n\n        if (!res.ok) {\n          console.error(await res.text())\n          throw new Error(`invalid response from cache ${res.status}`)\n        }\n\n        const cached: IncrementalCacheValue = await res.json()\n\n        if (!cached || cached.kind !== CachedRouteKind.FETCH) {\n          DEBUG && console.log({ cached })\n          throw new Error('invalid cache value')\n        }\n\n        // if new tags were specified, merge those tags to the existing tags\n        if (cached.kind === CachedRouteKind.FETCH) {\n          cached.tags ??= []\n          for (const tag of tags ?? []) {\n            if (!cached.tags.includes(tag)) {\n              cached.tags.push(tag)\n            }\n          }\n        }\n\n        const cacheState = res.headers.get(CACHE_STATE_HEADER)\n        const age = res.headers.get('age')\n\n        data = {\n          value: cached,\n          // if it's already stale set it to a time in the past\n          // if not derive last modified from age\n          lastModified:\n            cacheState !== 'fresh'\n              ? Date.now() - CACHE_ONE_YEAR\n              : Date.now() - parseInt(age || '0', 10) * 1000,\n        }\n\n        if (DEBUG) {\n          console.log(\n            `got fetch cache entry for ${key}, duration: ${\n              Date.now() - start\n            }ms, size: ${\n              Object.keys(cached).length\n            }, cache-state: ${cacheState} tags: ${tags?.join(\n              ','\n            )} softTags: ${softTags?.join(',')}`\n          )\n        }\n\n        if (data) {\n          memoryCache?.set(key, data)\n        }\n      } catch (err) {\n        // unable to get data from fetch-cache\n        if (DEBUG) {\n          console.error(`Failed to get from fetch-cache`, err)\n        }\n      }\n    }\n\n    return data || null\n  }\n\n  public async set(...args: Parameters<CacheHandler['set']>) {\n    const [key, data, ctx] = args\n\n    const { fetchCache, fetchIdx, fetchUrl, tags } = ctx\n    if (!fetchCache) return\n\n    if (Date.now() < rateLimitedUntil) {\n      if (DEBUG) {\n        console.log('rate limited')\n      }\n      return\n    }\n\n    memoryCache?.set(key, {\n      value: data,\n      lastModified: Date.now(),\n    })\n\n    if (this.cacheEndpoint) {\n      try {\n        const start = Date.now()\n        if (data !== null && 'revalidate' in data) {\n          this.headers[CACHE_REVALIDATE_HEADER] = data.revalidate.toString()\n        }\n        if (\n          !this.headers[CACHE_REVALIDATE_HEADER] &&\n          data !== null &&\n          'data' in data\n        ) {\n          this.headers[CACHE_CONTROL_VALUE_HEADER] =\n            data.data.headers['cache-control']\n        }\n        const body = JSON.stringify({\n          ...data,\n          // we send the tags in the header instead\n          // of in the body here\n          tags: undefined,\n        })\n\n        if (DEBUG) {\n          console.log('set cache', key)\n        }\n        const fetchParams: NextFetchCacheParams = {\n          internal: true,\n          fetchType: 'cache-set',\n          fetchUrl,\n          fetchIdx,\n        }\n        const res = await fetch(\n          `${this.cacheEndpoint}/v1/suspense-cache/${key}`,\n          {\n            method: 'POST',\n            headers: {\n              ...this.headers,\n              [CACHE_FETCH_URL_HEADER]: fetchUrl || '',\n              [CACHE_TAGS_HEADER]: tags?.join(',') || '',\n            },\n            body: body,\n            next: fetchParams as NextFetchRequestConfig,\n          }\n        )\n\n        if (res.status === 429) {\n          const retryAfter = res.headers.get('retry-after') || '60000'\n          rateLimitedUntil = Date.now() + parseInt(retryAfter)\n        }\n\n        if (!res.ok) {\n          DEBUG && console.log(await res.text())\n          throw new Error(`invalid response ${res.status}`)\n        }\n\n        if (DEBUG) {\n          console.log(\n            `successfully set to fetch-cache for ${key}, duration: ${\n              Date.now() - start\n            }ms, size: ${body.length}`\n          )\n        }\n      } catch (err) {\n        // unable to set to fetch-cache\n        if (DEBUG) {\n          console.error(`Failed to update fetch cache`, err)\n        }\n      }\n    }\n    return\n  }\n}\n"],"names":["FetchCache","rateLimitedUntil","memoryCache","CACHE_TAGS_HEADER","CACHE_HEADERS_HEADER","CACHE_STATE_HEADER","CACHE_REVALIDATE_HEADER","CACHE_FETCH_URL_HEADER","CACHE_CONTROL_VALUE_HEADER","DEBUG","Boolean","process","env","NEXT_PRIVATE_DEBUG_CACHE","fetchRetryWithTimeout","url","init","retryIndex","controller","AbortController","timeout","setTimeout","abort","fetch","signal","catch","err","console","log","finally","clearTimeout","hasMatchingTags","arr1","arr2","length","set1","Set","set2","size","tag","has","isAvailable","ctx","_requestHeaders","SUSPENSE_CACHE_URL","constructor","headers","newHeaders","JSON","parse","k","scHost","scBasePath","SUSPENSE_CACHE_BASEPATH","SUSPENSE_CACHE_AUTH_TOKEN","scProto","SUSPENSE_CACHE_PROTO","cacheEndpoint","maxMemoryCacheSize","LRUCache","value","kind","CachedRouteKind","REDIRECT","stringify","props","IMAGE","Error","FETCH","data","APP_ROUTE","body","html","APP_PAGE","rscData","pageData","resetRequestCache","reset","revalidateTag","args","tags","Date","now","i","Math","ceil","currentTags","slice","res","map","encodeURIComponent","join","method","next","internal","status","retryAfter","get","parseInt","ok","warn","key","softTags","kindHint","fetchIdx","fetchUrl","IncrementalCacheKind","hasFetchKindAndMatchingTags","start","fetchParams","fetchType","NEXT_CACHE_SOFT_TAGS_HEADER","error","text","cached","json","includes","push","cacheState","age","lastModified","CACHE_ONE_YEAR","Object","keys","set","fetchCache","revalidate","toString","undefined"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1085, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1090, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/incremental-cache/file-system-cache.ts"],"sourcesContent":["import type { RouteMetadata } from '../../../export/routes/types'\nimport type { CacheHandler, CacheHandlerContext, CacheHandlerValue } from './'\nimport type { CacheFs } from '../../../shared/lib/utils'\nimport {\n  CachedRouteKind,\n  IncrementalCacheKind,\n  type CachedFetchValue,\n} from '../../response-cache'\n\nimport { LRUCache } from '../lru-cache'\nimport path from '../../../shared/lib/isomorphic/path'\nimport {\n  NEXT_CACHE_TAGS_HEADER,\n  NEXT_DATA_SUFFIX,\n  NEXT_META_SUFFIX,\n  RSC_PREFETCH_SUFFIX,\n  RSC_SEGMENT_SUFFIX,\n  RSC_SEGMENTS_DIR_SUFFIX,\n  RSC_SUFFIX,\n} from '../../../lib/constants'\nimport { tagsManifest } from './tags-manifest.external'\n\ntype FileSystemCacheContext = Omit<\n  CacheHandlerContext,\n  'fs' | 'serverDistDir'\n> & {\n  fs: CacheFs\n  serverDistDir: string\n}\n\nlet memoryCache: LRUCache<CacheHandlerValue> | undefined\n\nexport default class FileSystemCache implements CacheHandler {\n  private fs: FileSystemCacheContext['fs']\n  private flushToDisk?: FileSystemCacheContext['flushToDisk']\n  private serverDistDir: FileSystemCacheContext['serverDistDir']\n  private revalidatedTags: string[]\n  private debug: boolean\n\n  constructor(ctx: FileSystemCacheContext) {\n    this.fs = ctx.fs\n    this.flushToDisk = ctx.flushToDisk\n    this.serverDistDir = ctx.serverDistDir\n    this.revalidatedTags = ctx.revalidatedTags\n    this.debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE\n\n    if (ctx.maxMemoryCacheSize) {\n      if (!memoryCache) {\n        if (this.debug) {\n          console.log('using memory store for fetch cache')\n        }\n\n        memoryCache = new LRUCache(ctx.maxMemoryCacheSize, function length({\n          value,\n        }) {\n          if (!value) {\n            return 25\n          } else if (value.kind === CachedRouteKind.REDIRECT) {\n            return JSON.stringify(value.props).length\n          } else if (value.kind === CachedRouteKind.IMAGE) {\n            throw new Error('invariant image should not be incremental-cache')\n          } else if (value.kind === CachedRouteKind.FETCH) {\n            return JSON.stringify(value.data || '').length\n          } else if (value.kind === CachedRouteKind.APP_ROUTE) {\n            return value.body.length\n          }\n          // rough estimate of size of cache value\n          return (\n            value.html.length +\n            (JSON.stringify(\n              value.kind === CachedRouteKind.APP_PAGE\n                ? value.rscData\n                : value.pageData\n            )?.length || 0)\n          )\n        })\n      }\n    } else if (this.debug) {\n      console.log('not using memory store for fetch cache')\n    }\n  }\n\n  public resetRequestCache(): void {}\n\n  public async revalidateTag(\n    ...args: Parameters<CacheHandler['revalidateTag']>\n  ) {\n    let [tags] = args\n    tags = typeof tags === 'string' ? [tags] : tags\n\n    if (this.debug) {\n      console.log('revalidateTag', tags)\n    }\n\n    if (tags.length === 0) {\n      return\n    }\n\n    for (const tag of tags) {\n      const data = tagsManifest.items[tag] || {}\n      data.revalidatedAt = Date.now()\n      tagsManifest.items[tag] = data\n    }\n  }\n\n  public async get(...args: Parameters<CacheHandler['get']>) {\n    const [key, ctx] = args\n    const { tags, softTags, kind, isRoutePPREnabled, isFallback } = ctx\n\n    let data = memoryCache?.get(key)\n\n    if (this.debug) {\n      console.log('get', key, tags, kind, !!data)\n    }\n\n    // let's check the disk for seed data\n    if (!data && process.env.NEXT_RUNTIME !== 'edge') {\n      if (kind === IncrementalCacheKind.APP_ROUTE) {\n        try {\n          const filePath = this.getFilePath(\n            `${key}.body`,\n            IncrementalCacheKind.APP_ROUTE\n          )\n          const fileData = await this.fs.readFile(filePath)\n          const { mtime } = await this.fs.stat(filePath)\n\n          const meta = JSON.parse(\n            await this.fs.readFile(\n              filePath.replace(/\\.body$/, NEXT_META_SUFFIX),\n              'utf8'\n            )\n          )\n\n          const cacheEntry: CacheHandlerValue = {\n            lastModified: mtime.getTime(),\n            value: {\n              kind: CachedRouteKind.APP_ROUTE,\n              body: fileData,\n              headers: meta.headers,\n              status: meta.status,\n            },\n          }\n          return cacheEntry\n        } catch {\n          return null\n        }\n      }\n\n      try {\n        const filePath = this.getFilePath(\n          kind === IncrementalCacheKind.FETCH ? key : `${key}.html`,\n          kind\n        )\n\n        const fileData = await this.fs.readFile(filePath, 'utf8')\n        const { mtime } = await this.fs.stat(filePath)\n\n        if (kind === IncrementalCacheKind.FETCH) {\n          if (!this.flushToDisk) return null\n\n          const lastModified = mtime.getTime()\n          const parsedData: CachedFetchValue = JSON.parse(fileData)\n          data = {\n            lastModified,\n            value: parsedData,\n          }\n\n          if (data.value?.kind === CachedRouteKind.FETCH) {\n            const storedTags = data.value?.tags\n\n            // update stored tags if a new one is being added\n            // TODO: remove this when we can send the tags\n            // via header on GET same as SET\n            if (!tags?.every((tag) => storedTags?.includes(tag))) {\n              if (this.debug) {\n                console.log('tags vs storedTags mismatch', tags, storedTags)\n              }\n              await this.set(key, data.value, {\n                tags,\n                isRoutePPREnabled,\n              })\n            }\n          }\n        } else if (kind === IncrementalCacheKind.APP_PAGE) {\n          // We try to load the metadata file, but if it fails, we don't\n          // error. We also don't load it if this is a fallback.\n          let meta: RouteMetadata | undefined\n          try {\n            meta = JSON.parse(\n              await this.fs.readFile(\n                filePath.replace(/\\.html$/, NEXT_META_SUFFIX),\n                'utf8'\n              )\n            )\n          } catch {}\n\n          let maybeSegmentData: Map<string, Buffer> | undefined\n          if (meta?.segmentPaths) {\n            // Collect all the segment data for this page.\n            // TODO: To optimize file system reads, we should consider creating\n            // separate cache entries for each segment, rather than storing them\n            // all on the page's entry. Though the behavior is\n            // identical regardless.\n            const segmentData: Map<string, Buffer> = new Map()\n            maybeSegmentData = segmentData\n            const segmentsDir = key + RSC_SEGMENTS_DIR_SUFFIX\n            await Promise.all(\n              meta.segmentPaths.map(async (segmentPath: string) => {\n                const segmentDataFilePath = this.getFilePath(\n                  segmentPath === '/'\n                    ? segmentsDir + '/_index' + RSC_SEGMENT_SUFFIX\n                    : segmentsDir + segmentPath + RSC_SEGMENT_SUFFIX,\n                  IncrementalCacheKind.APP_PAGE\n                )\n                try {\n                  segmentData.set(\n                    segmentPath,\n                    await this.fs.readFile(segmentDataFilePath)\n                  )\n                } catch {\n                  // This shouldn't happen, but if for some reason we fail to\n                  // load a segment from the filesystem, treat it the same as if\n                  // the segment is dynamic and does not have a prefetch.\n                }\n              })\n            )\n          }\n\n          let rscData: Buffer | undefined\n          if (!isFallback) {\n            rscData = await this.fs.readFile(\n              this.getFilePath(\n                `${key}${isRoutePPREnabled ? RSC_PREFETCH_SUFFIX : RSC_SUFFIX}`,\n                IncrementalCacheKind.APP_PAGE\n              )\n            )\n          }\n\n          data = {\n            lastModified: mtime.getTime(),\n            value: {\n              kind: CachedRouteKind.APP_PAGE,\n              html: fileData,\n              rscData,\n              postponed: meta?.postponed,\n              headers: meta?.headers,\n              status: meta?.status,\n              segmentData: maybeSegmentData,\n            },\n          }\n        } else if (kind === IncrementalCacheKind.PAGES) {\n          let meta: RouteMetadata | undefined\n          let pageData: string | object = {}\n\n          if (!isFallback) {\n            pageData = JSON.parse(\n              await this.fs.readFile(\n                this.getFilePath(\n                  `${key}${NEXT_DATA_SUFFIX}`,\n                  IncrementalCacheKind.PAGES\n                ),\n                'utf8'\n              )\n            )\n          }\n\n          data = {\n            lastModified: mtime.getTime(),\n            value: {\n              kind: CachedRouteKind.PAGES,\n              html: fileData,\n              pageData,\n              headers: meta?.headers,\n              status: meta?.status,\n            },\n          }\n        } else {\n          throw new Error(\n            `Invariant: Unexpected route kind ${kind} in file system cache.`\n          )\n        }\n\n        if (data) {\n          memoryCache?.set(key, data)\n        }\n      } catch {\n        return null\n      }\n    }\n\n    if (\n      data?.value?.kind === CachedRouteKind.APP_PAGE ||\n      data?.value?.kind === CachedRouteKind.PAGES\n    ) {\n      let cacheTags: undefined | string[]\n      const tagsHeader = data.value.headers?.[NEXT_CACHE_TAGS_HEADER]\n\n      if (typeof tagsHeader === 'string') {\n        cacheTags = tagsHeader.split(',')\n      }\n\n      if (cacheTags?.length) {\n        const isStale = cacheTags.some((tag) => {\n          return (\n            tagsManifest?.items[tag]?.revalidatedAt &&\n            tagsManifest?.items[tag].revalidatedAt >=\n              (data?.lastModified || Date.now())\n          )\n        })\n\n        // we trigger a blocking validation if an ISR page\n        // had a tag revalidated, if we want to be a background\n        // revalidation instead we return data.lastModified = -1\n        if (isStale) {\n          return null\n        }\n      }\n    } else if (data?.value?.kind === CachedRouteKind.FETCH) {\n      const combinedTags = [...(tags || []), ...(softTags || [])]\n\n      const wasRevalidated = combinedTags.some((tag) => {\n        if (this.revalidatedTags.includes(tag)) {\n          return true\n        }\n\n        return (\n          tagsManifest?.items[tag]?.revalidatedAt &&\n          tagsManifest?.items[tag].revalidatedAt >=\n            (data?.lastModified || Date.now())\n        )\n      })\n      // When revalidate tag is called we don't return\n      // stale data so it's updated right away\n      if (wasRevalidated) {\n        data = undefined\n      }\n    }\n\n    return data ?? null\n  }\n\n  public async set(...args: Parameters<CacheHandler['set']>) {\n    const [key, data, ctx] = args\n    const { isFallback } = ctx\n    memoryCache?.set(key, {\n      value: data,\n      lastModified: Date.now(),\n    })\n\n    if (this.debug) {\n      console.log('set', key)\n    }\n\n    if (!this.flushToDisk || !data) return\n\n    if (data.kind === CachedRouteKind.APP_ROUTE) {\n      const filePath = this.getFilePath(\n        `${key}.body`,\n        IncrementalCacheKind.APP_ROUTE\n      )\n      await this.fs.mkdir(path.dirname(filePath))\n      await this.fs.writeFile(filePath, data.body)\n\n      const meta: RouteMetadata = {\n        headers: data.headers,\n        status: data.status,\n        postponed: undefined,\n        segmentPaths: undefined,\n      }\n\n      await this.fs.writeFile(\n        filePath.replace(/\\.body$/, NEXT_META_SUFFIX),\n        JSON.stringify(meta, null, 2)\n      )\n    } else if (\n      data.kind === CachedRouteKind.PAGES ||\n      data.kind === CachedRouteKind.APP_PAGE\n    ) {\n      const isAppPath = data.kind === CachedRouteKind.APP_PAGE\n      const htmlPath = this.getFilePath(\n        `${key}.html`,\n        isAppPath ? IncrementalCacheKind.APP_PAGE : IncrementalCacheKind.PAGES\n      )\n      await this.fs.mkdir(path.dirname(htmlPath))\n      await this.fs.writeFile(htmlPath, data.html)\n\n      // Fallbacks don't generate a data file.\n      if (!isFallback) {\n        await this.fs.writeFile(\n          this.getFilePath(\n            `${key}${\n              isAppPath\n                ? ctx.isRoutePPREnabled\n                  ? RSC_PREFETCH_SUFFIX\n                  : RSC_SUFFIX\n                : NEXT_DATA_SUFFIX\n            }`,\n            isAppPath\n              ? IncrementalCacheKind.APP_PAGE\n              : IncrementalCacheKind.PAGES\n          ),\n          isAppPath ? data.rscData : JSON.stringify(data.pageData)\n        )\n      }\n\n      if (data?.kind === CachedRouteKind.APP_PAGE) {\n        const meta: RouteMetadata = {\n          headers: data.headers,\n          status: data.status,\n          postponed: data.postponed,\n          segmentPaths: undefined,\n        }\n\n        await this.fs.writeFile(\n          htmlPath.replace(/\\.html$/, NEXT_META_SUFFIX),\n          JSON.stringify(meta)\n        )\n      }\n    } else if (data.kind === CachedRouteKind.FETCH) {\n      const filePath = this.getFilePath(key, IncrementalCacheKind.FETCH)\n      await this.fs.mkdir(path.dirname(filePath))\n      await this.fs.writeFile(\n        filePath,\n        JSON.stringify({\n          ...data,\n          tags: ctx.tags,\n        })\n      )\n    }\n  }\n\n  private getFilePath(pathname: string, kind: IncrementalCacheKind): string {\n    switch (kind) {\n      case IncrementalCacheKind.FETCH:\n        // we store in .next/cache/fetch-cache so it can be persisted\n        // across deploys\n        return path.join(\n          this.serverDistDir,\n          '..',\n          'cache',\n          'fetch-cache',\n          pathname\n        )\n      case IncrementalCacheKind.PAGES:\n        return path.join(this.serverDistDir, 'pages', pathname)\n      case IncrementalCacheKind.IMAGE:\n      case IncrementalCacheKind.APP_PAGE:\n      case IncrementalCacheKind.APP_ROUTE:\n        return path.join(this.serverDistDir, 'app', pathname)\n      default:\n        throw new Error(`Unexpected file path kind: ${kind}`)\n    }\n  }\n}\n"],"names":["FileSystemCache","memoryCache","constructor","ctx","fs","flushToDisk","serverDistDir","revalidatedTags","debug","process","env","NEXT_PRIVATE_DEBUG_CACHE","maxMemoryCacheSize","console","log","LRUCache","length","value","JSON","kind","CachedRouteKind","REDIRECT","stringify","props","IMAGE","Error","FETCH","data","APP_ROUTE","body","html","APP_PAGE","rscData","pageData","resetRequestCache","revalidateTag","args","tags","tag","tagsManifest","items","revalidatedAt","Date","now","get","key","softTags","isRoutePPREnabled","isFallback","NEXT_RUNTIME","IncrementalCacheKind","filePath","getFilePath","fileData","readFile","mtime","stat","meta","parse","replace","NEXT_META_SUFFIX","cacheEntry","lastModified","getTime","headers","status","parsedData","storedTags","every","includes","set","maybeSegmentData","segmentPaths","segmentData","Map","segmentsDir","RSC_SEGMENTS_DIR_SUFFIX","Promise","all","map","segmentPath","segmentDataFilePath","RSC_SEGMENT_SUFFIX","RSC_PREFETCH_SUFFIX","RSC_SUFFIX","postponed","PAGES","NEXT_DATA_SUFFIX","cacheTags","tagsHeader","NEXT_CACHE_TAGS_HEADER","split","isStale","some","combinedTags","wasRevalidated","undefined","mkdir","path","dirname","writeFile","isAppPath","htmlPath","pathname","join"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1396, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1401, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/to-route.ts"],"sourcesContent":["/**\n * This transforms a URL pathname into a route. It removes any trailing slashes\n * and the `/index` suffix.\n *\n * @param {string} pathname - The URL path that needs to be optimized.\n * @returns {string} - The route\n *\n * @example\n * // returns '/example'\n * toRoute('/example/index/');\n *\n * @example\n * // returns '/example'\n * toRoute('/example/');\n *\n * @example\n * // returns '/'\n * toRoute('/index/');\n *\n * @example\n * // returns '/'\n * toRoute('/');\n */\nexport function toRoute(pathname: string): string {\n  return pathname.replace(/(?:\\/index)?\\/?$/, '') || '/'\n}\n"],"names":["toRoute","pathname","replace"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;CAsBC,GAAA;;;;+BACeA,WAAAA;;;eAAAA;;;AAAT,SAASA,QAAQC,QAAgB;IACtC,OAAOA,SAASC,OAAO,CAAC,oBAAoB,OAAO;AACrD","ignoreList":[0]}},
    {"offset": {"line": 1436, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1441, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/incremental-cache/shared-revalidate-timings.ts"],"sourcesContent":["import type { PrerenderManifest } from '../../../build'\nimport type { DeepReadonly } from '../../../shared/lib/deep-readonly'\nimport type { Revalidate } from '../revalidate'\n\n/**\n * A shared cache of revalidate timings for routes. This cache is used so we\n * don't have to modify the prerender manifest when we want to update the\n * revalidate timings for a route.\n */\nexport class SharedRevalidateTimings {\n  /**\n   * The in-memory cache of revalidate timings for routes. This cache is\n   * populated when the cache is updated with new timings.\n   */\n  private static readonly timings = new Map<string, Revalidate>()\n\n  constructor(\n    /**\n     * The prerender manifest that contains the initial revalidate timings for\n     * routes.\n     */\n    private readonly prerenderManifest: DeepReadonly<\n      Pick<PrerenderManifest, 'routes' | 'dynamicRoutes'>\n    >\n  ) {}\n\n  /**\n   * Try to get the revalidate timings for a route. This will first try to get\n   * the timings from the in-memory cache. If the timings are not present in the\n   * in-memory cache, then the timings will be sourced from the prerender\n   * manifest.\n   *\n   * @param route the route to get the revalidate timings for\n   * @returns the revalidate timings for the route, or undefined if the timings\n   *          are not present in the in-memory cache or the prerender manifest\n   */\n  public get(route: string): Revalidate | undefined {\n    // This is a copy on write cache that is updated when the cache is updated.\n    // If the cache is never written to, then the timings will be sourced from\n    // the prerender manifest.\n    let revalidate = SharedRevalidateTimings.timings.get(route)\n    if (typeof revalidate !== 'undefined') return revalidate\n\n    revalidate = this.prerenderManifest.routes[route]?.initialRevalidateSeconds\n    if (typeof revalidate !== 'undefined') return revalidate\n\n    revalidate = this.prerenderManifest.dynamicRoutes[route]?.fallbackRevalidate\n    if (typeof revalidate !== 'undefined') return revalidate\n\n    return undefined\n  }\n\n  /**\n   * Set the revalidate timings for a route.\n   *\n   * @param route the route to set the revalidate timings for\n   * @param revalidate the revalidate timings for the route\n   */\n  public set(route: string, revalidate: Revalidate) {\n    SharedRevalidateTimings.timings.set(route, revalidate)\n  }\n\n  /**\n   * Clear the in-memory cache of revalidate timings for routes.\n   */\n  public clear() {\n    SharedRevalidateTimings.timings.clear()\n  }\n}\n"],"names":["SharedRevalidateTimings","timings","Map","constructor","prerenderManifest","get","route","revalidate","routes","initialRevalidateSeconds","dynamicRoutes","fallbackRevalidate","undefined","set","clear"],"mappings":";;;;+BASaA,2BAAAA;;;eAAAA;;;AAAN,MAAMA;gBACX;;;GAGC,GAAA,IAAA,CACuBC,OAAAA,GAAU,IAAIC,MAAAA;IAEtCC,YACE;;;KAGC,GACgBC,iBAEhB,CACD;aAHiBA,iBAAAA,GAAAA;IAGhB;IAEH;;;;;;;;;GASC,GACMC,IAAIC,KAAa,EAA0B;YAOnC,sCAGA;QATb,2EAA2E;QAC3E,0EAA0E;QAC1E,0BAA0B;QAC1B,IAAIC,aAAaP,wBAAwBC,OAAO,CAACI,GAAG,CAACC;QACrD,IAAI,OAAOC,eAAe,aAAa,OAAOA;QAE9CA,aAAAA,CAAa,uCAAA,IAAI,CAACH,iBAAiB,CAACI,MAAM,CAACF,MAAM,KAAA,OAAA,KAAA,IAApC,qCAAsCG,wBAAwB;QAC3E,IAAI,OAAOF,eAAe,aAAa,OAAOA;QAE9CA,aAAAA,CAAa,8CAAA,IAAI,CAACH,iBAAiB,CAACM,aAAa,CAACJ,MAAM,KAAA,OAAA,KAAA,IAA3C,4CAA6CK,kBAAkB;QAC5E,IAAI,OAAOJ,eAAe,aAAa,OAAOA;QAE9C,OAAOK;IACT;IAEA;;;;;GAKC,GACMC,IAAIP,KAAa,EAAEC,UAAsB,EAAE;QAChDP,wBAAwBC,OAAO,CAACY,GAAG,CAACP,OAAOC;IAC7C;IAEA;;GAEC,GACMO,QAAQ;QACbd,wBAAwBC,OAAO,CAACa,KAAK;IACvC;AACF","ignoreList":[0]}},
    {"offset": {"line": 1498, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1503, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/incremental-cache/index.ts"],"sourcesContent":["import type { CacheFs } from '../../../shared/lib/utils'\nimport type { PrerenderManifest } from '../../../build'\nimport {\n  type IncrementalCacheValue,\n  type IncrementalCacheEntry,\n  type IncrementalCache as IncrementalCacheType,\n  IncrementalCacheKind,\n  CachedRouteKind,\n} from '../../response-cache'\nimport type { Revalidate } from '../revalidate'\nimport type { DeepReadonly } from '../../../shared/lib/deep-readonly'\n\nimport FetchCache from './fetch-cache'\nimport FileSystemCache from './file-system-cache'\nimport { normalizePagePath } from '../../../shared/lib/page-path/normalize-page-path'\n\nimport {\n  CACHE_ONE_YEAR,\n  NEXT_CACHE_REVALIDATED_TAGS_HEADER,\n  NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER,\n  PRERENDER_REVALIDATE_HEADER,\n} from '../../../lib/constants'\nimport { toRoute } from '../to-route'\nimport { SharedRevalidateTimings } from './shared-revalidate-timings'\nimport { workUnitAsyncStorageInstance } from '../../app-render/work-unit-async-storage-instance'\nimport {\n  getPrerenderResumeDataCache,\n  getRenderResumeDataCache,\n} from '../../app-render/work-unit-async-storage.external'\n\nexport interface CacheHandlerContext {\n  fs?: CacheFs\n  dev?: boolean\n  flushToDisk?: boolean\n  serverDistDir?: string\n  maxMemoryCacheSize?: number\n  fetchCacheKeyPrefix?: string\n  prerenderManifest?: PrerenderManifest\n  revalidatedTags: string[]\n  _requestHeaders: IncrementalCache['requestHeaders']\n}\n\nexport interface CacheHandlerValue {\n  lastModified?: number\n  age?: number\n  cacheState?: string\n  value: IncrementalCacheValue | null\n}\n\nexport class CacheHandler {\n  // eslint-disable-next-line\n  constructor(_ctx: CacheHandlerContext) {}\n\n  public async get(\n    ..._args: Parameters<IncrementalCache['get']>\n  ): Promise<CacheHandlerValue | null> {\n    return {} as any\n  }\n\n  public async set(\n    ..._args: Parameters<IncrementalCache['set']>\n  ): Promise<void> {}\n\n  public async revalidateTag(\n    ..._args: Parameters<IncrementalCache['revalidateTag']>\n  ): Promise<void> {}\n\n  public resetRequestCache(): void {}\n}\n\nexport class IncrementalCache implements IncrementalCacheType {\n  readonly dev?: boolean\n  readonly disableForTestmode?: boolean\n  readonly cacheHandler?: CacheHandler\n  readonly hasCustomCacheHandler: boolean\n  readonly prerenderManifest: DeepReadonly<PrerenderManifest>\n  readonly requestHeaders: Record<string, undefined | string | string[]>\n  readonly requestProtocol?: 'http' | 'https'\n  readonly allowedRevalidateHeaderKeys?: string[]\n  readonly minimalMode?: boolean\n  readonly fetchCacheKeyPrefix?: string\n  readonly revalidatedTags?: string[]\n  readonly isOnDemandRevalidate?: boolean\n  readonly hasDynamicIO?: boolean\n\n  private readonly locks = new Map<string, Promise<void>>()\n\n  /**\n   * The revalidate timings for routes. This will source the timings from the\n   * prerender manifest until the in-memory cache is updated with new timings.\n   */\n  private readonly revalidateTimings: SharedRevalidateTimings\n\n  constructor({\n    fs,\n    dev,\n    dynamicIO,\n    flushToDisk,\n    fetchCache,\n    minimalMode,\n    serverDistDir,\n    requestHeaders,\n    requestProtocol,\n    maxMemoryCacheSize,\n    getPrerenderManifest,\n    fetchCacheKeyPrefix,\n    CurCacheHandler,\n    allowedRevalidateHeaderKeys,\n  }: {\n    fs?: CacheFs\n    dev: boolean\n    dynamicIO: boolean\n    fetchCache?: boolean\n    minimalMode?: boolean\n    serverDistDir?: string\n    flushToDisk?: boolean\n    requestProtocol?: 'http' | 'https'\n    allowedRevalidateHeaderKeys?: string[]\n    requestHeaders: IncrementalCache['requestHeaders']\n    maxMemoryCacheSize?: number\n    getPrerenderManifest: () => DeepReadonly<PrerenderManifest>\n    fetchCacheKeyPrefix?: string\n    CurCacheHandler?: typeof CacheHandler\n  }) {\n    const debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE\n    this.hasCustomCacheHandler = Boolean(CurCacheHandler)\n\n    const cacheHandlersSymbol = Symbol.for('@next/cache-handlers')\n    const _globalThis: typeof globalThis & {\n      [cacheHandlersSymbol]?: {\n        FetchCache?: typeof CacheHandler\n      }\n    } = globalThis\n\n    if (!CurCacheHandler) {\n      // if we have a global cache handler available leverage it\n      const globalCacheHandler = _globalThis[cacheHandlersSymbol]\n\n      if (globalCacheHandler?.FetchCache) {\n        CurCacheHandler = globalCacheHandler.FetchCache\n      } else {\n        if (fs && serverDistDir) {\n          if (debug) {\n            console.log('using filesystem cache handler')\n          }\n          CurCacheHandler = FileSystemCache\n        }\n        if (\n          FetchCache.isAvailable({ _requestHeaders: requestHeaders }) &&\n          minimalMode &&\n          fetchCache\n        ) {\n          if (debug) {\n            console.log('using fetch cache handler')\n          }\n          CurCacheHandler = FetchCache\n        }\n      }\n    } else if (debug) {\n      console.log('using custom cache handler', CurCacheHandler.name)\n    }\n\n    if (process.env.__NEXT_TEST_MAX_ISR_CACHE) {\n      // Allow cache size to be overridden for testing purposes\n      maxMemoryCacheSize = parseInt(process.env.__NEXT_TEST_MAX_ISR_CACHE, 10)\n    }\n    this.dev = dev\n    this.hasDynamicIO = dynamicIO\n    this.disableForTestmode = process.env.NEXT_PRIVATE_TEST_PROXY === 'true'\n    // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n    // because we replace this.minimalMode to true in production bundles.\n    const minimalModeKey = 'minimalMode'\n    this[minimalModeKey] = minimalMode\n    this.requestHeaders = requestHeaders\n    this.requestProtocol = requestProtocol\n    this.allowedRevalidateHeaderKeys = allowedRevalidateHeaderKeys\n    this.prerenderManifest = getPrerenderManifest()\n    this.revalidateTimings = new SharedRevalidateTimings(this.prerenderManifest)\n    this.fetchCacheKeyPrefix = fetchCacheKeyPrefix\n    let revalidatedTags: string[] = []\n\n    if (\n      requestHeaders[PRERENDER_REVALIDATE_HEADER] ===\n      this.prerenderManifest?.preview?.previewModeId\n    ) {\n      this.isOnDemandRevalidate = true\n    }\n\n    if (\n      minimalMode &&\n      typeof requestHeaders[NEXT_CACHE_REVALIDATED_TAGS_HEADER] === 'string' &&\n      requestHeaders[NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER] ===\n        this.prerenderManifest?.preview?.previewModeId\n    ) {\n      revalidatedTags =\n        requestHeaders[NEXT_CACHE_REVALIDATED_TAGS_HEADER].split(',')\n    }\n\n    if (CurCacheHandler) {\n      this.cacheHandler = new CurCacheHandler({\n        dev,\n        fs,\n        flushToDisk,\n        serverDistDir,\n        revalidatedTags,\n        maxMemoryCacheSize,\n        _requestHeaders: requestHeaders,\n        fetchCacheKeyPrefix,\n      })\n    }\n  }\n\n  private calculateRevalidate(\n    pathname: string,\n    fromTime: number,\n    dev: boolean,\n    isFallback: boolean | undefined\n  ): Revalidate {\n    // in development we don't have a prerender-manifest\n    // and default to always revalidating to allow easier debugging\n    if (dev)\n      return Math.floor(performance.timeOrigin + performance.now() - 1000)\n\n    // if an entry isn't present in routes we fallback to a default\n    // of revalidating after 1 second unless it's a fallback request.\n    const initialRevalidateSeconds =\n      this.revalidateTimings.get(toRoute(pathname)) ?? (isFallback ? false : 1)\n\n    const revalidateAfter =\n      typeof initialRevalidateSeconds === 'number'\n        ? initialRevalidateSeconds * 1000 + fromTime\n        : initialRevalidateSeconds\n\n    return revalidateAfter\n  }\n\n  _getPathname(pathname: string, fetchCache?: boolean) {\n    return fetchCache ? pathname : normalizePagePath(pathname)\n  }\n\n  resetRequestCache() {\n    this.cacheHandler?.resetRequestCache?.()\n  }\n\n  async lock(cacheKey: string) {\n    let unlockNext: () => Promise<void> = () => Promise.resolve()\n    const existingLock = this.locks.get(cacheKey)\n\n    if (existingLock) {\n      await existingLock\n    }\n\n    const newLock = new Promise<void>((resolve) => {\n      unlockNext = async () => {\n        resolve()\n        this.locks.delete(cacheKey) // Remove the lock upon release\n      }\n    })\n\n    this.locks.set(cacheKey, newLock)\n    return unlockNext\n  }\n\n  async revalidateTag(tags: string | string[]): Promise<void> {\n    return this.cacheHandler?.revalidateTag?.(tags)\n  }\n\n  // x-ref: https://github.com/facebook/react/blob/2655c9354d8e1c54ba888444220f63e836925caa/packages/react/src/ReactFetch.js#L23\n  async generateCacheKey(\n    url: string,\n    init: RequestInit | Request = {}\n  ): Promise<string> {\n    // this should be bumped anytime a fix is made to cache entries\n    // that should bust the cache\n    const MAIN_KEY_PREFIX = 'v3'\n\n    const bodyChunks: string[] = []\n\n    const encoder = new TextEncoder()\n    const decoder = new TextDecoder()\n\n    if (init.body) {\n      // handle ReadableStream body\n      if (typeof (init.body as any).getReader === 'function') {\n        const readableBody = init.body as ReadableStream<Uint8Array | string>\n\n        const chunks: Uint8Array[] = []\n\n        try {\n          await readableBody.pipeTo(\n            new WritableStream({\n              write(chunk) {\n                if (typeof chunk === 'string') {\n                  chunks.push(encoder.encode(chunk))\n                  bodyChunks.push(chunk)\n                } else {\n                  chunks.push(chunk)\n                  bodyChunks.push(decoder.decode(chunk, { stream: true }))\n                }\n              },\n            })\n          )\n\n          // Flush the decoder.\n          bodyChunks.push(decoder.decode())\n\n          // Create a new buffer with all the chunks.\n          const length = chunks.reduce((total, arr) => total + arr.length, 0)\n          const arrayBuffer = new Uint8Array(length)\n\n          // Push each of the chunks into the new array buffer.\n          let offset = 0\n          for (const chunk of chunks) {\n            arrayBuffer.set(chunk, offset)\n            offset += chunk.length\n          }\n\n          ;(init as any)._ogBody = arrayBuffer\n        } catch (err) {\n          console.error('Problem reading body', err)\n        }\n      } // handle FormData or URLSearchParams bodies\n      else if (typeof (init.body as any).keys === 'function') {\n        const formData = init.body as FormData\n        ;(init as any)._ogBody = init.body\n        for (const key of new Set([...formData.keys()])) {\n          const values = formData.getAll(key)\n          bodyChunks.push(\n            `${key}=${(\n              await Promise.all(\n                values.map(async (val) => {\n                  if (typeof val === 'string') {\n                    return val\n                  } else {\n                    return await val.text()\n                  }\n                })\n              )\n            ).join(',')}`\n          )\n        }\n        // handle blob body\n      } else if (typeof (init.body as any).arrayBuffer === 'function') {\n        const blob = init.body as Blob\n        const arrayBuffer = await blob.arrayBuffer()\n        bodyChunks.push(await blob.text())\n        ;(init as any)._ogBody = new Blob([arrayBuffer], { type: blob.type })\n      } else if (typeof init.body === 'string') {\n        bodyChunks.push(init.body)\n        ;(init as any)._ogBody = init.body\n      }\n    }\n\n    const headers =\n      typeof (init.headers || {}).keys === 'function'\n        ? Object.fromEntries(init.headers as Headers)\n        : Object.assign({}, init.headers)\n\n    if ('traceparent' in headers) delete headers['traceparent']\n\n    const cacheString = JSON.stringify([\n      MAIN_KEY_PREFIX,\n      this.fetchCacheKeyPrefix || '',\n      url,\n      init.method,\n      headers,\n      init.mode,\n      init.redirect,\n      init.credentials,\n      init.referrer,\n      init.referrerPolicy,\n      init.integrity,\n      init.cache,\n      bodyChunks,\n    ])\n\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      function bufferToHex(buffer: ArrayBuffer): string {\n        return Array.prototype.map\n          .call(new Uint8Array(buffer), (b) => b.toString(16).padStart(2, '0'))\n          .join('')\n      }\n      const buffer = encoder.encode(cacheString)\n      return bufferToHex(await crypto.subtle.digest('SHA-256', buffer))\n    } else {\n      const crypto = require('crypto') as typeof import('crypto')\n      return crypto.createHash('sha256').update(cacheString).digest('hex')\n    }\n  }\n\n  // get data from cache if available\n  async get(\n    cacheKey: string,\n    ctx: {\n      kind: IncrementalCacheKind\n      revalidate?: Revalidate\n      fetchUrl?: string\n      fetchIdx?: number\n      tags?: string[]\n      softTags?: string[]\n      isRoutePPREnabled?: boolean\n      isFallback: boolean | undefined\n    }\n  ): Promise<IncrementalCacheEntry | null> {\n    // unlike other caches if we have a cacheScope we use it even if\n    // testmode would normally disable it or if requestHeaders say 'no-cache'.\n    if (this.hasDynamicIO && ctx.kind === IncrementalCacheKind.FETCH) {\n      const workUnitStore = workUnitAsyncStorageInstance.getStore()\n      const resumeDataCache = workUnitStore\n        ? getRenderResumeDataCache(workUnitStore)\n        : null\n      if (resumeDataCache) {\n        const memoryCacheData = resumeDataCache.fetch.get(cacheKey)\n        if (memoryCacheData?.kind === CachedRouteKind.FETCH) {\n          return {\n            isStale: false,\n            value: memoryCacheData,\n            revalidateAfter: false,\n            isFallback: false,\n          }\n        }\n      }\n    }\n\n    // we don't leverage the prerender cache in dev mode\n    // so that getStaticProps is always called for easier debugging\n    if (\n      this.disableForTestmode ||\n      (this.dev &&\n        (ctx.kind !== IncrementalCacheKind.FETCH ||\n          this.requestHeaders['cache-control'] === 'no-cache'))\n    ) {\n      return null\n    }\n\n    const { isFallback } = ctx\n\n    cacheKey = this._getPathname(\n      cacheKey,\n      ctx.kind === IncrementalCacheKind.FETCH\n    )\n    let entry: IncrementalCacheEntry | null = null\n    let revalidate = ctx.revalidate\n\n    const cacheData = await this.cacheHandler?.get(cacheKey, ctx)\n\n    if (cacheData?.value?.kind === CachedRouteKind.FETCH) {\n      const combinedTags = [...(ctx.tags || []), ...(ctx.softTags || [])]\n      // if a tag was revalidated we don't return stale data\n      if (\n        combinedTags.some((tag) => {\n          return this.revalidatedTags?.includes(tag)\n        })\n      ) {\n        return null\n      }\n\n      revalidate = revalidate || cacheData.value.revalidate\n      const age =\n        (performance.timeOrigin +\n          performance.now() -\n          (cacheData.lastModified || 0)) /\n        1000\n\n      const isStale = age > revalidate\n      const data = cacheData.value.data\n\n      return {\n        isStale: isStale,\n        value: {\n          kind: CachedRouteKind.FETCH,\n          data,\n          revalidate: revalidate,\n        },\n        revalidateAfter:\n          performance.timeOrigin + performance.now() + revalidate * 1000,\n        isFallback,\n      } satisfies IncrementalCacheEntry\n    }\n\n    const curRevalidate = this.revalidateTimings.get(toRoute(cacheKey))\n\n    let isStale: boolean | -1 | undefined\n    let revalidateAfter: Revalidate\n\n    if (cacheData?.lastModified === -1) {\n      isStale = -1\n      revalidateAfter = -1 * CACHE_ONE_YEAR\n    } else {\n      revalidateAfter = this.calculateRevalidate(\n        cacheKey,\n        cacheData?.lastModified || performance.timeOrigin + performance.now(),\n        this.dev ? ctx.kind !== IncrementalCacheKind.FETCH : false,\n        ctx.isFallback\n      )\n      isStale =\n        revalidateAfter !== false &&\n        revalidateAfter < performance.timeOrigin + performance.now()\n          ? true\n          : undefined\n    }\n\n    if (cacheData) {\n      entry = {\n        isStale,\n        curRevalidate,\n        revalidateAfter,\n        value: cacheData.value,\n        isFallback,\n      }\n    }\n\n    if (\n      !cacheData &&\n      this.prerenderManifest.notFoundRoutes.includes(cacheKey)\n    ) {\n      // for the first hit after starting the server the cache\n      // may not have a way to save notFound: true so if\n      // the prerender-manifest marks this as notFound then we\n      // return that entry and trigger a cache set to give it a\n      // chance to update in-memory entries\n      entry = {\n        isStale,\n        value: null,\n        curRevalidate,\n        revalidateAfter,\n        isFallback,\n      }\n      this.set(cacheKey, entry.value, ctx)\n    }\n    return entry\n  }\n\n  // populate the incremental cache with new data\n  async set(\n    pathname: string,\n    data: IncrementalCacheValue | null,\n    ctx: {\n      revalidate?: Revalidate\n      fetchCache?: boolean\n      fetchUrl?: string\n      fetchIdx?: number\n      tags?: string[]\n      isRoutePPREnabled?: boolean\n      isFallback?: boolean\n    }\n  ) {\n    // Even if we otherwise disable caching for testMode or if no fetchCache is configured\n    // we still always stash results in the cacheScope if one exists. This is because this\n    // is a transient in memory cache that populates caches ahead of a dynamic render in dev mode\n    // to allow the RSC debug info to have the right environment associated to it.\n    if (this.hasDynamicIO && data?.kind === CachedRouteKind.FETCH) {\n      const workUnitStore = workUnitAsyncStorageInstance.getStore()\n      const prerenderResumeDataCache = workUnitStore\n        ? getPrerenderResumeDataCache(workUnitStore)\n        : null\n      if (prerenderResumeDataCache) {\n        prerenderResumeDataCache.fetch.set(pathname, data)\n      }\n    }\n\n    if (this.disableForTestmode || (this.dev && !ctx.fetchCache)) return\n\n    pathname = this._getPathname(pathname, ctx.fetchCache)\n\n    // FetchCache has upper limit of 2MB per-entry currently\n    const itemSize = JSON.stringify(data).length\n    if (\n      ctx.fetchCache &&\n      // we don't show this error/warning when a custom cache handler is being used\n      // as it might not have this limit\n      !this.hasCustomCacheHandler &&\n      itemSize > 2 * 1024 * 1024\n    ) {\n      if (this.dev) {\n        throw new Error(\n          `Failed to set Next.js data cache, items over 2MB can not be cached (${itemSize} bytes)`\n        )\n      }\n      return\n    }\n\n    try {\n      // Set the value for the revalidate seconds so if it changes we can\n      // update the cache with the new value.\n      if (typeof ctx.revalidate !== 'undefined' && !ctx.fetchCache) {\n        this.revalidateTimings.set(toRoute(pathname), ctx.revalidate)\n      }\n\n      await this.cacheHandler?.set(pathname, data, ctx)\n    } catch (error) {\n      console.warn('Failed to update prerender cache for', pathname, error)\n    }\n  }\n}\n"],"names":["CacheHandler","IncrementalCache","constructor","_ctx","get","_args","set","revalidateTag","resetRequestCache","fs","dev","dynamicIO","flushToDisk","fetchCache","minimalMode","serverDistDir","requestHeaders","requestProtocol","maxMemoryCacheSize","getPrerenderManifest","fetchCacheKeyPrefix","CurCacheHandler","allowedRevalidateHeaderKeys","locks","Map","debug","process","env","NEXT_PRIVATE_DEBUG_CACHE","hasCustomCacheHandler","Boolean","cacheHandlersSymbol","Symbol","for","_globalThis","globalThis","globalCacheHandler","FetchCache","console","log","FileSystemCache","isAvailable","_requestHeaders","name","__NEXT_TEST_MAX_ISR_CACHE","parseInt","hasDynamicIO","disableForTestmode","NEXT_PRIVATE_TEST_PROXY","minimalModeKey","prerenderManifest","revalidateTimings","SharedRevalidateTimings","revalidatedTags","PRERENDER_REVALIDATE_HEADER","preview","previewModeId","isOnDemandRevalidate","NEXT_CACHE_REVALIDATED_TAGS_HEADER","NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER","split","cacheHandler","calculateRevalidate","pathname","fromTime","isFallback","Math","floor","performance","timeOrigin","now","initialRevalidateSeconds","toRoute","revalidateAfter","_getPathname","normalizePagePath","lock","cacheKey","unlockNext","Promise","resolve","existingLock","newLock","delete","tags","generateCacheKey","url","init","MAIN_KEY_PREFIX","bodyChunks","encoder","TextEncoder","decoder","TextDecoder","body","getReader","readableBody","chunks","pipeTo","WritableStream","write","chunk","push","encode","decode","stream","length","reduce","total","arr","arrayBuffer","Uint8Array","offset","_ogBody","err","error","keys","formData","key","Set","values","getAll","all","map","val","text","join","blob","Blob","type","headers","Object","fromEntries","assign","cacheString","JSON","stringify","method","mode","redirect","credentials","referrer","referrerPolicy","integrity","cache","NEXT_RUNTIME","bufferToHex","buffer","Array","prototype","call","b","toString","padStart","crypto","subtle","digest","require","createHash","update","ctx","cacheData","kind","IncrementalCacheKind","FETCH","workUnitStore","workUnitAsyncStorageInstance","getStore","resumeDataCache","getRenderResumeDataCache","memoryCacheData","fetch","CachedRouteKind","isStale","value","entry","revalidate","combinedTags","softTags","some","tag","includes","age","lastModified","data","curRevalidate","CACHE_ONE_YEAR","undefined","notFoundRoutes","prerenderResumeDataCache","getPrerenderResumeDataCache","itemSize","Error","warn"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1886, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1891, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/node-fs-methods.ts"],"sourcesContent":["import type { CacheFs } from '../../shared/lib/utils'\n\nimport fs from 'fs'\n\nexport const nodeFs: CacheFs = {\n  existsSync: fs.existsSync,\n  readFile: fs.promises.readFile,\n  readFileSync: fs.readFileSync,\n  writeFile: (f, d) => fs.promises.writeFile(f, d),\n  mkdir: (dir) => fs.promises.mkdir(dir, { recursive: true }),\n  stat: (f) => fs.promises.stat(f),\n}\n"],"names":["nodeFs","existsSync","fs","readFile","promises","readFileSync","writeFile","f","d","mkdir","dir","recursive","stat"],"mappings":";;;;+BAIaA,UAAAA;;;eAAAA;;;2DAFE;;;;;;AAER,MAAMA,SAAkB;IAC7BC,YAAYC,IAAAA,OAAE,CAACD,UAAU;IACzBE,UAAUD,IAAAA,OAAE,CAACE,QAAQ,CAACD,QAAQ;IAC9BE,cAAcH,IAAAA,OAAE,CAACG,YAAY;IAC7BC,WAAW,CAACC,GAAGC,IAAMN,IAAAA,OAAE,CAACE,QAAQ,CAACE,SAAS,CAACC,GAAGC;IAC9CC,OAAO,CAACC,MAAQR,IAAAA,OAAE,CAACE,QAAQ,CAACK,KAAK,CAACC,KAAK;YAAEC,WAAW;QAAK;IACzDC,MAAM,CAACL,IAAML,IAAAA,OAAE,CAACE,QAAQ,CAACQ,IAAI,CAACL;AAChC","ignoreList":[0]}},
    {"offset": {"line": 1917, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1922, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/experimental/ppr.ts"],"sourcesContent":["/**\n * If set to `incremental`, only those leaf pages that export\n * `experimental_ppr = true` will have partial prerendering enabled. If any\n * page exports this value as `false` or does not export it at all will not\n * have partial prerendering enabled. If set to a boolean, it the options for\n * `experimental_ppr` will be ignored.\n */\n\nexport type ExperimentalPPRConfig = boolean | 'incremental'\n\n/**\n * Returns true if partial prerendering is enabled for the application. It does\n * not tell you if a given route has PPR enabled, as that requires analysis of\n * the route's configuration.\n *\n * @see {@link checkIsRoutePPREnabled} - for checking if a specific route has PPR enabled.\n */\nexport function checkIsAppPPREnabled(\n  config: ExperimentalPPRConfig | undefined\n): boolean {\n  // If the config is undefined, partial prerendering is disabled.\n  if (typeof config === 'undefined') return false\n\n  // If the config is a boolean, use it directly.\n  if (typeof config === 'boolean') return config\n\n  // If the config is a string, it must be 'incremental' to enable partial\n  // prerendering.\n  if (config === 'incremental') return true\n\n  return false\n}\n\n/**\n * Returns true if partial prerendering is supported for the current page with\n * the provided app configuration. If the application doesn't have partial\n * prerendering enabled, this function will always return false. If you want to\n * check if the application has partial prerendering enabled\n *\n * @see {@link checkIsAppPPREnabled} for checking if the application has PPR enabled.\n */\nexport function checkIsRoutePPREnabled(\n  config: ExperimentalPPRConfig | undefined,\n  appConfig: {\n    experimental_ppr?: boolean\n  }\n): boolean {\n  // If the config is undefined, partial prerendering is disabled.\n  if (typeof config === 'undefined') return false\n\n  // If the config is a boolean, use it directly.\n  if (typeof config === 'boolean') return config\n\n  // If the config is a string, it must be 'incremental' to enable partial\n  // prerendering.\n  if (config === 'incremental' && appConfig.experimental_ppr === true) {\n    return true\n  }\n\n  return false\n}\n"],"names":["checkIsAppPPREnabled","checkIsRoutePPREnabled","config","appConfig","experimental_ppr"],"mappings":"AAAA;;;;;;CAMC,GAAA;;;;;;;;;;;;;;;IAWeA,oBAAoB,EAAA;eAApBA;;IAwBAC,sBAAsB,EAAA;eAAtBA;;;AAxBT,SAASD,qBACdE,MAAyC;IAEzC,gEAAgE;IAChE,IAAI,OAAOA,WAAW,aAAa,OAAO;IAE1C,+CAA+C;IAC/C,IAAI,OAAOA,WAAW,WAAW,OAAOA;IAExC,wEAAwE;IACxE,gBAAgB;IAChB,IAAIA,WAAW,eAAe,OAAO;IAErC,OAAO;AACT;AAUO,SAASD,uBACdC,MAAyC,EACzCC,SAEC;IAED,gEAAgE;IAChE,IAAI,OAAOD,WAAW,aAAa,OAAO;IAE1C,+CAA+C;IAC/C,IAAI,OAAOA,WAAW,WAAW,OAAOA;IAExC,wEAAwE;IACxE,gBAAgB;IAChB,IAAIA,WAAW,iBAAiBC,UAAUC,gBAAgB,KAAK,MAAM;QACnE,OAAO;IACT;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 1972, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1977, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/app-dir-module.ts"],"sourcesContent":["import type { AppDirModules } from '../../build/webpack/loaders/next-app-loader'\nimport { DEFAULT_SEGMENT_KEY } from '../../shared/lib/segment'\n\n/**\n * LoaderTree is generated in next-app-loader.\n */\nexport type LoaderTree = [\n  segment: string,\n  parallelRoutes: { [parallelRouterKey: string]: LoaderTree },\n  modules: AppDirModules,\n]\n\nexport async function getLayoutOrPageModule(loaderTree: LoaderTree) {\n  const { layout, page, defaultPage } = loaderTree[2]\n  const isLayout = typeof layout !== 'undefined'\n  const isPage = typeof page !== 'undefined'\n  const isDefaultPage =\n    typeof defaultPage !== 'undefined' && loaderTree[0] === DEFAULT_SEGMENT_KEY\n\n  let mod = undefined\n  let modType: 'layout' | 'page' | undefined = undefined\n  let filePath = undefined\n\n  if (isLayout) {\n    mod = await layout[0]()\n    modType = 'layout'\n    filePath = layout[1]\n  } else if (isPage) {\n    mod = await page[0]()\n    modType = 'page'\n    filePath = page[1]\n  } else if (isDefaultPage) {\n    mod = await defaultPage[0]()\n    modType = 'page'\n    filePath = defaultPage[1]\n  }\n\n  return { mod, modType, filePath }\n}\n\nexport async function getComponentTypeModule(\n  loaderTree: LoaderTree,\n  moduleType: 'layout' | 'not-found' | 'forbidden' | 'unauthorized'\n) {\n  const { [moduleType]: module } = loaderTree[2]\n  if (typeof module !== 'undefined') {\n    return await module[0]()\n  }\n  return undefined\n}\n"],"names":["getComponentTypeModule","getLayoutOrPageModule","loaderTree","layout","page","defaultPage","isLayout","isPage","isDefaultPage","DEFAULT_SEGMENT_KEY","mod","undefined","modType","filePath","moduleType","module"],"mappings":";;;;;;;;;;;;;;;IAwCsBA,sBAAsB,EAAA;eAAtBA;;IA5BAC,qBAAqB,EAAA;eAArBA;;;yBAXc;AAW7B,eAAeA,sBAAsBC,UAAsB;IAChE,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAEC,WAAW,EAAE,GAAGH,UAAU,CAAC,EAAE;IACnD,MAAMI,WAAW,OAAOH,WAAW;IACnC,MAAMI,SAAS,OAAOH,SAAS;IAC/B,MAAMI,gBACJ,OAAOH,gBAAgB,eAAeH,UAAU,CAAC,EAAE,KAAKO,SAAAA,mBAAmB;IAE7E,IAAIC,MAAMC;IACV,IAAIC,UAAyCD;IAC7C,IAAIE,WAAWF;IAEf,IAAIL,UAAU;QACZI,MAAM,MAAMP,MAAM,CAAC,EAAE;QACrBS,UAAU;QACVC,WAAWV,MAAM,CAAC,EAAE;IACtB,OAAO,IAAII,QAAQ;QACjBG,MAAM,MAAMN,IAAI,CAAC,EAAE;QACnBQ,UAAU;QACVC,WAAWT,IAAI,CAAC,EAAE;IACpB,OAAO,IAAII,eAAe;QACxBE,MAAM,MAAML,WAAW,CAAC,EAAE;QAC1BO,UAAU;QACVC,WAAWR,WAAW,CAAC,EAAE;IAC3B;IAEA,OAAO;QAAEK;QAAKE;QAASC;IAAS;AAClC;AAEO,eAAeb,uBACpBE,UAAsB,EACtBY,UAAiE;IAEjE,MAAM,EAAE,CAACA,WAAW,EAAEC,OAAM,EAAE,GAAGb,UAAU,CAAC,EAAE;IAC9C,IAAI,OAAOa,YAAW,aAAa;QACjC,OAAO,MAAMA,OAAM,CAAC,EAAE;IACxB;IACA,OAAOJ;AACT","ignoreList":[0]}},
    {"offset": {"line": 2034, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2039, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/utils.ts"],"sourcesContent":["import { parseArgs } from 'node:util'\nimport { InvalidArgumentError } from 'next/dist/compiled/commander'\n\nexport function printAndExit(message: string, code = 1) {\n  if (code === 0) {\n    console.log(message)\n  } else {\n    console.error(message)\n  }\n\n  return process.exit(code)\n}\n\nconst parseNodeArgs = (args: string[]) => {\n  const { values, tokens } = parseArgs({ args, strict: false, tokens: true })\n\n  // For the `NODE_OPTIONS`, we support arguments with values without the `=`\n  // sign. We need to parse them manually.\n  let orphan = null\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i]\n\n    if (token.kind === 'option-terminator') {\n      break\n    }\n\n    // When we encounter an option, if it's value is undefined, we should check\n    // to see if the following tokens are positional parameters. If they are,\n    // then the option is orphaned, and we can assign it.\n    if (token.kind === 'option') {\n      orphan = typeof token.value === 'undefined' ? token : null\n      continue\n    }\n\n    // If the token isn't a positional one, then we can't assign it to the found\n    // orphaned option.\n    if (token.kind !== 'positional') {\n      orphan = null\n      continue\n    }\n\n    // If we don't have an orphan, then we can skip this token.\n    if (!orphan) {\n      continue\n    }\n\n    // If the token is a positional one, and it has a value, so add it to the\n    // values object. If it already exists, append it with a space.\n    if (orphan.name in values && typeof values[orphan.name] === 'string') {\n      values[orphan.name] += ` ${token.value}`\n    } else {\n      values[orphan.name] = token.value\n    }\n  }\n\n  return values\n}\n\n/**\n * Tokenizes the arguments string into an array of strings, supporting quoted\n * values and escaped characters.\n * Converted from: https://github.com/nodejs/node/blob/c29d53c5cfc63c5a876084e788d70c9e87bed880/src/node_options.cc#L1401\n *\n * @param input The arguments string to be tokenized.\n * @returns An array of strings with the tokenized arguments.\n */\nexport const tokenizeArgs = (input: string): string[] => {\n  let args: string[] = []\n  let isInString = false\n  let willStartNewArg = true\n\n  for (let i = 0; i < input.length; i++) {\n    let char = input[i]\n\n    // Skip any escaped characters in strings.\n    if (char === '\\\\' && isInString) {\n      // Ensure we don't have an escape character at the end.\n      if (input.length === i + 1) {\n        throw new Error('Invalid escape character at the end.')\n      }\n\n      // Skip the next character.\n      char = input[++i]\n    }\n    // If we find a space outside of a string, we should start a new argument.\n    else if (char === ' ' && !isInString) {\n      willStartNewArg = true\n      continue\n    }\n\n    // If we find a quote, we should toggle the string flag.\n    else if (char === '\"') {\n      isInString = !isInString\n      continue\n    }\n\n    // If we're starting a new argument, we should add it to the array.\n    if (willStartNewArg) {\n      args.push(char)\n      willStartNewArg = false\n    }\n    // Otherwise, add it to the last argument.\n    else {\n      args[args.length - 1] += char\n    }\n  }\n\n  if (isInString) {\n    throw new Error('Unterminated string')\n  }\n\n  return args\n}\n\n/**\n * Get the node options from the environment variable `NODE_OPTIONS` and returns\n * them as an array of strings.\n *\n * @returns An array of strings with the node options.\n */\nconst getNodeOptionsArgs = () => {\n  if (!process.env.NODE_OPTIONS) return []\n\n  return tokenizeArgs(process.env.NODE_OPTIONS)\n}\n\n/**\n * The debug address is in the form of `[host:]port`. The host is optional.\n */\ntype DebugAddress = {\n  host: string | undefined\n  port: number\n}\n\n/**\n * Formats the debug address into a string.\n */\nexport const formatDebugAddress = ({ host, port }: DebugAddress): string => {\n  if (host) return `${host}:${port}`\n  return `${port}`\n}\n\n/**\n * Get's the debug address from the `NODE_OPTIONS` environment variable. If the\n * address is not found, it returns the default host (`undefined`) and port\n * (`9229`).\n *\n * @returns An object with the host and port of the debug address.\n */\nexport const getParsedDebugAddress = (): DebugAddress => {\n  const args = getNodeOptionsArgs()\n  if (args.length === 0) return { host: undefined, port: 9229 }\n\n  const parsed = parseNodeArgs(args)\n\n  // We expect to find the debug port in one of these options. The first one\n  // found will be used.\n  const address =\n    parsed.inspect ?? parsed['inspect-brk'] ?? parsed['inspect_brk']\n\n  if (!address || typeof address !== 'string') {\n    return { host: undefined, port: 9229 }\n  }\n\n  // The address is in the form of `[host:]port`. Let's parse the address.\n  if (address.includes(':')) {\n    const [host, port] = address.split(':')\n    return { host, port: parseInt(port, 10) }\n  }\n\n  return { host: undefined, port: parseInt(address, 10) }\n}\n\n/**\n * Get the debug address from the `NODE_OPTIONS` environment variable and format\n * it into a string.\n *\n * @returns A string with the formatted debug address.\n */\nexport const getFormattedDebugAddress = () =>\n  formatDebugAddress(getParsedDebugAddress())\n\n/**\n * Stringify the arguments to be used in a command line. It will ignore any\n * argument that has a value of `undefined`.\n *\n * @param args The arguments to be stringified.\n * @returns A string with the arguments.\n */\nexport function formatNodeOptions(\n  args: Record<string, string | boolean | undefined>\n): string {\n  return Object.entries(args)\n    .map(([key, value]) => {\n      if (value === true) {\n        return `--${key}`\n      }\n\n      if (value) {\n        return `--${key}=${\n          // Values with spaces need to be quoted. We use JSON.stringify to\n          // also escape any nested quotes.\n          value.includes(' ') && !value.startsWith('\"')\n            ? JSON.stringify(value)\n            : value\n        }`\n      }\n\n      return null\n    })\n    .filter((arg) => arg !== null)\n    .join(' ')\n}\n\n/**\n * Get the node options from the `NODE_OPTIONS` environment variable and parse\n * them into an object without the inspect options.\n *\n * @returns An object with the parsed node options.\n */\nexport function getParsedNodeOptionsWithoutInspect() {\n  const args = getNodeOptionsArgs()\n  if (args.length === 0) return {}\n\n  const parsed = parseNodeArgs(args)\n\n  // Remove inspect options.\n  delete parsed.inspect\n  delete parsed['inspect-brk']\n  delete parsed['inspect_brk']\n\n  return parsed\n}\n\n/**\n * Get the node options from the `NODE_OPTIONS` environment variable and format\n * them into a string without the inspect options.\n *\n * @returns A string with the formatted node options.\n */\nexport function getFormattedNodeOptionsWithoutInspect() {\n  const args = getParsedNodeOptionsWithoutInspect()\n  if (Object.keys(args).length === 0) return ''\n\n  return formatNodeOptions(args)\n}\n\n/**\n * Check if the value is a valid positive integer and parse it. If it's not, it will throw an error.\n *\n * @param value The value to be parsed.\n */\nexport function parseValidPositiveInteger(value: string): number {\n  const parsedValue = parseInt(value, 10)\n\n  if (isNaN(parsedValue) || !isFinite(parsedValue) || parsedValue < 0) {\n    throw new InvalidArgumentError(`'${value}' is not a non-negative number.`)\n  }\n  return parsedValue\n}\n\nexport const RESTART_EXIT_CODE = 77\n\nexport type NodeInspectType = 'inspect' | 'inspect-brk' | undefined\n\n/**\n * Get the debug type from the `NODE_OPTIONS` environment variable.\n */\nexport function getNodeDebugType(): NodeInspectType {\n  const args = [...process.execArgv, ...getNodeOptionsArgs()]\n  if (args.length === 0) return\n\n  const parsed = parseNodeArgs(args)\n\n  if (parsed.inspect) return 'inspect'\n  if (parsed['inspect-brk'] || parsed['inspect_brk']) return 'inspect-brk'\n}\n\n/**\n * Get the `max-old-space-size` value from the `NODE_OPTIONS` environment\n * variable.\n *\n * @returns The value of the `max-old-space-size` option as a number.\n */\nexport function getMaxOldSpaceSize() {\n  const args = getNodeOptionsArgs()\n  if (args.length === 0) return\n\n  const parsed = parseNodeArgs(args)\n\n  const size = parsed['max-old-space-size'] || parsed['max_old_space_size']\n  if (!size || typeof size !== 'string') return\n\n  return parseInt(size, 10)\n}\n"],"names":["RESTART_EXIT_CODE","formatDebugAddress","formatNodeOptions","getFormattedDebugAddress","getFormattedNodeOptionsWithoutInspect","getMaxOldSpaceSize","getNodeDebugType","getParsedDebugAddress","getParsedNodeOptionsWithoutInspect","parseValidPositiveInteger","printAndExit","tokenizeArgs","message","code","console","log","error","process","exit","parseNodeArgs","args","values","tokens","parseArgs","strict","orphan","i","length","token","kind","value","name","input","isInString","willStartNewArg","char","Error","push","getNodeOptionsArgs","env","NODE_OPTIONS","host","port","undefined","parsed","address","inspect","includes","split","parseInt","Object","entries","map","key","startsWith","JSON","stringify","filter","arg","join","keys","parsedValue","isNaN","isFinite","InvalidArgumentError","execArgv","size"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2282, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2287, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/async-callback-set.ts"],"sourcesContent":["export class AsyncCallbackSet {\n  private callbacks: (() => Promise<void>)[] = []\n\n  public add(callback: () => Promise<void>) {\n    this.callbacks.push(callback)\n  }\n\n  public async runAll(): Promise<void> {\n    if (!this.callbacks.length) {\n      return\n    }\n    const callbacks = this.callbacks\n    this.callbacks = []\n    await Promise.allSettled(\n      callbacks.map(\n        // NOTE: wrapped in an async function to protect against synchronous exceptions\n        async (f) => f()\n      )\n    )\n  }\n}\n"],"names":["AsyncCallbackSet","add","callback","callbacks","push","runAll","length","Promise","allSettled","map","f"],"mappings":";;;;+BAAaA,oBAAAA;;;eAAAA;;;AAAN,MAAMA;IAGJC,IAAIC,QAA6B,EAAE;QACxC,IAAI,CAACC,SAAS,CAACC,IAAI,CAACF;IACtB;IAEA,MAAaG,SAAwB;QACnC,IAAI,CAAC,IAAI,CAACF,SAAS,CAACG,MAAM,EAAE;YAC1B;QACF;QACA,MAAMH,YAAY,IAAI,CAACA,SAAS;QAChC,IAAI,CAACA,SAAS,GAAG,EAAE;QACnB,MAAMI,QAAQC,UAAU,CACtBL,UAAUM,GAAG,CACX,AACA,OAAOC,IAAMA,oEADkE;IAIrF;;aAlBQP,SAAAA,GAAqC,EAAE;;AAmBjD","ignoreList":[0]}},
    {"offset": {"line": 2313, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2318, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/mock-request.ts"],"sourcesContent":["import type {\n  ServerResponse,\n  OutgoingHttpHeaders,\n  OutgoingHttpHeader,\n  IncomingMessage,\n  IncomingHttpHeaders,\n} from 'http'\nimport type { Socket } from 'net'\nimport type { TLSSocket } from 'tls'\n\nimport Stream from 'stream'\nimport {\n  fromNodeOutgoingHttpHeaders,\n  toNodeOutgoingHttpHeaders,\n} from '../web/utils'\n\ninterface MockedRequestOptions {\n  url: string\n  headers: IncomingHttpHeaders\n  method: string\n  readable?: Stream.Readable\n  socket?: Socket | null\n}\n\nexport class MockedRequest extends Stream.Readable implements IncomingMessage {\n  public url: string\n  public readonly statusCode?: number | undefined\n  public readonly statusMessage?: string | undefined\n  public readonly headers: IncomingHttpHeaders\n  public readonly method: string\n\n  // This is hardcoded for now, but can be updated to be configurable if needed.\n  public readonly httpVersion = '1.0'\n  public readonly httpVersionMajor = 1\n  public readonly httpVersionMinor = 0\n\n  private bodyReadable?: Stream.Readable\n\n  // If we don't actually have a socket, we'll just use a mock one that\n  // always returns false for the `encrypted` property and undefined for the\n  // `remoteAddress` property.\n  public socket: Socket = new Proxy<TLSSocket>({} as TLSSocket, {\n    get: (_target, prop) => {\n      if (prop !== 'encrypted' && prop !== 'remoteAddress') {\n        throw new Error('Method not implemented')\n      }\n\n      if (prop === 'remoteAddress') return undefined\n      // For this mock request, always ensure we just respond with the encrypted\n      // set to false to ensure there's no odd leakages.\n      return false\n    },\n  })\n\n  constructor({\n    url,\n    headers,\n    method,\n    socket = null,\n    readable,\n  }: MockedRequestOptions) {\n    super()\n\n    this.url = url\n    this.headers = headers\n    this.method = method\n\n    if (readable) {\n      this.bodyReadable = readable\n      this.bodyReadable.on('end', () => this.emit('end'))\n      this.bodyReadable.on('close', () => this.emit('close'))\n    }\n\n    if (socket) {\n      this.socket = socket\n    }\n  }\n\n  public get headersDistinct(): NodeJS.Dict<string[]> {\n    const headers: NodeJS.Dict<string[]> = {}\n    for (const [key, value] of Object.entries(this.headers)) {\n      if (!value) continue\n\n      headers[key] = Array.isArray(value) ? value : [value]\n    }\n\n    return headers\n  }\n\n  public _read(size: number): void {\n    if (this.bodyReadable) {\n      return this.bodyReadable._read(size)\n    } else {\n      this.emit('end')\n      this.emit('close')\n    }\n  }\n\n  /**\n   * The `connection` property is just an alias for the `socket` property.\n   *\n   * @deprecated — since v13.0.0 - Use socket instead.\n   */\n  public get connection(): Socket {\n    return this.socket\n  }\n\n  // The following methods are not implemented as they are not used in the\n  // Next.js codebase.\n\n  public get aborted(): boolean {\n    throw new Error('Method not implemented')\n  }\n\n  public get complete(): boolean {\n    throw new Error('Method not implemented')\n  }\n\n  public get trailers(): NodeJS.Dict<string> {\n    throw new Error('Method not implemented')\n  }\n\n  public get trailersDistinct(): NodeJS.Dict<string[]> {\n    throw new Error('Method not implemented')\n  }\n\n  public get rawTrailers(): string[] {\n    throw new Error('Method not implemented')\n  }\n\n  public get rawHeaders(): string[] {\n    throw new Error('Method not implemented.')\n  }\n\n  public setTimeout(): this {\n    throw new Error('Method not implemented.')\n  }\n}\n\nexport interface MockedResponseOptions {\n  statusCode?: number\n  socket?: Socket | null\n  headers?: OutgoingHttpHeaders\n  resWriter?: (chunk: Uint8Array | Buffer | string) => boolean\n}\n\nexport class MockedResponse extends Stream.Writable implements ServerResponse {\n  public statusCode: number\n  public statusMessage: string = ''\n  public finished = false\n  public headersSent = false\n  public readonly socket: Socket | null\n\n  /**\n   * A promise that resolves to `true` when the response has been streamed.\n   *\n   * @internal - used internally by Next.js\n   */\n  public readonly hasStreamed: Promise<boolean>\n\n  /**\n   * A list of buffers that have been written to the response.\n   *\n   * @internal - used internally by Next.js\n   */\n  public readonly buffers: Buffer[] = []\n\n  /**\n   * The headers object that contains the headers that were initialized on the\n   * response and any that were added subsequently.\n   *\n   * @internal - used internally by Next.js\n   */\n  public readonly headers: Headers\n\n  private resWriter: MockedResponseOptions['resWriter']\n\n  public readonly headPromise: Promise<void>\n  private headPromiseResolve?: () => void\n\n  constructor(res: MockedResponseOptions = {}) {\n    super()\n\n    this.statusCode = res.statusCode ?? 200\n    this.socket = res.socket ?? null\n    this.headers = res.headers\n      ? fromNodeOutgoingHttpHeaders(res.headers)\n      : new Headers()\n\n    this.headPromise = new Promise<void>((resolve) => {\n      this.headPromiseResolve = resolve\n    })\n\n    // Attach listeners for the `finish`, `end`, and `error` events to the\n    // `MockedResponse` instance.\n    this.hasStreamed = new Promise<boolean>((resolve, reject) => {\n      this.on('finish', () => resolve(true))\n      this.on('end', () => resolve(true))\n      this.on('error', (err) => reject(err))\n    }).then((val) => {\n      this.headPromiseResolve?.()\n      return val\n    })\n\n    if (res.resWriter) {\n      this.resWriter = res.resWriter\n    }\n  }\n\n  public appendHeader(name: string, value: string | string[]): this {\n    const values = Array.isArray(value) ? value : [value]\n    for (const v of values) {\n      this.headers.append(name, v)\n    }\n\n    return this\n  }\n\n  /**\n   * Returns true if the response has been sent, false otherwise.\n   *\n   * @internal - used internally by Next.js\n   */\n  public get isSent() {\n    return this.finished || this.headersSent\n  }\n\n  /**\n   * The `connection` property is just an alias for the `socket` property.\n   *\n   * @deprecated — since v13.0.0 - Use socket instead.\n   */\n  public get connection(): Socket | null {\n    return this.socket\n  }\n\n  public write(chunk: Uint8Array | Buffer | string) {\n    if (this.resWriter) {\n      return this.resWriter(chunk)\n    }\n    this.buffers.push(Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk))\n\n    return true\n  }\n\n  public end() {\n    this.finished = true\n    return super.end(...arguments)\n  }\n\n  /**\n   * This method is a no-op because the `MockedResponse` instance is not\n   * actually connected to a socket. This method is not specified on the\n   * interface type for `ServerResponse` but is called by Node.js.\n   *\n   * @see https://github.com/nodejs/node/pull/7949\n   */\n  public _implicitHeader() {}\n\n  public _write(\n    chunk: Buffer | string,\n    _encoding: string,\n    callback: () => void\n  ) {\n    this.write(chunk)\n\n    // According to Node.js documentation, the callback MUST be invoked to\n    // signal that the write completed successfully. If this callback is not\n    // invoked, the 'finish' event will not be emitted.\n    //\n    // https://nodejs.org/docs/latest-v16.x/api/stream.html#writable_writechunk-encoding-callback\n    callback()\n  }\n\n  public writeHead(\n    statusCode: number,\n    statusMessage?: string | undefined,\n    headers?: OutgoingHttpHeaders | OutgoingHttpHeader[] | undefined\n  ): this\n  public writeHead(\n    statusCode: number,\n    headers?: OutgoingHttpHeaders | OutgoingHttpHeader[] | undefined\n  ): this\n  public writeHead(\n    statusCode: number,\n    statusMessage?:\n      | string\n      | OutgoingHttpHeaders\n      | OutgoingHttpHeader[]\n      | undefined,\n    headers?: OutgoingHttpHeaders | OutgoingHttpHeader[] | undefined\n  ): this {\n    if (!headers && typeof statusMessage !== 'string') {\n      headers = statusMessage\n    } else if (typeof statusMessage === 'string' && statusMessage.length > 0) {\n      this.statusMessage = statusMessage\n    }\n\n    if (headers) {\n      // When headers have been set with response.setHeader(), they will be\n      // merged with any headers passed to response.writeHead(), with the\n      // headers passed to response.writeHead() given precedence.\n      //\n      // https://nodejs.org/api/http.html#responsewriteheadstatuscode-statusmessage-headers\n      //\n      // For this reason, we need to only call `set` to ensure that this will\n      // overwrite any existing headers.\n      if (Array.isArray(headers)) {\n        // headers may be an Array where the keys and values are in the same list.\n        // It is not a list of tuples. So, the even-numbered offsets are key\n        // values, and the odd-numbered offsets are the associated values. The\n        // array is in the same format as request.rawHeaders.\n        for (let i = 0; i < headers.length; i += 2) {\n          // The header key is always a string according to the spec.\n          this.setHeader(headers[i] as string, headers[i + 1])\n        }\n      } else {\n        for (const [key, value] of Object.entries(headers)) {\n          // Skip undefined values\n          if (typeof value === 'undefined') continue\n\n          this.setHeader(key, value)\n        }\n      }\n    }\n\n    this.statusCode = statusCode\n    this.headersSent = true\n    this.headPromiseResolve?.()\n\n    return this\n  }\n\n  public hasHeader(name: string): boolean {\n    return this.headers.has(name)\n  }\n\n  public getHeader(name: string): string | undefined {\n    return this.headers.get(name) ?? undefined\n  }\n\n  public getHeaders(): OutgoingHttpHeaders {\n    return toNodeOutgoingHttpHeaders(this.headers)\n  }\n\n  public getHeaderNames(): string[] {\n    return Array.from(this.headers.keys())\n  }\n\n  public setHeader(name: string, value: OutgoingHttpHeader) {\n    if (Array.isArray(value)) {\n      // Because `set` here should override any existing values, we need to\n      // delete the existing values before setting the new ones via `append`.\n      this.headers.delete(name)\n\n      for (const v of value) {\n        this.headers.append(name, v)\n      }\n    } else if (typeof value === 'number') {\n      this.headers.set(name, value.toString())\n    } else {\n      this.headers.set(name, value)\n    }\n\n    return this\n  }\n\n  public removeHeader(name: string): void {\n    this.headers.delete(name)\n  }\n\n  public flushHeaders(): void {\n    // This is a no-op because we don't actually have a socket to flush the\n    // headers to.\n  }\n\n  // The following methods are not implemented as they are not used in the\n  // Next.js codebase.\n\n  public get strictContentLength(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public writeEarlyHints() {\n    throw new Error('Method not implemented.')\n  }\n\n  public get req(): IncomingMessage {\n    throw new Error('Method not implemented.')\n  }\n\n  public assignSocket() {\n    throw new Error('Method not implemented.')\n  }\n\n  public detachSocket(): void {\n    throw new Error('Method not implemented.')\n  }\n\n  public writeContinue(): void {\n    throw new Error('Method not implemented.')\n  }\n\n  public writeProcessing(): void {\n    throw new Error('Method not implemented.')\n  }\n\n  public get upgrading(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get chunkedEncoding(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get shouldKeepAlive(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get useChunkedEncodingByDefault(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get sendDate(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public setTimeout(): this {\n    throw new Error('Method not implemented.')\n  }\n\n  public addTrailers(): void {\n    throw new Error('Method not implemented.')\n  }\n\n  public setHeaders(): this {\n    throw new Error('Method not implemented.')\n  }\n}\n\ninterface RequestResponseMockerOptions {\n  url: string\n  headers?: IncomingHttpHeaders\n  method?: string\n  bodyReadable?: Stream.Readable\n  resWriter?: (chunk: Uint8Array | Buffer | string) => boolean\n  socket?: Socket | null\n}\n\nexport function createRequestResponseMocks({\n  url,\n  headers = {},\n  method = 'GET',\n  bodyReadable,\n  resWriter,\n  socket = null,\n}: RequestResponseMockerOptions) {\n  return {\n    req: new MockedRequest({\n      url,\n      headers,\n      method,\n      socket,\n      readable: bodyReadable,\n    }),\n    res: new MockedResponse({ socket, resWriter }),\n  }\n}\n"],"names":["MockedRequest","MockedResponse","createRequestResponseMocks","Stream","Readable","constructor","url","headers","method","socket","readable","httpVersion","httpVersionMajor","httpVersionMinor","Proxy","get","_target","prop","Error","undefined","bodyReadable","on","emit","headersDistinct","key","value","Object","entries","Array","isArray","_read","size","connection","aborted","complete","trailers","trailersDistinct","rawTrailers","rawHeaders","setTimeout","Writable","res","statusMessage","finished","headersSent","buffers","statusCode","fromNodeOutgoingHttpHeaders","Headers","headPromise","Promise","resolve","headPromiseResolve","hasStreamed","reject","err","then","val","resWriter","appendHeader","name","values","v","append","isSent","write","chunk","push","Buffer","isBuffer","from","end","arguments","_implicitHeader","_write","_encoding","callback","writeHead","length","i","setHeader","hasHeader","has","getHeader","getHeaders","toNodeOutgoingHttpHeaders","getHeaderNames","keys","delete","set","toString","removeHeader","flushHeaders","strictContentLength","writeEarlyHints","req","assignSocket","detachSocket","writeContinue","writeProcessing","upgrading","chunkedEncoding","shouldKeepAlive","useChunkedEncodingByDefault","sendDate","addTrailers","setHeaders"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2638, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2643, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/etag.ts"],"sourcesContent":["/**\n * FNV-1a Hash implementation\n * @author Travis Webb (tjwebb) <me@traviswebb.com>\n *\n * Ported from https://github.com/tjwebb/fnv-plus/blob/master/index.js\n *\n * Simplified, optimized and add modified for 52 bit, which provides a larger hash space\n * and still making use of Javascript's 53-bit integer space.\n */\nexport const fnv1a52 = (str: string) => {\n  const len = str.length\n  let i = 0,\n    t0 = 0,\n    v0 = 0x2325,\n    t1 = 0,\n    v1 = 0x8422,\n    t2 = 0,\n    v2 = 0x9ce4,\n    t3 = 0,\n    v3 = 0xcbf2\n\n  while (i < len) {\n    v0 ^= str.charCodeAt(i++)\n    t0 = v0 * 435\n    t1 = v1 * 435\n    t2 = v2 * 435\n    t3 = v3 * 435\n    t2 += v0 << 8\n    t3 += v1 << 8\n    t1 += t0 >>> 16\n    v0 = t0 & 65535\n    t2 += t1 >>> 16\n    v1 = t1 & 65535\n    v3 = (t3 + (t2 >>> 16)) & 65535\n    v2 = t2 & 65535\n  }\n\n  return (\n    (v3 & 15) * 281474976710656 +\n    v2 * 4294967296 +\n    v1 * 65536 +\n    (v0 ^ (v3 >> 4))\n  )\n}\n\nexport const generateETag = (payload: string, weak = false) => {\n  const prefix = weak ? 'W/\"' : '\"'\n  return (\n    prefix + fnv1a52(payload).toString(36) + payload.length.toString(36) + '\"'\n  )\n}\n"],"names":["fnv1a52","generateETag","str","len","length","i","t0","v0","t1","v1","t2","v2","t3","v3","charCodeAt","payload","weak","prefix","toString"],"mappings":"AAAA;;;;;;;;CAQC,GAAA;;;;;;;;;;;;;;;IACYA,OAAO,EAAA;eAAPA;;IAoCAC,YAAY,EAAA;eAAZA;;;AApCN,MAAMD,UAAU,CAACE;IACtB,MAAMC,MAAMD,IAAIE,MAAM;IACtB,IAAIC,IAAI,GACNC,KAAK,GACLC,KAAK,QACLC,KAAK,GACLC,KAAK,QACLC,KAAK,GACLC,KAAK,QACLC,KAAK,GACLC,KAAK;IAEP,MAAOR,IAAIF,IAAK;QACdI,MAAML,IAAIY,UAAU,CAACT;QACrBC,KAAKC,KAAK;QACVC,KAAKC,KAAK;QACVC,KAAKC,KAAK;QACVC,KAAKC,KAAK;QACVH,MAAMH,MAAM;QACZK,MAAMH,MAAM;QACZD,MAAMF,OAAO;QACbC,KAAKD,KAAK;QACVI,MAAMF,OAAO;QACbC,KAAKD,KAAK;QACVK,KAAMD,KAAMF,CAAAA,OAAO,EAAC,IAAM;QAC1BC,KAAKD,KAAK;IACZ;IAEA,OACGG,CAAAA,KAAK,EAAC,IAAK,kBACZF,KAAK,aACLF,KAAK,QACJF,CAAAA,KAAMM,MAAM,CAAC;AAElB;AAEO,MAAMZ,eAAe,CAACc,SAAiBC,OAAO,KAAK;IACxD,MAAMC,SAASD,OAAO,QAAQ;IAC9B,OACEC,SAASjB,QAAQe,SAASG,QAAQ,CAAC,MAAMH,QAAQX,MAAM,CAACc,QAAQ,CAAC,MAAM;AAE3E","ignoreList":[0]}},
    {"offset": {"line": 2697, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2702, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/revalidate.ts"],"sourcesContent":["import { CACHE_ONE_YEAR } from '../../lib/constants'\n\n/**\n * The revalidate option used internally for pages. A value of `false` means\n * that the page should not be revalidated. A number means that the page\n * should be revalidated after the given number of seconds (this also includes\n * `1` which means to revalidate after 1 second). A value of `0` is not a valid\n * value for this option.\n */\nexport type Revalidate = number | false\nexport type ExpireTime = number\n\nexport function formatRevalidate({\n  revalidate,\n  expireTime,\n}: {\n  revalidate: Revalidate\n  expireTime?: ExpireTime\n}): string {\n  const swrHeader =\n    typeof revalidate === 'number' && expireTime !== undefined\n      ? revalidate >= expireTime\n        ? ''\n        : `stale-while-revalidate=${expireTime - revalidate}`\n      : 'stale-while-revalidate'\n\n  if (revalidate === 0) {\n    return 'private, no-cache, no-store, max-age=0, must-revalidate'\n  } else if (typeof revalidate === 'number') {\n    return `s-maxage=${revalidate}, ${swrHeader}`\n  }\n\n  return `s-maxage=${CACHE_ONE_YEAR}, ${swrHeader}`\n}\n"],"names":["formatRevalidate","revalidate","expireTime","swrHeader","undefined","CACHE_ONE_YEAR"],"mappings":";;;;+BAYgBA,oBAAAA;;;eAAAA;;;2BAZe;AAYxB,SAASA,iBAAiB,EAC/BC,UAAU,EACVC,UAAU,EAIX;IACC,MAAMC,YACJ,OAAOF,eAAe,YAAYC,eAAeE,YAC7CH,cAAcC,aACZ,KACA,CAAC,uBAAuB,EAAEA,aAAaD,YAAY,GACrD;IAEN,IAAIA,eAAe,GAAG;QACpB,OAAO;IACT,OAAO,IAAI,OAAOA,eAAe,UAAU;QACzC,OAAO,CAAC,SAAS,EAAEA,WAAW,EAAE,EAAEE,WAAW;IAC/C;IAEA,OAAO,CAAC,SAAS,EAAEE,WAAAA,cAAc,CAAC,EAAE,EAAEF,WAAW;AACnD","ignoreList":[0]}},
    {"offset": {"line": 2722, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2727, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/server-action-request-meta.ts"],"sourcesContent":["import type { IncomingMessage } from 'http'\nimport type { BaseNextRequest } from '../base-http'\nimport type { NextRequest } from '../web/exports'\nimport { ACTION_HEADER } from '../../client/components/app-router-headers'\n\nexport function getServerActionRequestMetadata(\n  req: IncomingMessage | BaseNextRequest | NextRequest\n): {\n  actionId: string | null\n  isURLEncodedAction: boolean\n  isMultipartAction: boolean\n  isFetchAction: boolean\n  isServerAction: boolean\n} {\n  let actionId: string | null\n  let contentType: string | null\n\n  if (req.headers instanceof Headers) {\n    actionId = req.headers.get(ACTION_HEADER.toLowerCase()) ?? null\n    contentType = req.headers.get('content-type')\n  } else {\n    actionId = (req.headers[ACTION_HEADER.toLowerCase()] as string) ?? null\n    contentType = req.headers['content-type'] ?? null\n  }\n\n  const isURLEncodedAction = Boolean(\n    req.method === 'POST' && contentType === 'application/x-www-form-urlencoded'\n  )\n  const isMultipartAction = Boolean(\n    req.method === 'POST' && contentType?.startsWith('multipart/form-data')\n  )\n  const isFetchAction = Boolean(\n    actionId !== undefined &&\n      typeof actionId === 'string' &&\n      req.method === 'POST'\n  )\n\n  const isServerAction = Boolean(\n    isFetchAction || isURLEncodedAction || isMultipartAction\n  )\n\n  return {\n    actionId,\n    isURLEncodedAction,\n    isMultipartAction,\n    isFetchAction,\n    isServerAction,\n  }\n}\n\nexport function getIsServerAction(\n  req: IncomingMessage | BaseNextRequest | NextRequest\n): boolean {\n  return getServerActionRequestMetadata(req).isServerAction\n}\n"],"names":["getIsServerAction","getServerActionRequestMetadata","req","actionId","contentType","headers","Headers","get","ACTION_HEADER","toLowerCase","isURLEncodedAction","Boolean","method","isMultipartAction","startsWith","isFetchAction","undefined","isServerAction"],"mappings":";;;;;;;;;;;;;;;IAkDgBA,iBAAiB,EAAA;eAAjBA;;IA7CAC,8BAA8B,EAAA;eAA9BA;;;kCAFc;AAEvB,SAASA,+BACdC,GAAoD;IAQpD,IAAIC;IACJ,IAAIC;IAEJ,IAAIF,IAAIG,OAAO,YAAYC,SAAS;QAClCH,WAAWD,IAAIG,OAAO,CAACE,GAAG,CAACC,kBAAAA,aAAa,CAACC,WAAW,OAAO;QAC3DL,cAAcF,IAAIG,OAAO,CAACE,GAAG,CAAC;IAChC,OAAO;QACLJ,WAAYD,IAAIG,OAAO,CAACG,kBAAAA,aAAa,CAACC,WAAW,GAAG,IAAe;QACnEL,cAAcF,IAAIG,OAAO,CAAC,eAAe,IAAI;IAC/C;IAEA,MAAMK,qBAAqBC,QACzBT,IAAIU,MAAM,KAAK,UAAUR,gBAAgB;IAE3C,MAAMS,oBAAoBF,QACxBT,IAAIU,MAAM,KAAK,UAAA,CAAUR,eAAAA,OAAAA,KAAAA,IAAAA,YAAaU,UAAU,CAAC,sBAAA;IAEnD,MAAMC,gBAAgBJ,QACpBR,aAAaa,aACX,OAAOb,aAAa,YACpBD,IAAIU,MAAM,KAAK;IAGnB,MAAMK,iBAAiBN,QACrBI,iBAAiBL,sBAAsBG;IAGzC,OAAO;QACLV;QACAO;QACAG;QACAE;QACAE;IACF;AACF;AAEO,SAASjB,kBACdE,GAAoD;IAEpD,OAAOD,+BAA+BC,KAAKe,cAAc;AAC3D","ignoreList":[0]}},
    {"offset": {"line": 2775, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2780, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/server-ipc/utils.ts"],"sourcesContent":["export const ipcForbiddenHeaders = [\n  'accept-encoding',\n  'keepalive',\n  'keep-alive',\n  'content-encoding',\n  'transfer-encoding',\n  // https://github.com/nodejs/undici/issues/1470\n  'connection',\n  // marked as unsupported by undici: https://github.com/nodejs/undici/blob/c83b084879fa0bb8e0469d31ec61428ac68160d5/lib/core/request.js#L354\n  'expect',\n]\n\nexport const actionsForbiddenHeaders = [\n  ...ipcForbiddenHeaders,\n  'content-length',\n  'set-cookie',\n]\n\nexport const filterReqHeaders = (\n  headers: Record<string, undefined | string | number | string[]>,\n  forbiddenHeaders: string[]\n) => {\n  // Some browsers are not matching spec and sending Content-Length: 0. This causes issues in undici\n  // https://github.com/nodejs/undici/issues/2046\n  if (headers['content-length'] && headers['content-length'] === '0') {\n    delete headers['content-length']\n  }\n\n  for (const [key, value] of Object.entries(headers)) {\n    if (\n      forbiddenHeaders.includes(key) ||\n      !(Array.isArray(value) || typeof value === 'string')\n    ) {\n      delete headers[key]\n    }\n  }\n  return headers as Record<string, undefined | string | string[]>\n}\n\n// These are headers that are only used internally and should\n// not be honored from the external request\nconst INTERNAL_HEADERS = [\n  'x-middleware-rewrite',\n  'x-middleware-redirect',\n  'x-middleware-set-cookie',\n  'x-middleware-skip',\n  'x-middleware-override-headers',\n  'x-middleware-next',\n  'x-now-route-matches',\n  'x-matched-path',\n]\n\nexport const filterInternalHeaders = (\n  headers: Record<string, undefined | string | string[]>\n) => {\n  for (const header in headers) {\n    if (INTERNAL_HEADERS.includes(header)) {\n      delete headers[header]\n    }\n  }\n}\n"],"names":["actionsForbiddenHeaders","filterInternalHeaders","filterReqHeaders","ipcForbiddenHeaders","headers","forbiddenHeaders","key","value","Object","entries","includes","Array","isArray","INTERNAL_HEADERS","header"],"mappings":";;;;;;;;;;;;;;;;;IAYaA,uBAAuB,EAAA;eAAvBA;;IAwCAC,qBAAqB,EAAA;eAArBA;;IAlCAC,gBAAgB,EAAA;eAAhBA;;IAlBAC,mBAAmB,EAAA;eAAnBA;;;AAAN,MAAMA,sBAAsB;IACjC;IACA;IACA;IACA;IACA;IACA,+CAA+C;IAC/C;IACA,2IAA2I;IAC3I;CACD;AAEM,MAAMH,0BAA0B;OAClCG;IACH;IACA;CACD;AAEM,MAAMD,mBAAmB,CAC9BE,SACAC;IAEA,kGAAkG;IAClG,+CAA+C;IAC/C,IAAID,OAAO,CAAC,iBAAiB,IAAIA,OAAO,CAAC,iBAAiB,KAAK,KAAK;QAClE,OAAOA,OAAO,CAAC,iBAAiB;IAClC;IAEA,KAAK,MAAM,CAACE,KAAKC,MAAM,IAAIC,OAAOC,OAAO,CAACL,SAAU;QAClD,IACEC,iBAAiBK,QAAQ,CAACJ,QAC1B,CAAEK,CAAAA,MAAMC,OAAO,CAACL,UAAU,OAAOA,UAAU,QAAO,GAClD;YACA,OAAOH,OAAO,CAACE,IAAI;QACrB;IACF;IACA,OAAOF;AACT;AAEA,6DAA6D;AAC7D,2CAA2C;AAC3C,MAAMS,mBAAmB;IACvB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAMZ,wBAAwB,CACnCG;IAEA,IAAK,MAAMU,UAAUV,QAAS;QAC5B,IAAIS,iBAAiBH,QAAQ,CAACI,SAAS;YACrC,OAAOV,OAAO,CAACU,OAAO;QACxB;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 2858, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2863, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/trace/utils.ts"],"sourcesContent":["import type { ClientTraceDataEntry } from './tracer'\n\n/**\n * Takes OpenTelemetry client trace data and the `clientTraceMetadata` option configured in the Next.js config (currently\n * experimental) and returns a filtered/allowed list of client trace data entries.\n */\nexport function getTracedMetadata(\n  traceData: ClientTraceDataEntry[],\n  clientTraceMetadata: string[] | undefined\n): ClientTraceDataEntry[] | undefined {\n  if (!clientTraceMetadata) return undefined\n  return traceData.filter(({ key }) => clientTraceMetadata.includes(key))\n}\n"],"names":["getTracedMetadata","traceData","clientTraceMetadata","undefined","filter","key","includes"],"mappings":";;;;+BAMgBA,qBAAAA;;;eAAAA;;;AAAT,SAASA,kBACdC,SAAiC,EACjCC,mBAAyC;IAEzC,IAAI,CAACA,qBAAqB,OAAOC;IACjC,OAAOF,UAAUG,MAAM,CAAC,CAAC,EAAEC,GAAG,EAAE,GAAKH,oBAAoBI,QAAQ,CAACD;AACpE","ignoreList":[0]}},
    {"offset": {"line": 2877, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2882, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/router-utils/is-postpone.ts"],"sourcesContent":["const REACT_POSTPONE_TYPE: symbol = Symbol.for('react.postpone')\n\nexport function isPostpone(error: any): boolean {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    error.$$typeof === REACT_POSTPONE_TYPE\n  )\n}\n"],"names":["isPostpone","REACT_POSTPONE_TYPE","Symbol","for","error","$$typeof"],"mappings":";;;;+BAEgBA,cAAAA;;;eAAAA;;;AAFhB,MAAMC,sBAA8BC,OAAOC,GAAG,CAAC;AAExC,SAASH,WAAWI,KAAU;IACnC,OACE,OAAOA,UAAU,YACjBA,UAAU,QACVA,MAAMC,QAAQ,KAAKJ;AAEvB","ignoreList":[0]}},
    {"offset": {"line": 2896, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2901, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/render-server.ts"],"sourcesContent":["import type { NextServer, RequestHandler, UpgradeHandler } from '../next'\nimport type { DevBundlerService } from './dev-bundler-service'\nimport type { PropagateToWorkersField } from './router-utils/types'\n\nimport next from '../next'\nimport type { Span } from '../../trace'\n\nexport type ServerInitResult = {\n  requestHandler: RequestHandler\n  upgradeHandler: UpgradeHandler\n  server: NextServer\n}\n\nlet initializations: Record<string, Promise<ServerInitResult> | undefined> = {}\n\nlet sandboxContext: undefined | typeof import('../web/sandbox/context')\n\nif (process.env.NODE_ENV !== 'production') {\n  sandboxContext = require('../web/sandbox/context')\n}\n\nexport function clearAllModuleContexts() {\n  return sandboxContext?.clearAllModuleContexts()\n}\n\nexport function clearModuleContext(target: string) {\n  return sandboxContext?.clearModuleContext(target)\n}\n\nexport async function getServerField(\n  dir: string,\n  field: PropagateToWorkersField\n) {\n  const initialization = await initializations[dir]\n  if (!initialization) {\n    throw new Error('Invariant cant propagate server field, no app initialized')\n  }\n  const { server } = initialization\n  let wrappedServer = server['server']! // NextServer.server is private\n  return wrappedServer[field as keyof typeof wrappedServer]\n}\n\nexport async function propagateServerField(\n  dir: string,\n  field: PropagateToWorkersField,\n  value: any\n) {\n  const initialization = await initializations[dir]\n  if (!initialization) {\n    throw new Error('Invariant cant propagate server field, no app initialized')\n  }\n  const { server } = initialization\n  let wrappedServer = server['server']\n  const _field = field as keyof NonNullable<typeof wrappedServer>\n\n  if (wrappedServer) {\n    if (typeof wrappedServer[_field] === 'function') {\n      // @ts-expect-error\n      await wrappedServer[_field].apply(\n        wrappedServer,\n        Array.isArray(value) ? value : []\n      )\n    } else {\n      // @ts-expect-error\n      wrappedServer[_field] = value\n    }\n  }\n}\n\nasync function initializeImpl(opts: {\n  dir: string\n  port: number\n  dev: boolean\n  minimalMode?: boolean\n  hostname?: string\n  keepAliveTimeout?: number\n  serverFields?: any\n  server?: any\n  experimentalTestProxy: boolean\n  experimentalHttpsServer: boolean\n  _ipcPort?: string\n  _ipcKey?: string\n  bundlerService: DevBundlerService | undefined\n  startServerSpan: Span | undefined\n  quiet?: boolean\n  onDevServerCleanup: ((listener: () => Promise<void>) => void) | undefined\n}): Promise<ServerInitResult> {\n  const type = process.env.__NEXT_PRIVATE_RENDER_WORKER\n  if (type) {\n    process.title = 'next-render-worker-' + type\n  }\n\n  let requestHandler: RequestHandler\n  let upgradeHandler: UpgradeHandler\n\n  const server = next({\n    ...opts,\n    hostname: opts.hostname || 'localhost',\n    customServer: false,\n    httpServer: opts.server,\n    port: opts.port,\n  }) as NextServer // should return a NextServer when `customServer: false`\n  requestHandler = server.getRequestHandler()\n  upgradeHandler = server.getUpgradeHandler()\n\n  await server.prepare(opts.serverFields)\n\n  return {\n    requestHandler,\n    upgradeHandler,\n    server,\n  }\n}\n\nexport async function initialize(\n  opts: Parameters<typeof initializeImpl>[0]\n): Promise<ServerInitResult> {\n  // if we already setup the server return as we only need to do\n  // this on first worker boot\n  if (initializations[opts.dir]) {\n    return initializations[opts.dir]!\n  }\n  return (initializations[opts.dir] = initializeImpl(opts))\n}\n"],"names":["clearAllModuleContexts","clearModuleContext","getServerField","initialize","propagateServerField","initializations","sandboxContext","process","env","NODE_ENV","require","target","dir","field","initialization","Error","server","wrappedServer","value","_field","apply","Array","isArray","initializeImpl","opts","type","__NEXT_PRIVATE_RENDER_WORKER","title","requestHandler","upgradeHandler","next","hostname","customServer","httpServer","port","getRequestHandler","getUpgradeHandler","prepare","serverFields"],"mappings":";;;;;;;;;;;;;;;;;;IAqBgBA,sBAAsB,EAAA;eAAtBA;;IAIAC,kBAAkB,EAAA;eAAlBA;;IAIMC,cAAc,EAAA;eAAdA;;IAqFAC,UAAU,EAAA;eAAVA;;IAxEAC,oBAAoB,EAAA;eAApBA;;;6DAtCL;;;;;;AASjB,IAAIC,kBAAyE,CAAC;AAE9E,IAAIC;AAEJ,IAAIC,QAAQC,GAAG,CAACC,QAAQ,KAAK,WAAc;IACzCH,iBAAiBI,QAAQ;AAC3B;AAEO,SAASV;IACd,OAAOM,kBAAAA,OAAAA,KAAAA,IAAAA,eAAgBN,sBAAsB;AAC/C;AAEO,SAASC,mBAAmBU,MAAc;IAC/C,OAAOL,kBAAAA,OAAAA,KAAAA,IAAAA,eAAgBL,kBAAkB,CAACU;AAC5C;AAEO,eAAeT,eACpBU,GAAW,EACXC,KAA8B;IAE9B,MAAMC,iBAAiB,MAAMT,eAAe,CAACO,IAAI;IACjD,IAAI,CAACE,gBAAgB;QACnB,MAAM,IAAIC,MAAM;IAClB;IACA,MAAM,EAAEC,MAAM,EAAE,GAAGF;IACnB,IAAIG,gBAAgBD,MAAM,CAAC,UAAW,+BAA+B;;IACrE,OAAOC,aAAa,CAACJ,MAAoC;AAC3D;AAEO,eAAeT,qBACpBQ,GAAW,EACXC,KAA8B,EAC9BK,KAAU;IAEV,MAAMJ,iBAAiB,MAAMT,eAAe,CAACO,IAAI;IACjD,IAAI,CAACE,gBAAgB;QACnB,MAAM,IAAIC,MAAM;IAClB;IACA,MAAM,EAAEC,MAAM,EAAE,GAAGF;IACnB,IAAIG,gBAAgBD,MAAM,CAAC,SAAS;IACpC,MAAMG,SAASN;IAEf,IAAII,eAAe;QACjB,IAAI,OAAOA,aAAa,CAACE,OAAO,KAAK,YAAY;YAC/C,mBAAmB;YACnB,MAAMF,aAAa,CAACE,OAAO,CAACC,KAAK,CAC/BH,eACAI,MAAMC,OAAO,CAACJ,SAASA,QAAQ,EAAE;QAErC,OAAO;YACL,mBAAmB;YACnBD,aAAa,CAACE,OAAO,GAAGD;QAC1B;IACF;AACF;AAEA,eAAeK,eAAeC,IAiB7B;IACC,MAAMC,OAAOlB,QAAQC,GAAG,CAACkB,4BAA4B;IACrD,IAAID,MAAM;QACRlB,QAAQoB,KAAK,GAAG,wBAAwBF;IAC1C;IAEA,IAAIG;IACJ,IAAIC;IAEJ,MAAMb,SAASc,CAAAA,GAAAA,MAAAA,OAAI,EAAC;QAClB,GAAGN,IAAI;QACPO,UAAUP,KAAKO,QAAQ,IAAI;QAC3BC,cAAc;QACdC,YAAYT,KAAKR,MAAM;QACvBkB,MAAMV,KAAKU,IAAI;IACjB,GAAiB,wDAAwD;;IACzEN,iBAAiBZ,OAAOmB,iBAAiB;IACzCN,iBAAiBb,OAAOoB,iBAAiB;IAEzC,MAAMpB,OAAOqB,OAAO,CAACb,KAAKc,YAAY;IAEtC,OAAO;QACLV;QACAC;QACAb;IACF;AACF;AAEO,eAAeb,WACpBqB,IAA0C;IAE1C,8DAA8D;IAC9D,4BAA4B;IAC5B,IAAInB,eAAe,CAACmB,KAAKZ,GAAG,CAAC,EAAE;QAC7B,OAAOP,eAAe,CAACmB,KAAKZ,GAAG,CAAC;IAClC;IACA,OAAQP,eAAe,CAACmB,KAAKZ,GAAG,CAAC,GAAGW,eAAeC;AACrD","ignoreList":[0]}},
    {"offset": {"line": 3012, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3017, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/router-utils/filesystem.ts"],"sourcesContent":["import type {\n  ManifestRoute,\n  PrerenderManifest,\n  RoutesManifest,\n} from '../../../build'\nimport type { NextConfigComplete } from '../../config-shared'\nimport type { MiddlewareManifest } from '../../../build/webpack/plugins/middleware-plugin'\nimport type { UnwrapPromise } from '../../../lib/coalesced-function'\nimport type { PatchMatcher } from '../../../shared/lib/router/utils/path-match'\nimport type { MiddlewareRouteMatch } from '../../../shared/lib/router/utils/middleware-route-matcher'\n\nimport path from 'path'\nimport fs from 'fs/promises'\nimport * as Log from '../../../build/output/log'\nimport setupDebug from 'next/dist/compiled/debug'\nimport { LRUCache } from '../lru-cache'\nimport loadCustomRoutes, { type Rewrite } from '../../../lib/load-custom-routes'\nimport { modifyRouteRegex } from '../../../lib/redirect-status'\nimport { FileType, fileExists } from '../../../lib/file-exists'\nimport { recursiveReadDir } from '../../../lib/recursive-readdir'\nimport { isDynamicRoute } from '../../../shared/lib/router/utils'\nimport { escapeStringRegexp } from '../../../shared/lib/escape-regexp'\nimport { getPathMatch } from '../../../shared/lib/router/utils/path-match'\nimport { getRouteRegex } from '../../../shared/lib/router/utils/route-regex'\nimport { getRouteMatcher } from '../../../shared/lib/router/utils/route-matcher'\nimport { pathHasPrefix } from '../../../shared/lib/router/utils/path-has-prefix'\nimport { normalizeLocalePath } from '../../../shared/lib/i18n/normalize-locale-path'\nimport { removePathPrefix } from '../../../shared/lib/router/utils/remove-path-prefix'\nimport { getMiddlewareRouteMatcher } from '../../../shared/lib/router/utils/middleware-route-matcher'\nimport {\n  APP_PATH_ROUTES_MANIFEST,\n  BUILD_ID_FILE,\n  MIDDLEWARE_MANIFEST,\n  PAGES_MANIFEST,\n  PRERENDER_MANIFEST,\n  ROUTES_MANIFEST,\n} from '../../../shared/lib/constants'\nimport { normalizePathSep } from '../../../shared/lib/page-path/normalize-path-sep'\nimport { normalizeMetadataRoute } from '../../../lib/metadata/get-metadata-route'\nimport { RSCPathnameNormalizer } from '../../normalizers/request/rsc'\nimport { PrefetchRSCPathnameNormalizer } from '../../normalizers/request/prefetch-rsc'\nimport { encodeURIPath } from '../../../shared/lib/encode-uri-path'\n\nexport type FsOutput = {\n  type:\n    | 'appFile'\n    | 'pageFile'\n    | 'nextImage'\n    | 'publicFolder'\n    | 'nextStaticFolder'\n    | 'legacyStaticFolder'\n    | 'devVirtualFsItem'\n\n  itemPath: string\n  fsPath?: string\n  itemsRoot?: string\n  locale?: string\n}\n\nconst debug = setupDebug('next:router-server:filesystem')\n\nexport type FilesystemDynamicRoute = ManifestRoute & {\n  /**\n   * The path matcher that can be used to match paths against this route.\n   */\n  match: PatchMatcher\n}\n\nexport const buildCustomRoute = <T>(\n  type: 'redirect' | 'header' | 'rewrite' | 'before_files_rewrite',\n  item: T & { source: string },\n  basePath?: string,\n  caseSensitive?: boolean\n): T & { match: PatchMatcher; check?: boolean } => {\n  const restrictedRedirectPaths = ['/_next'].map((p) =>\n    basePath ? `${basePath}${p}` : p\n  )\n  const match = getPathMatch(item.source, {\n    strict: true,\n    removeUnnamedParams: true,\n    regexModifier: !(item as any).internal\n      ? (regex: string) =>\n          modifyRouteRegex(\n            regex,\n            type === 'redirect' ? restrictedRedirectPaths : undefined\n          )\n      : undefined,\n    sensitive: caseSensitive,\n  })\n  return {\n    ...item,\n    ...(type === 'rewrite' ? { check: true } : {}),\n    match,\n  }\n}\n\nexport async function setupFsCheck(opts: {\n  dir: string\n  dev: boolean\n  minimalMode?: boolean\n  config: NextConfigComplete\n  addDevWatcherCallback?: (\n    arg: (files: Map<string, { timestamp: number }>) => void\n  ) => void\n}) {\n  const getItemsLru = !opts.dev\n    ? new LRUCache<FsOutput | null>(1024 * 1024, function length(value) {\n        if (!value) return 0\n        return (\n          (value.fsPath || '').length +\n          value.itemPath.length +\n          value.type.length\n        )\n      })\n    : undefined\n\n  // routes that have _next/data endpoints (SSG/SSP)\n  const nextDataRoutes = new Set<string>()\n  const publicFolderItems = new Set<string>()\n  const nextStaticFolderItems = new Set<string>()\n  const legacyStaticFolderItems = new Set<string>()\n\n  const appFiles = new Set<string>()\n  const pageFiles = new Set<string>()\n  let dynamicRoutes: FilesystemDynamicRoute[] = []\n\n  let middlewareMatcher:\n    | ReturnType<typeof getMiddlewareRouteMatcher>\n    | undefined = () => false\n\n  const distDir = path.join(opts.dir, opts.config.distDir)\n  const publicFolderPath = path.join(opts.dir, 'public')\n  const nextStaticFolderPath = path.join(distDir, 'static')\n  const legacyStaticFolderPath = path.join(opts.dir, 'static')\n  let customRoutes: UnwrapPromise<ReturnType<typeof loadCustomRoutes>> = {\n    redirects: [],\n    rewrites: {\n      beforeFiles: [],\n      afterFiles: [],\n      fallback: [],\n    },\n    headers: [],\n  }\n  let buildId = 'development'\n  let prerenderManifest: PrerenderManifest\n\n  if (!opts.dev) {\n    const buildIdPath = path.join(opts.dir, opts.config.distDir, BUILD_ID_FILE)\n    try {\n      buildId = await fs.readFile(buildIdPath, 'utf8')\n    } catch (err: any) {\n      if (err.code !== 'ENOENT') throw err\n      throw new Error(\n        `Could not find a production build in the '${opts.config.distDir}' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id`\n      )\n    }\n\n    try {\n      for (const file of await recursiveReadDir(publicFolderPath)) {\n        // Ensure filename is encoded and normalized.\n        publicFolderItems.add(encodeURIPath(normalizePathSep(file)))\n      }\n    } catch (err: any) {\n      if (err.code !== 'ENOENT') {\n        throw err\n      }\n    }\n\n    try {\n      for (const file of await recursiveReadDir(legacyStaticFolderPath)) {\n        // Ensure filename is encoded and normalized.\n        legacyStaticFolderItems.add(encodeURIPath(normalizePathSep(file)))\n      }\n      Log.warn(\n        `The static directory has been deprecated in favor of the public directory. https://nextjs.org/docs/messages/static-dir-deprecated`\n      )\n    } catch (err: any) {\n      if (err.code !== 'ENOENT') {\n        throw err\n      }\n    }\n\n    try {\n      for (const file of await recursiveReadDir(nextStaticFolderPath)) {\n        // Ensure filename is encoded and normalized.\n        nextStaticFolderItems.add(\n          path.posix.join(\n            '/_next/static',\n            encodeURIPath(normalizePathSep(file))\n          )\n        )\n      }\n    } catch (err) {\n      if (opts.config.output !== 'standalone') throw err\n    }\n\n    const routesManifestPath = path.join(distDir, ROUTES_MANIFEST)\n    const prerenderManifestPath = path.join(distDir, PRERENDER_MANIFEST)\n    const middlewareManifestPath = path.join(\n      distDir,\n      'server',\n      MIDDLEWARE_MANIFEST\n    )\n    const pagesManifestPath = path.join(distDir, 'server', PAGES_MANIFEST)\n    const appRoutesManifestPath = path.join(distDir, APP_PATH_ROUTES_MANIFEST)\n\n    const routesManifest = JSON.parse(\n      await fs.readFile(routesManifestPath, 'utf8')\n    ) as RoutesManifest\n\n    prerenderManifest = JSON.parse(\n      await fs.readFile(prerenderManifestPath, 'utf8')\n    ) as PrerenderManifest\n\n    const middlewareManifest = JSON.parse(\n      await fs.readFile(middlewareManifestPath, 'utf8').catch(() => '{}')\n    ) as MiddlewareManifest\n\n    const pagesManifest = JSON.parse(\n      await fs.readFile(pagesManifestPath, 'utf8')\n    )\n    const appRoutesManifest = JSON.parse(\n      await fs.readFile(appRoutesManifestPath, 'utf8').catch(() => '{}')\n    )\n\n    for (const key of Object.keys(pagesManifest)) {\n      // ensure the non-locale version is in the set\n      if (opts.config.i18n) {\n        pageFiles.add(\n          normalizeLocalePath(key, opts.config.i18n.locales).pathname\n        )\n      } else {\n        pageFiles.add(key)\n      }\n    }\n    for (const key of Object.keys(appRoutesManifest)) {\n      appFiles.add(appRoutesManifest[key])\n    }\n\n    const escapedBuildId = escapeStringRegexp(buildId)\n\n    for (const route of routesManifest.dataRoutes) {\n      if (isDynamicRoute(route.page)) {\n        const routeRegex = getRouteRegex(route.page)\n        dynamicRoutes.push({\n          ...route,\n          regex: routeRegex.re.toString(),\n          match: getRouteMatcher({\n            // TODO: fix this in the manifest itself, must also be fixed in\n            // upstream builder that relies on this\n            re: opts.config.i18n\n              ? new RegExp(\n                  route.dataRouteRegex.replace(\n                    `/${escapedBuildId}/`,\n                    `/${escapedBuildId}/(?<nextLocale>[^/]+?)/`\n                  )\n                )\n              : new RegExp(route.dataRouteRegex),\n            groups: routeRegex.groups,\n          }),\n        })\n      }\n      nextDataRoutes.add(route.page)\n    }\n\n    for (const route of routesManifest.dynamicRoutes) {\n      dynamicRoutes.push({\n        ...route,\n        match: getRouteMatcher(getRouteRegex(route.page)),\n      })\n    }\n\n    if (middlewareManifest.middleware?.['/']?.matchers) {\n      middlewareMatcher = getMiddlewareRouteMatcher(\n        middlewareManifest.middleware?.['/']?.matchers\n      )\n    }\n\n    customRoutes = {\n      redirects: routesManifest.redirects,\n      rewrites: routesManifest.rewrites\n        ? Array.isArray(routesManifest.rewrites)\n          ? {\n              beforeFiles: [],\n              afterFiles: routesManifest.rewrites,\n              fallback: [],\n            }\n          : routesManifest.rewrites\n        : {\n            beforeFiles: [],\n            afterFiles: [],\n            fallback: [],\n          },\n      headers: routesManifest.headers,\n    }\n  } else {\n    // dev handling\n    customRoutes = await loadCustomRoutes(opts.config)\n\n    prerenderManifest = {\n      version: 4,\n      routes: {},\n      dynamicRoutes: {},\n      notFoundRoutes: [],\n      preview: {\n        previewModeId: require('crypto').randomBytes(16).toString('hex'),\n        previewModeSigningKey: require('crypto')\n          .randomBytes(32)\n          .toString('hex'),\n        previewModeEncryptionKey: require('crypto')\n          .randomBytes(32)\n          .toString('hex'),\n      },\n    }\n  }\n\n  const headers = customRoutes.headers.map((item) =>\n    buildCustomRoute(\n      'header',\n      item,\n      opts.config.basePath,\n      opts.config.experimental.caseSensitiveRoutes\n    )\n  )\n  const redirects = customRoutes.redirects.map((item) =>\n    buildCustomRoute(\n      'redirect',\n      item,\n      opts.config.basePath,\n      opts.config.experimental.caseSensitiveRoutes\n    )\n  )\n  const rewrites = {\n    beforeFiles: customRoutes.rewrites.beforeFiles.map((item) =>\n      buildCustomRoute('before_files_rewrite', item)\n    ),\n    afterFiles: customRoutes.rewrites.afterFiles.map((item) =>\n      buildCustomRoute(\n        'rewrite',\n        item,\n        opts.config.basePath,\n        opts.config.experimental.caseSensitiveRoutes\n      )\n    ),\n    fallback: customRoutes.rewrites.fallback.map((item) =>\n      buildCustomRoute(\n        'rewrite',\n        item,\n        opts.config.basePath,\n        opts.config.experimental.caseSensitiveRoutes\n      )\n    ),\n  }\n\n  const { i18n } = opts.config\n\n  const handleLocale = (pathname: string, locales?: string[]) => {\n    let locale: string | undefined\n\n    if (i18n) {\n      const i18nResult = normalizeLocalePath(pathname, locales || i18n.locales)\n\n      pathname = i18nResult.pathname\n      locale = i18nResult.detectedLocale\n    }\n    return { locale, pathname }\n  }\n\n  debug('nextDataRoutes', nextDataRoutes)\n  debug('dynamicRoutes', dynamicRoutes)\n  debug('pageFiles', pageFiles)\n  debug('appFiles', appFiles)\n\n  let ensureFn: (item: FsOutput) => Promise<void> | undefined\n\n  const normalizers = {\n    // Because we can't know if the app directory is enabled or not at this\n    // stage, we assume that it is.\n    rsc: new RSCPathnameNormalizer(),\n    prefetchRSC: opts.config.experimental.ppr\n      ? new PrefetchRSCPathnameNormalizer()\n      : undefined,\n  }\n\n  return {\n    headers,\n    rewrites,\n    redirects,\n\n    buildId,\n    handleLocale,\n\n    appFiles,\n    pageFiles,\n    dynamicRoutes,\n    nextDataRoutes,\n\n    exportPathMapRoutes: undefined as\n      | undefined\n      | ReturnType<typeof buildCustomRoute<Rewrite>>[],\n\n    devVirtualFsItems: new Set<string>(),\n\n    prerenderManifest,\n    middlewareMatcher: middlewareMatcher as MiddlewareRouteMatch | undefined,\n\n    ensureCallback(fn: typeof ensureFn) {\n      ensureFn = fn\n    },\n\n    async getItem(itemPath: string): Promise<FsOutput | null> {\n      const originalItemPath = itemPath\n      const itemKey = originalItemPath\n      const lruResult = getItemsLru?.get(itemKey)\n\n      if (lruResult) {\n        return lruResult\n      }\n\n      const { basePath } = opts.config\n\n      const hasBasePath = pathHasPrefix(itemPath, basePath)\n\n      // Return null if path doesn't start with basePath\n      if (basePath && !hasBasePath) {\n        return null\n      }\n\n      // Remove basePath if it exists.\n      if (basePath && hasBasePath) {\n        itemPath = removePathPrefix(itemPath, basePath) || '/'\n      }\n\n      // Simulate minimal mode requests by normalizing RSC and postponed\n      // requests.\n      if (opts.minimalMode) {\n        if (normalizers.prefetchRSC?.match(itemPath)) {\n          itemPath = normalizers.prefetchRSC.normalize(itemPath, true)\n        } else if (normalizers.rsc.match(itemPath)) {\n          itemPath = normalizers.rsc.normalize(itemPath, true)\n        }\n      }\n\n      if (itemPath !== '/' && itemPath.endsWith('/')) {\n        itemPath = itemPath.substring(0, itemPath.length - 1)\n      }\n\n      let decodedItemPath = itemPath\n\n      try {\n        decodedItemPath = decodeURIComponent(itemPath)\n      } catch {}\n\n      if (itemPath === '/_next/image') {\n        return {\n          itemPath,\n          type: 'nextImage',\n        }\n      }\n\n      const itemsToCheck: Array<[Set<string>, FsOutput['type']]> = [\n        [this.devVirtualFsItems, 'devVirtualFsItem'],\n        [nextStaticFolderItems, 'nextStaticFolder'],\n        [legacyStaticFolderItems, 'legacyStaticFolder'],\n        [publicFolderItems, 'publicFolder'],\n        [appFiles, 'appFile'],\n        [pageFiles, 'pageFile'],\n      ]\n\n      for (let [items, type] of itemsToCheck) {\n        let locale: string | undefined\n        let curItemPath = itemPath\n        let curDecodedItemPath = decodedItemPath\n\n        const isDynamicOutput = type === 'pageFile' || type === 'appFile'\n\n        if (i18n) {\n          const localeResult = handleLocale(\n            itemPath,\n            // legacy behavior allows visiting static assets under\n            // default locale but no other locale\n            isDynamicOutput\n              ? undefined\n              : [\n                  i18n?.defaultLocale,\n                  // default locales from domains need to be matched too\n                  ...(i18n.domains?.map((item) => item.defaultLocale) || []),\n                ]\n          )\n\n          if (localeResult.pathname !== curItemPath) {\n            curItemPath = localeResult.pathname\n            locale = localeResult.locale\n\n            try {\n              curDecodedItemPath = decodeURIComponent(curItemPath)\n            } catch {}\n          }\n        }\n\n        if (type === 'legacyStaticFolder') {\n          if (!pathHasPrefix(curItemPath, '/static')) {\n            continue\n          }\n          curItemPath = curItemPath.substring('/static'.length)\n\n          try {\n            curDecodedItemPath = decodeURIComponent(curItemPath)\n          } catch {}\n        }\n\n        if (\n          type === 'nextStaticFolder' &&\n          !pathHasPrefix(curItemPath, '/_next/static')\n        ) {\n          continue\n        }\n\n        const nextDataPrefix = `/_next/data/${buildId}/`\n\n        if (\n          type === 'pageFile' &&\n          curItemPath.startsWith(nextDataPrefix) &&\n          curItemPath.endsWith('.json')\n        ) {\n          items = nextDataRoutes\n          // remove _next/data/<build-id> prefix\n          curItemPath = curItemPath.substring(nextDataPrefix.length - 1)\n\n          // remove .json postfix\n          curItemPath = curItemPath.substring(\n            0,\n            curItemPath.length - '.json'.length\n          )\n          const curLocaleResult = handleLocale(curItemPath)\n          curItemPath =\n            curLocaleResult.pathname === '/index'\n              ? '/'\n              : curLocaleResult.pathname\n\n          locale = curLocaleResult.locale\n\n          try {\n            curDecodedItemPath = decodeURIComponent(curItemPath)\n          } catch {}\n        }\n\n        let matchedItem = items.has(curItemPath)\n\n        // check decoded variant as well\n        if (!matchedItem && !opts.dev) {\n          matchedItem = items.has(curDecodedItemPath)\n          if (matchedItem) curItemPath = curDecodedItemPath\n          else {\n            // x-ref: https://github.com/vercel/next.js/issues/54008\n            // There're cases that urls get decoded before requests, we should support both encoded and decoded ones.\n            // e.g. nginx could decode the proxy urls, the below ones should be treated as the same:\n            // decoded version: `/_next/static/chunks/pages/blog/[slug]-d4858831b91b69f6.js`\n            // encoded version: `/_next/static/chunks/pages/blog/%5Bslug%5D-d4858831b91b69f6.js`\n            try {\n              // encode the special characters in the path and retrieve again to determine if path exists.\n              const encodedCurItemPath = encodeURIPath(curItemPath)\n              matchedItem = items.has(encodedCurItemPath)\n            } catch {}\n          }\n        }\n\n        if (matchedItem || opts.dev) {\n          let fsPath: string | undefined\n          let itemsRoot: string | undefined\n\n          switch (type) {\n            case 'nextStaticFolder': {\n              itemsRoot = nextStaticFolderPath\n              curItemPath = curItemPath.substring('/_next/static'.length)\n              break\n            }\n            case 'legacyStaticFolder': {\n              itemsRoot = legacyStaticFolderPath\n              break\n            }\n            case 'publicFolder': {\n              itemsRoot = publicFolderPath\n              break\n            }\n            default: {\n              break\n            }\n          }\n\n          if (itemsRoot && curItemPath) {\n            fsPath = path.posix.join(itemsRoot, curItemPath)\n          }\n\n          // dynamically check fs in development so we don't\n          // have to wait on the watcher\n          if (!matchedItem && opts.dev) {\n            const isStaticAsset = (\n              [\n                'nextStaticFolder',\n                'publicFolder',\n                'legacyStaticFolder',\n              ] as (typeof type)[]\n            ).includes(type)\n\n            if (isStaticAsset && itemsRoot) {\n              let found = fsPath && (await fileExists(fsPath, FileType.File))\n\n              if (!found) {\n                try {\n                  // In dev, we ensure encoded paths match\n                  // decoded paths on the filesystem so check\n                  // that variation as well\n                  const tempItemPath = decodeURIComponent(curItemPath)\n                  fsPath = path.posix.join(itemsRoot, tempItemPath)\n                  found = await fileExists(fsPath, FileType.File)\n                } catch {}\n\n                if (!found) {\n                  continue\n                }\n              }\n            } else if (type === 'pageFile' || type === 'appFile') {\n              const isAppFile = type === 'appFile'\n              if (\n                ensureFn &&\n                (await ensureFn({\n                  type,\n                  itemPath: isAppFile\n                    ? normalizeMetadataRoute(curItemPath)\n                    : curItemPath,\n                })?.catch(() => 'ENSURE_FAILED')) === 'ENSURE_FAILED'\n              ) {\n                continue\n              }\n            } else {\n              continue\n            }\n          }\n\n          // i18n locales aren't matched for app dir\n          if (type === 'appFile' && locale && locale !== i18n?.defaultLocale) {\n            continue\n          }\n\n          const itemResult = {\n            type,\n            fsPath,\n            locale,\n            itemsRoot,\n            itemPath: curItemPath,\n          }\n\n          getItemsLru?.set(itemKey, itemResult)\n          return itemResult\n        }\n      }\n\n      getItemsLru?.set(itemKey, null)\n      return null\n    },\n    getDynamicRoutes() {\n      // this should include data routes\n      return this.dynamicRoutes\n    },\n    getMiddlewareMatchers() {\n      return this.middlewareMatcher\n    },\n  }\n}\n"],"names":["buildCustomRoute","setupFsCheck","debug","setupDebug","type","item","basePath","caseSensitive","restrictedRedirectPaths","map","p","match","getPathMatch","source","strict","removeUnnamedParams","regexModifier","internal","regex","modifyRouteRegex","undefined","sensitive","check","opts","getItemsLru","dev","LRUCache","length","value","fsPath","itemPath","nextDataRoutes","Set","publicFolderItems","nextStaticFolderItems","legacyStaticFolderItems","appFiles","pageFiles","dynamicRoutes","middlewareMatcher","distDir","path","join","dir","config","publicFolderPath","nextStaticFolderPath","legacyStaticFolderPath","customRoutes","redirects","rewrites","beforeFiles","afterFiles","fallback","headers","buildId","prerenderManifest","middlewareManifest","buildIdPath","BUILD_ID_FILE","fs","readFile","err","code","Error","file","recursiveReadDir","add","encodeURIPath","normalizePathSep","Log","warn","posix","output","routesManifestPath","ROUTES_MANIFEST","prerenderManifestPath","PRERENDER_MANIFEST","middlewareManifestPath","MIDDLEWARE_MANIFEST","pagesManifestPath","PAGES_MANIFEST","appRoutesManifestPath","APP_PATH_ROUTES_MANIFEST","routesManifest","JSON","parse","catch","pagesManifest","appRoutesManifest","key","Object","keys","i18n","normalizeLocalePath","locales","pathname","escapedBuildId","escapeStringRegexp","route","dataRoutes","isDynamicRoute","page","routeRegex","getRouteRegex","push","re","toString","getRouteMatcher","RegExp","dataRouteRegex","replace","groups","middleware","matchers","getMiddlewareRouteMatcher","Array","isArray","loadCustomRoutes","version","routes","notFoundRoutes","preview","previewModeId","require","randomBytes","previewModeSigningKey","previewModeEncryptionKey","experimental","caseSensitiveRoutes","handleLocale","locale","i18nResult","detectedLocale","ensureFn","normalizers","rsc","RSCPathnameNormalizer","prefetchRSC","ppr","PrefetchRSCPathnameNormalizer","exportPathMapRoutes","devVirtualFsItems","ensureCallback","fn","getItem","originalItemPath","itemKey","lruResult","get","hasBasePath","pathHasPrefix","removePathPrefix","minimalMode","normalize","endsWith","substring","decodedItemPath","decodeURIComponent","itemsToCheck","items","curItemPath","curDecodedItemPath","isDynamicOutput","localeResult","defaultLocale","domains","nextDataPrefix","startsWith","curLocaleResult","matchedItem","has","encodedCurItemPath","itemsRoot","isStaticAsset","includes","found","fileExists","FileType","File","tempItemPath","isAppFile","normalizeMetadataRoute","itemResult","set","getDynamicRoutes","getMiddlewareMatchers"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3541, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3546, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/router-utils/proxy-request.ts"],"sourcesContent":["import type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextUrlWithParsedQuery } from '../../request-meta'\n\nimport url from 'url'\nimport { stringifyQuery } from '../../server-route-utils'\nimport { Duplex } from 'stream'\nimport { DetachedPromise } from '../../../lib/detached-promise'\n\nexport async function proxyRequest(\n  req: IncomingMessage,\n  res: ServerResponse | Duplex,\n  parsedUrl: NextUrlWithParsedQuery,\n  upgradeHead?: Buffer,\n  reqBody?: any,\n  proxyTimeout?: number | null\n) {\n  const { query } = parsedUrl\n  delete (parsedUrl as any).query\n  parsedUrl.search = stringifyQuery(req as any, query)\n\n  const target = url.format(parsedUrl)\n  const HttpProxy =\n    require('next/dist/compiled/http-proxy') as typeof import('next/dist/compiled/http-proxy')\n\n  const proxy = new HttpProxy({\n    target,\n    changeOrigin: true,\n    ignorePath: true,\n    ws: true,\n    // we limit proxy requests to 30s by default, in development\n    // we don't time out WebSocket requests to allow proxying\n    proxyTimeout: proxyTimeout === null ? undefined : proxyTimeout || 30_000,\n    headers: {\n      'x-forwarded-host': req.headers.host || '',\n    },\n  })\n\n  let finished = false\n\n  // http-proxy does not properly detect a client disconnect in newer\n  // versions of Node.js. This is caused because it only listens for the\n  // `aborted` event on the our request object, but it also fully reads\n  // and closes the request object. Node **will not** fire `aborted` when\n  // the request is already closed. Listening for `close` on our response\n  // object will detect the disconnect, and we can abort the proxy's\n  // connection.\n  proxy.on('proxyReq', (proxyReq) => {\n    res.on('close', () => proxyReq.destroy())\n  })\n\n  proxy.on('proxyRes', (proxyRes) => {\n    if (res.destroyed) {\n      proxyRes.destroy()\n    } else {\n      res.on('close', () => proxyRes.destroy())\n    }\n  })\n\n  proxy.on('proxyRes', (proxyRes, innerReq, innerRes) => {\n    const cleanup = (err: any) => {\n      // cleanup event listeners to allow clean garbage collection\n      proxyRes.removeListener('error', cleanup)\n      proxyRes.removeListener('close', cleanup)\n      innerRes.removeListener('error', cleanup)\n      innerRes.removeListener('close', cleanup)\n\n      // destroy all source streams to propagate the caught event backward\n      innerReq.destroy(err)\n      proxyRes.destroy(err)\n    }\n\n    proxyRes.once('error', cleanup)\n    proxyRes.once('close', cleanup)\n    innerRes.once('error', cleanup)\n    innerRes.once('close', cleanup)\n  })\n\n  const detached = new DetachedPromise<boolean>()\n\n  proxy.on('error', (err) => {\n    console.error(`Failed to proxy ${target}`, err)\n    if (!finished) {\n      finished = true\n      detached.reject(err)\n\n      if (!res.destroyed) {\n        if (!(res instanceof Duplex)) {\n          res.statusCode = 500\n        }\n\n        res.end('Internal Server Error')\n      }\n    }\n  })\n\n  // If upgrade head is present or the response is a Duplex stream, treat as\n  // WebSocket request.\n  if (upgradeHead || res instanceof Duplex) {\n    proxy.on('proxyReqWs', (proxyReq) => {\n      proxyReq.on('close', () => {\n        if (!finished) {\n          finished = true\n          detached.resolve(true)\n        }\n      })\n    })\n    proxy.ws(req, res, upgradeHead)\n    detached.resolve(true)\n  } else {\n    proxy.on('proxyReq', (proxyReq) => {\n      proxyReq.on('close', () => {\n        if (!finished) {\n          finished = true\n          detached.resolve(true)\n        }\n      })\n    })\n    proxy.web(req, res, {\n      buffer: reqBody,\n    })\n  }\n\n  // When the proxy finishes proxying the request, shut down the proxy.\n  return detached.promise.finally(() => {\n    proxy.close()\n  })\n}\n"],"names":["proxyRequest","req","res","parsedUrl","upgradeHead","reqBody","proxyTimeout","query","search","stringifyQuery","target","url","format","HttpProxy","require","proxy","changeOrigin","ignorePath","ws","undefined","headers","host","finished","on","proxyReq","destroy","proxyRes","destroyed","innerReq","innerRes","cleanup","err","removeListener","once","detached","DetachedPromise","console","error","reject","Duplex","statusCode","end","resolve","web","buffer","promise","finally","close"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3662, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3667, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/is-ipv6.ts"],"sourcesContent":["// Regex from `node/lib/internal/net.js`: https://github.com/nodejs/node/blob/9fc57006c27564ed7f75eee090eca86786508f51/lib/internal/net.js#L19-L29\n// License included below:\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])'\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`\nconst v6Seg = '(?:[0-9a-fA-F]{1,4})'\nconst IPv6Reg = new RegExp(\n  '^(' +\n    `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\n    `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\n    `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1,2}|:)|` +\n    `(?:${v6Seg}:){4}(?:(:${v6Seg}){0,1}:${v4Str}|(:${v6Seg}){1,3}|:)|` +\n    `(?:${v6Seg}:){3}(?:(:${v6Seg}){0,2}:${v4Str}|(:${v6Seg}){1,4}|:)|` +\n    `(?:${v6Seg}:){2}(?:(:${v6Seg}){0,3}:${v4Str}|(:${v6Seg}){1,5}|:)|` +\n    `(?:${v6Seg}:){1}(?:(:${v6Seg}){0,4}:${v4Str}|(:${v6Seg}){1,6}|:)|` +\n    `(?::((?::${v6Seg}){0,5}:${v4Str}|(?::${v6Seg}){1,7}|:))` +\n    ')(%[0-9a-zA-Z-.:]{1,})?$'\n)\n\nexport function isIPv6(s: string) {\n  return IPv6Reg.test(s)\n}\n"],"names":["isIPv6","v4Seg","v4Str","v6Seg","IPv6Reg","RegExp","s","test"],"mappings":"AAAA,kJAAkJ;AAClJ,0BAA0B;AAC1B,sDAAsD;AACtD,EAAE;AACF,0EAA0E;AAC1E,gEAAgE;AAChE,sEAAsE;AACtE,sEAAsE;AACtE,4EAA4E;AAC5E,qEAAqE;AACrE,wBAAwB;AACxB,EAAE;AACF,0EAA0E;AAC1E,yDAAyD;AACzD,EAAE;AACF,0EAA0E;AAC1E,6DAA6D;AAC7D,4EAA4E;AAC5E,2EAA2E;AAC3E,wEAAwE;AACxE,4EAA4E;AAC5E,yCAAyC;;;;;+BAkBzBA,UAAAA;;;eAAAA;;;AAhBhB,MAAMC,QAAQ;AACd,MAAMC,QAAQ,CAAC,CAAC,EAAED,MAAM,OAAO,EAAEA,OAAO;AACxC,MAAME,QAAQ;AACd,MAAMC,UAAU,IAAIC,OAClB,OACE,CAAC,GAAG,EAAEF,MAAM,QAAQ,EAAEA,MAAM,IAAI,CAAC,GACjC,CAAC,GAAG,EAAEA,MAAM,QAAQ,EAAED,MAAM,EAAE,EAAEC,MAAM,IAAI,CAAC,GAC3C,CAAC,GAAG,EAAEA,MAAM,SAAS,EAAED,MAAM,GAAG,EAAEC,MAAM,UAAU,CAAC,GACnD,CAAC,GAAG,EAAEA,MAAM,UAAU,EAAEA,MAAM,OAAO,EAAED,MAAM,GAAG,EAAEC,MAAM,UAAU,CAAC,GACnE,CAAC,GAAG,EAAEA,MAAM,UAAU,EAAEA,MAAM,OAAO,EAAED,MAAM,GAAG,EAAEC,MAAM,UAAU,CAAC,GACnE,CAAC,GAAG,EAAEA,MAAM,UAAU,EAAEA,MAAM,OAAO,EAAED,MAAM,GAAG,EAAEC,MAAM,UAAU,CAAC,GACnE,CAAC,GAAG,EAAEA,MAAM,UAAU,EAAEA,MAAM,OAAO,EAAED,MAAM,GAAG,EAAEC,MAAM,UAAU,CAAC,GACnE,CAAC,SAAS,EAAEA,MAAM,OAAO,EAAED,MAAM,KAAK,EAAEC,MAAM,UAAU,CAAC,GACzD;AAGG,SAASH,OAAOM,CAAS;IAC9B,OAAOF,QAAQG,IAAI,CAACD;AACtB","ignoreList":[0]}},
    {"offset": {"line": 3706, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3711, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/format-hostname.ts"],"sourcesContent":["import { isIPv6 } from './is-ipv6'\n\n/**\n * Formats a hostname so that it is a valid host that can be fetched by wrapping\n * IPv6 hosts with brackets.\n * @param hostname\n * @returns\n */\nexport function formatHostname(hostname: string): string {\n  return isIPv6(hostname) ? `[${hostname}]` : hostname\n}\n"],"names":["formatHostname","hostname","isIPv6"],"mappings":";;;;+BAQgBA,kBAAAA;;;eAAAA;;;wBARO;AAQhB,SAASA,eAAeC,QAAgB;IAC7C,OAAOC,CAAAA,GAAAA,QAAAA,MAAM,EAACD,YAAY,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,GAAGA;AAC9C","ignoreList":[0]}},
    {"offset": {"line": 3725, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3730, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/router-utils/resolve-routes.ts"],"sourcesContent":["import type { FsOutput } from './filesystem'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextConfigComplete } from '../../config-shared'\nimport type { RenderServer, initialize } from '../router-server'\nimport type { PatchMatcher } from '../../../shared/lib/router/utils/path-match'\nimport type { Redirect } from '../../../types'\nimport type { Header, Rewrite } from '../../../lib/load-custom-routes'\nimport type { UnwrapPromise } from '../../../lib/coalesced-function'\nimport type { NextUrlWithParsedQuery } from '../../request-meta'\n\nimport url from 'url'\nimport path from 'node:path'\nimport setupDebug from 'next/dist/compiled/debug'\nimport { getCloneableBody } from '../../body-streams'\nimport { filterReqHeaders, ipcForbiddenHeaders } from '../server-ipc/utils'\nimport { stringifyQuery } from '../../server-route-utils'\nimport { formatHostname } from '../format-hostname'\nimport { toNodeOutgoingHttpHeaders } from '../../web/utils'\nimport { isAbortError } from '../../pipe-readable'\nimport { getHostname } from '../../../shared/lib/get-hostname'\nimport { getRedirectStatus } from '../../../lib/redirect-status'\nimport { normalizeRepeatedSlashes } from '../../../shared/lib/utils'\nimport { relativizeURL } from '../../../shared/lib/router/utils/relativize-url'\nimport { addPathPrefix } from '../../../shared/lib/router/utils/add-path-prefix'\nimport { pathHasPrefix } from '../../../shared/lib/router/utils/path-has-prefix'\nimport { detectDomainLocale } from '../../../shared/lib/i18n/detect-domain-locale'\nimport { normalizeLocalePath } from '../../../shared/lib/i18n/normalize-locale-path'\nimport { removePathPrefix } from '../../../shared/lib/router/utils/remove-path-prefix'\nimport { NextDataPathnameNormalizer } from '../../normalizers/request/next-data'\nimport { BasePathPathnameNormalizer } from '../../normalizers/request/base-path'\n\nimport { addRequestMeta } from '../../request-meta'\nimport {\n  compileNonPath,\n  matchHas,\n  prepareDestination,\n} from '../../../shared/lib/router/utils/prepare-destination'\nimport type { TLSSocket } from 'tls'\nimport { NEXT_ROUTER_STATE_TREE_HEADER } from '../../../client/components/app-router-headers'\nimport { getSelectedParams } from '../../../client/components/router-reducer/compute-changed-path'\nimport { isInterceptionRouteRewrite } from '../../../lib/generate-interception-routes-rewrites'\nimport { parseAndValidateFlightRouterState } from '../../app-render/parse-and-validate-flight-router-state'\n\nconst debug = setupDebug('next:router-server:resolve-routes')\n\nexport function getResolveRoutes(\n  fsChecker: UnwrapPromise<\n    ReturnType<typeof import('./filesystem').setupFsCheck>\n  >,\n  config: NextConfigComplete,\n  opts: Parameters<typeof initialize>[0],\n  renderServer: RenderServer,\n  renderServerOpts: Parameters<RenderServer['initialize']>[0],\n  ensureMiddleware?: (url?: string) => Promise<void>\n) {\n  type Route = {\n    /**\n     * The path matcher to check if this route applies to this request.\n     */\n    match: PatchMatcher\n    check?: boolean\n    name?: string\n  } & Partial<Header> &\n    Partial<Redirect>\n\n  const routes: Route[] = [\n    // _next/data with middleware handling\n    { match: () => ({}), name: 'middleware_next_data' },\n\n    ...(opts.minimalMode ? [] : fsChecker.headers),\n    ...(opts.minimalMode ? [] : fsChecker.redirects),\n\n    // check middleware (using matchers)\n    { match: () => ({}), name: 'middleware' },\n\n    ...(opts.minimalMode ? [] : fsChecker.rewrites.beforeFiles),\n\n    // check middleware (using matchers)\n    { match: () => ({}), name: 'before_files_end' },\n\n    // we check exact matches on fs before continuing to\n    // after files rewrites\n    { match: () => ({}), name: 'check_fs' },\n\n    ...(opts.minimalMode ? [] : fsChecker.rewrites.afterFiles),\n\n    // we always do the check: true handling before continuing to\n    // fallback rewrites\n    {\n      check: true,\n      match: () => ({}),\n      name: 'after files check: true',\n    },\n\n    ...(opts.minimalMode ? [] : fsChecker.rewrites.fallback),\n  ]\n\n  async function resolveRoutes({\n    req,\n    res,\n    isUpgradeReq,\n    invokedOutputs,\n  }: {\n    req: IncomingMessage\n    res: ServerResponse\n    isUpgradeReq: boolean\n    signal: AbortSignal\n    invokedOutputs?: Set<string>\n  }): Promise<{\n    finished: boolean\n    statusCode?: number\n    bodyStream?: ReadableStream | null\n    resHeaders: Record<string, string | string[]>\n    parsedUrl: NextUrlWithParsedQuery\n    matchedOutput?: FsOutput | null\n  }> {\n    let finished = false\n    let resHeaders: Record<string, string | string[]> = {}\n    let matchedOutput: FsOutput | null = null\n    let parsedUrl = url.parse(req.url || '', true) as NextUrlWithParsedQuery\n    let didRewrite = false\n\n    const urlParts = (req.url || '').split('?', 1)\n    const urlNoQuery = urlParts[0]\n\n    // this normalizes repeated slashes in the path e.g. hello//world ->\n    // hello/world or backslashes to forward slashes, this does not\n    // handle trailing slash as that is handled the same as a next.config.js\n    // redirect\n    if (urlNoQuery?.match(/(\\\\|\\/\\/)/)) {\n      parsedUrl = url.parse(normalizeRepeatedSlashes(req.url!), true)\n      return {\n        parsedUrl,\n        resHeaders,\n        finished: true,\n        statusCode: 308,\n      }\n    }\n    // TODO: inherit this from higher up\n    const protocol =\n      (req?.socket as TLSSocket)?.encrypted ||\n      req.headers['x-forwarded-proto']?.includes('https')\n        ? 'https'\n        : 'http'\n\n    // When there are hostname and port we build an absolute URL\n    const initUrl = (config.experimental as any).trustHostHeader\n      ? `https://${req.headers.host || 'localhost'}${req.url}`\n      : opts.port\n        ? `${protocol}://${formatHostname(opts.hostname || 'localhost')}:${\n            opts.port\n          }${req.url}`\n        : req.url || ''\n\n    addRequestMeta(req, 'initURL', initUrl)\n    addRequestMeta(req, 'initQuery', { ...parsedUrl.query })\n    addRequestMeta(req, 'initProtocol', protocol)\n\n    if (!isUpgradeReq) {\n      addRequestMeta(req, 'clonableBody', getCloneableBody(req))\n    }\n\n    const maybeAddTrailingSlash = (pathname: string) => {\n      if (\n        config.trailingSlash &&\n        !config.skipMiddlewareUrlNormalize &&\n        !pathname.endsWith('/')\n      ) {\n        return `${pathname}/`\n      }\n      return pathname\n    }\n\n    let domainLocale: ReturnType<typeof detectDomainLocale> | undefined\n    let defaultLocale: string | undefined\n    let initialLocaleResult:\n      | ReturnType<typeof normalizeLocalePath>\n      | undefined = undefined\n\n    if (config.i18n) {\n      const hadTrailingSlash = parsedUrl.pathname?.endsWith('/')\n      const hadBasePath = pathHasPrefix(\n        parsedUrl.pathname || '',\n        config.basePath\n      )\n      initialLocaleResult = normalizeLocalePath(\n        removePathPrefix(parsedUrl.pathname || '/', config.basePath),\n        config.i18n.locales\n      )\n\n      domainLocale = detectDomainLocale(\n        config.i18n.domains,\n        getHostname(parsedUrl, req.headers)\n      )\n      defaultLocale = domainLocale?.defaultLocale || config.i18n.defaultLocale\n\n      parsedUrl.query.__nextDefaultLocale = defaultLocale\n      parsedUrl.query.__nextLocale =\n        initialLocaleResult.detectedLocale || defaultLocale\n\n      // ensure locale is present for resolving routes\n      if (\n        !initialLocaleResult.detectedLocale &&\n        !initialLocaleResult.pathname.startsWith('/_next/')\n      ) {\n        parsedUrl.pathname = addPathPrefix(\n          initialLocaleResult.pathname === '/'\n            ? `/${defaultLocale}`\n            : addPathPrefix(\n                initialLocaleResult.pathname || '',\n                `/${defaultLocale}`\n              ),\n          hadBasePath ? config.basePath : ''\n        )\n\n        if (hadTrailingSlash) {\n          parsedUrl.pathname = maybeAddTrailingSlash(parsedUrl.pathname)\n        }\n      }\n    } else {\n      // As i18n isn't configured we remove the locale related query params.\n      delete parsedUrl.query.__nextLocale\n      delete parsedUrl.query.__nextDefaultLocale\n      delete parsedUrl.query.__nextInferredLocaleFromDefault\n    }\n\n    const checkLocaleApi = (pathname: string) => {\n      if (\n        config.i18n &&\n        pathname === urlNoQuery &&\n        initialLocaleResult?.detectedLocale &&\n        pathHasPrefix(initialLocaleResult.pathname, '/api')\n      ) {\n        return true\n      }\n    }\n\n    async function checkTrue() {\n      const pathname = parsedUrl.pathname || ''\n\n      if (checkLocaleApi(pathname)) {\n        return\n      }\n      if (!invokedOutputs?.has(pathname)) {\n        const output = await fsChecker.getItem(pathname)\n\n        if (output) {\n          if (\n            config.useFileSystemPublicRoutes ||\n            didRewrite ||\n            (output.type !== 'appFile' && output.type !== 'pageFile')\n          ) {\n            return output\n          }\n        }\n      }\n      const dynamicRoutes = fsChecker.getDynamicRoutes()\n      let curPathname = parsedUrl.pathname\n\n      if (config.basePath) {\n        if (!pathHasPrefix(curPathname || '', config.basePath)) {\n          return\n        }\n        curPathname = curPathname?.substring(config.basePath.length) || '/'\n      }\n      const localeResult = fsChecker.handleLocale(curPathname || '')\n\n      for (const route of dynamicRoutes) {\n        // when resolving fallback: false the\n        // render worker may return a no-fallback response\n        // which signals we need to continue resolving.\n        // TODO: optimize this to collect static paths\n        // to use at the routing layer\n        if (invokedOutputs?.has(route.page)) {\n          continue\n        }\n        const params = route.match(localeResult.pathname)\n\n        if (params) {\n          const pageOutput = await fsChecker.getItem(\n            addPathPrefix(route.page, config.basePath || '')\n          )\n\n          // i18n locales aren't matched for app dir\n          if (\n            pageOutput?.type === 'appFile' &&\n            initialLocaleResult?.detectedLocale\n          ) {\n            continue\n          }\n\n          if (pageOutput && curPathname?.startsWith('/_next/data')) {\n            parsedUrl.query.__nextDataReq = '1'\n          }\n\n          if (config.useFileSystemPublicRoutes || didRewrite) {\n            return pageOutput\n          }\n        }\n      }\n    }\n\n    const normalizers = {\n      basePath:\n        config.basePath && config.basePath !== '/'\n          ? new BasePathPathnameNormalizer(config.basePath)\n          : undefined,\n      data: new NextDataPathnameNormalizer(fsChecker.buildId),\n    }\n\n    async function handleRoute(\n      route: (typeof routes)[0]\n    ): Promise<UnwrapPromise<ReturnType<typeof resolveRoutes>> | void> {\n      let curPathname = parsedUrl.pathname || '/'\n\n      if (config.i18n && route.internal) {\n        const hadTrailingSlash = curPathname.endsWith('/')\n\n        if (config.basePath) {\n          curPathname = removePathPrefix(curPathname, config.basePath)\n        }\n        const hadBasePath = curPathname !== parsedUrl.pathname\n\n        const localeResult = normalizeLocalePath(\n          curPathname,\n          config.i18n.locales\n        )\n        const isDefaultLocale = localeResult.detectedLocale === defaultLocale\n\n        if (isDefaultLocale) {\n          curPathname =\n            localeResult.pathname === '/' && hadBasePath\n              ? config.basePath\n              : addPathPrefix(\n                  localeResult.pathname,\n                  hadBasePath ? config.basePath : ''\n                )\n        } else if (hadBasePath) {\n          curPathname =\n            curPathname === '/'\n              ? config.basePath\n              : addPathPrefix(curPathname, config.basePath)\n        }\n\n        if ((isDefaultLocale || hadBasePath) && hadTrailingSlash) {\n          curPathname = maybeAddTrailingSlash(curPathname)\n        }\n      }\n      let params = route.match(curPathname)\n\n      if ((route.has || route.missing) && params) {\n        const hasParams = matchHas(\n          req,\n          parsedUrl.query,\n          route.has,\n          route.missing\n        )\n        if (hasParams) {\n          Object.assign(params, hasParams)\n        } else {\n          params = false\n        }\n      }\n\n      if (params) {\n        if (\n          fsChecker.exportPathMapRoutes &&\n          route.name === 'before_files_end'\n        ) {\n          for (const exportPathMapRoute of fsChecker.exportPathMapRoutes) {\n            const result = await handleRoute(exportPathMapRoute)\n\n            if (result) {\n              return result\n            }\n          }\n        }\n\n        if (route.name === 'middleware_next_data' && parsedUrl.pathname) {\n          if (fsChecker.getMiddlewareMatchers()?.length) {\n            let normalized = parsedUrl.pathname\n\n            // Remove the base path if it exists.\n            const hadBasePath = normalizers.basePath?.match(parsedUrl.pathname)\n            if (hadBasePath && normalizers.basePath) {\n              normalized = normalizers.basePath.normalize(normalized, true)\n            }\n\n            let updated = false\n            if (normalizers.data.match(normalized)) {\n              updated = true\n              parsedUrl.query.__nextDataReq = '1'\n              normalized = normalizers.data.normalize(normalized, true)\n            }\n\n            if (config.i18n) {\n              const curLocaleResult = normalizeLocalePath(\n                normalized,\n                config.i18n.locales\n              )\n\n              if (curLocaleResult.detectedLocale) {\n                parsedUrl.query.__nextLocale = curLocaleResult.detectedLocale\n              }\n            }\n\n            // If we updated the pathname, and it had a base path, re-add the\n            // base path.\n            if (updated) {\n              if (hadBasePath) {\n                normalized = path.posix.join(config.basePath, normalized)\n              }\n\n              // Re-add the trailing slash (if required).\n              normalized = maybeAddTrailingSlash(normalized)\n\n              parsedUrl.pathname = normalized\n            }\n          }\n        }\n\n        if (route.name === 'check_fs') {\n          const pathname = parsedUrl.pathname || ''\n\n          if (invokedOutputs?.has(pathname) || checkLocaleApi(pathname)) {\n            return\n          }\n          const output = await fsChecker.getItem(pathname)\n\n          if (\n            output &&\n            !(\n              config.i18n &&\n              initialLocaleResult?.detectedLocale &&\n              pathHasPrefix(pathname, '/api')\n            )\n          ) {\n            if (\n              config.useFileSystemPublicRoutes ||\n              didRewrite ||\n              (output.type !== 'appFile' && output.type !== 'pageFile')\n            ) {\n              matchedOutput = output\n\n              if (output.locale) {\n                parsedUrl.query.__nextLocale = output.locale\n              }\n              return {\n                parsedUrl,\n                resHeaders,\n                finished: true,\n                matchedOutput,\n              }\n            }\n          }\n        }\n\n        if (!opts.minimalMode && route.name === 'middleware') {\n          const match = fsChecker.getMiddlewareMatchers()\n          if (\n            // @ts-expect-error BaseNextRequest stuff\n            match?.(parsedUrl.pathname, req, parsedUrl.query)\n          ) {\n            if (ensureMiddleware) {\n              await ensureMiddleware(req.url)\n            }\n\n            const serverResult =\n              await renderServer?.initialize(renderServerOpts)\n\n            if (!serverResult) {\n              throw new Error(`Failed to initialize render server \"middleware\"`)\n            }\n\n            addRequestMeta(req, 'invokePath', '')\n            addRequestMeta(req, 'invokeOutput', '')\n            addRequestMeta(req, 'invokeQuery', {})\n            addRequestMeta(req, 'middlewareInvoke', true)\n            debug('invoking middleware', req.url, req.headers)\n\n            let middlewareRes: Response | undefined = undefined\n            let bodyStream: ReadableStream | undefined = undefined\n            try {\n              try {\n                await serverResult.requestHandler(req, res, parsedUrl)\n              } catch (err: any) {\n                if (!('result' in err) || !('response' in err.result)) {\n                  throw err\n                }\n                middlewareRes = err.result.response as Response\n                res.statusCode = middlewareRes.status\n\n                if (middlewareRes.body) {\n                  bodyStream = middlewareRes.body\n                } else if (middlewareRes.status) {\n                  bodyStream = new ReadableStream({\n                    start(controller) {\n                      controller.enqueue('')\n                      controller.close()\n                    },\n                  })\n                }\n              }\n            } catch (e) {\n              // If the client aborts before we can receive a response object\n              // (when the headers are flushed), then we can early exit without\n              // further processing.\n              if (isAbortError(e)) {\n                return {\n                  parsedUrl,\n                  resHeaders,\n                  finished: true,\n                }\n              }\n              throw e\n            }\n\n            if (res.closed || res.finished || !middlewareRes) {\n              return {\n                parsedUrl,\n                resHeaders,\n                finished: true,\n              }\n            }\n\n            const middlewareHeaders = toNodeOutgoingHttpHeaders(\n              middlewareRes.headers\n            ) as Record<string, string | string[] | undefined>\n\n            debug('middleware res', middlewareRes.status, middlewareHeaders)\n\n            if (middlewareHeaders['x-middleware-override-headers']) {\n              const overriddenHeaders: Set<string> = new Set()\n              let overrideHeaders: string | string[] =\n                middlewareHeaders['x-middleware-override-headers']\n\n              if (typeof overrideHeaders === 'string') {\n                overrideHeaders = overrideHeaders.split(',')\n              }\n\n              for (const key of overrideHeaders) {\n                overriddenHeaders.add(key.trim())\n              }\n              delete middlewareHeaders['x-middleware-override-headers']\n\n              // Delete headers.\n              for (const key of Object.keys(req.headers)) {\n                if (!overriddenHeaders.has(key)) {\n                  delete req.headers[key]\n                }\n              }\n\n              // Update or add headers.\n              for (const key of overriddenHeaders.keys()) {\n                const valueKey = 'x-middleware-request-' + key\n                const newValue = middlewareHeaders[valueKey]\n                const oldValue = req.headers[key]\n\n                if (oldValue !== newValue) {\n                  req.headers[key] = newValue === null ? undefined : newValue\n                }\n                delete middlewareHeaders[valueKey]\n              }\n            }\n\n            if (\n              !middlewareHeaders['x-middleware-rewrite'] &&\n              !middlewareHeaders['x-middleware-next'] &&\n              !middlewareHeaders['location']\n            ) {\n              middlewareHeaders['x-middleware-refresh'] = '1'\n            }\n            delete middlewareHeaders['x-middleware-next']\n\n            for (const [key, value] of Object.entries({\n              ...filterReqHeaders(middlewareHeaders, ipcForbiddenHeaders),\n            })) {\n              if (\n                [\n                  'content-length',\n                  'x-middleware-rewrite',\n                  'x-middleware-redirect',\n                  'x-middleware-refresh',\n                ].includes(key)\n              ) {\n                continue\n              }\n\n              // for set-cookie, the header shouldn't be added to the response\n              // as it's only needed for the request to the middleware function.\n              if (key === 'x-middleware-set-cookie') {\n                req.headers[key] = value\n                continue\n              }\n\n              if (value) {\n                resHeaders[key] = value\n                req.headers[key] = value\n              }\n            }\n\n            if (middlewareHeaders['x-middleware-rewrite']) {\n              const value = middlewareHeaders['x-middleware-rewrite'] as string\n              const rel = relativizeURL(value, initUrl)\n              resHeaders['x-middleware-rewrite'] = rel\n\n              const query = parsedUrl.query\n              parsedUrl = url.parse(rel, true)\n\n              if (parsedUrl.protocol) {\n                return {\n                  parsedUrl,\n                  resHeaders,\n                  finished: true,\n                }\n              }\n\n              // keep internal query state\n              for (const key of Object.keys(query)) {\n                if (key.startsWith('_next') || key.startsWith('__next')) {\n                  parsedUrl.query[key] = query[key]\n                }\n              }\n\n              if (config.i18n) {\n                const curLocaleResult = normalizeLocalePath(\n                  parsedUrl.pathname || '',\n                  config.i18n.locales\n                )\n\n                if (curLocaleResult.detectedLocale) {\n                  parsedUrl.query.__nextLocale = curLocaleResult.detectedLocale\n                }\n              }\n            }\n\n            if (middlewareHeaders['location']) {\n              const value = middlewareHeaders['location'] as string\n              const rel = relativizeURL(value, initUrl)\n              resHeaders['location'] = rel\n              parsedUrl = url.parse(rel, true)\n\n              return {\n                parsedUrl,\n                resHeaders,\n                finished: true,\n                statusCode: middlewareRes.status,\n              }\n            }\n\n            if (middlewareHeaders['x-middleware-refresh']) {\n              return {\n                parsedUrl,\n                resHeaders,\n                finished: true,\n                bodyStream,\n                statusCode: middlewareRes.status,\n              }\n            }\n          }\n        }\n\n        // handle redirect\n        if (\n          ('statusCode' in route || 'permanent' in route) &&\n          route.destination\n        ) {\n          const { parsedDestination } = prepareDestination({\n            appendParamsToQuery: false,\n            destination: route.destination,\n            params: params,\n            query: parsedUrl.query,\n          })\n\n          const { query } = parsedDestination\n          delete (parsedDestination as any).query\n\n          parsedDestination.search = stringifyQuery(req as any, query)\n\n          parsedDestination.pathname = normalizeRepeatedSlashes(\n            parsedDestination.pathname\n          )\n\n          return {\n            finished: true,\n            // @ts-expect-error custom ParsedUrl\n            parsedUrl: parsedDestination,\n            statusCode: getRedirectStatus(route),\n          }\n        }\n\n        // handle headers\n        if (route.headers) {\n          const hasParams = Object.keys(params).length > 0\n          for (const header of route.headers) {\n            let { key, value } = header\n            if (hasParams) {\n              key = compileNonPath(key, params)\n              value = compileNonPath(value, params)\n            }\n\n            if (key.toLowerCase() === 'set-cookie') {\n              if (!Array.isArray(resHeaders[key])) {\n                const val = resHeaders[key]\n                resHeaders[key] = typeof val === 'string' ? [val] : []\n              }\n              ;(resHeaders[key] as string[]).push(value)\n            } else {\n              resHeaders[key] = value\n            }\n          }\n        }\n\n        // handle rewrite\n        if (route.destination) {\n          let rewriteParams = params\n\n          try {\n            // An interception rewrite might reference a dynamic param for a route the user\n            // is currently on, which wouldn't be extractable from the matched route params.\n            // This attempts to extract the dynamic params from the provided router state.\n            if (isInterceptionRouteRewrite(route as Rewrite)) {\n              const stateHeader =\n                req.headers[NEXT_ROUTER_STATE_TREE_HEADER.toLowerCase()]\n\n              if (stateHeader) {\n                rewriteParams = {\n                  ...getSelectedParams(\n                    parseAndValidateFlightRouterState(stateHeader)\n                  ),\n                  ...params,\n                }\n              }\n            }\n          } catch (err) {\n            // this is a no-op -- we couldn't extract dynamic params from the provided router state,\n            // so we'll just use the params from the route matcher\n          }\n\n          const { parsedDestination } = prepareDestination({\n            appendParamsToQuery: true,\n            destination: route.destination,\n            params: rewriteParams,\n            query: parsedUrl.query,\n          })\n\n          if (parsedDestination.protocol) {\n            return {\n              // @ts-expect-error custom ParsedUrl\n              parsedUrl: parsedDestination,\n              finished: true,\n            }\n          }\n\n          if (config.i18n) {\n            const curLocaleResult = normalizeLocalePath(\n              removePathPrefix(parsedDestination.pathname, config.basePath),\n              config.i18n.locales\n            )\n\n            if (curLocaleResult.detectedLocale) {\n              parsedUrl.query.__nextLocale = curLocaleResult.detectedLocale\n            }\n          }\n          didRewrite = true\n          parsedUrl.pathname = parsedDestination.pathname\n          Object.assign(parsedUrl.query, parsedDestination.query)\n        }\n\n        // handle check: true\n        if (route.check) {\n          const output = await checkTrue()\n\n          if (output) {\n            return {\n              parsedUrl,\n              resHeaders,\n              finished: true,\n              matchedOutput: output,\n            }\n          }\n        }\n      }\n    }\n\n    for (const route of routes) {\n      const result = await handleRoute(route)\n      if (result) {\n        return result\n      }\n    }\n\n    return {\n      finished,\n      parsedUrl,\n      resHeaders,\n      matchedOutput,\n    }\n  }\n\n  return resolveRoutes\n}\n"],"names":["getResolveRoutes","debug","setupDebug","fsChecker","config","opts","renderServer","renderServerOpts","ensureMiddleware","routes","match","name","minimalMode","headers","redirects","rewrites","beforeFiles","afterFiles","check","fallback","resolveRoutes","req","res","isUpgradeReq","invokedOutputs","finished","resHeaders","matchedOutput","parsedUrl","url","parse","didRewrite","urlParts","split","urlNoQuery","normalizeRepeatedSlashes","statusCode","protocol","socket","encrypted","includes","initUrl","experimental","trustHostHeader","host","port","formatHostname","hostname","addRequestMeta","query","getCloneableBody","maybeAddTrailingSlash","pathname","trailingSlash","skipMiddlewareUrlNormalize","endsWith","domainLocale","defaultLocale","initialLocaleResult","undefined","i18n","hadTrailingSlash","hadBasePath","pathHasPrefix","basePath","normalizeLocalePath","removePathPrefix","locales","detectDomainLocale","domains","getHostname","__nextDefaultLocale","__nextLocale","detectedLocale","startsWith","addPathPrefix","__nextInferredLocaleFromDefault","checkLocaleApi","checkTrue","has","output","getItem","useFileSystemPublicRoutes","type","dynamicRoutes","getDynamicRoutes","curPathname","substring","length","localeResult","handleLocale","route","page","params","pageOutput","__nextDataReq","normalizers","BasePathPathnameNormalizer","data","NextDataPathnameNormalizer","buildId","handleRoute","internal","isDefaultLocale","missing","hasParams","matchHas","Object","assign","exportPathMapRoutes","exportPathMapRoute","result","getMiddlewareMatchers","normalized","normalize","updated","curLocaleResult","path","posix","join","locale","serverResult","initialize","Error","middlewareRes","bodyStream","requestHandler","err","response","status","body","ReadableStream","start","controller","enqueue","close","e","isAbortError","closed","middlewareHeaders","toNodeOutgoingHttpHeaders","overriddenHeaders","Set","overrideHeaders","key","add","trim","keys","valueKey","newValue","oldValue","value","entries","filterReqHeaders","ipcForbiddenHeaders","rel","relativizeURL","destination","parsedDestination","prepareDestination","appendParamsToQuery","search","stringifyQuery","getRedirectStatus","header","compileNonPath","toLowerCase","Array","isArray","val","push","rewriteParams","isInterceptionRouteRewrite","stateHeader","NEXT_ROUTER_STATE_TREE_HEADER","getSelectedParams","parseAndValidateFlightRouterState"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4296, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4301, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/i18n-provider.ts"],"sourcesContent":["import type { DomainLocale, I18NConfig } from '../config-shared'\nimport type { NextParsedUrlQuery } from '../request-meta'\n\n/**\n * The result of matching a locale aware route.\n */\nexport interface LocaleAnalysisResult {\n  /**\n   * The pathname without the locale prefix (if any).\n   */\n  pathname: string\n\n  /**\n   * The detected locale. If no locale was detected, this will be `undefined`.\n   */\n  detectedLocale?: string\n\n  /**\n   * True if the locale was inferred from the default locale.\n   */\n  inferredFromDefault: boolean\n}\n\ntype LocaleAnalysisOptions = {\n  /**\n   * When provided, it will be used as the default locale if the locale\n   * cannot be inferred from the pathname.\n   */\n  defaultLocale?: string\n}\n\n/**\n * The I18NProvider is used to match locale aware routes, detect the locale from\n * the pathname and hostname and normalize the pathname by removing the locale\n * prefix.\n */\nexport class I18NProvider {\n  private readonly lowerCaseLocales: ReadonlyArray<string>\n  private readonly lowerCaseDomains?: ReadonlyArray<\n    DomainLocale & {\n      // The configuration references a domain with an optional port, but the\n      // hostname is always the domain without the port and is used for\n      // matching.\n      hostname: string\n    }\n  >\n\n  constructor(public readonly config: Readonly<I18NConfig>) {\n    if (!config.locales.length) {\n      throw new Error('Invariant: No locales provided')\n    }\n\n    this.lowerCaseLocales = config.locales.map((locale) => locale.toLowerCase())\n    this.lowerCaseDomains = config.domains?.map((domainLocale) => {\n      const domain = domainLocale.domain.toLowerCase()\n      return {\n        defaultLocale: domainLocale.defaultLocale.toLowerCase(),\n        hostname: domain.split(':', 1)[0],\n        domain,\n        locales: domainLocale.locales?.map((locale) => locale.toLowerCase()),\n        http: domainLocale.http,\n      }\n    })\n  }\n\n  /**\n   * Detects the domain locale from the hostname and the detected locale if\n   * provided.\n   *\n   * @param hostname The hostname to detect the domain locale from, this must be lowercased.\n   * @param detectedLocale The detected locale to use if the hostname does not match.\n   * @returns The domain locale if found, `undefined` otherwise.\n   */\n  public detectDomainLocale(\n    hostname?: string,\n    detectedLocale?: string\n  ): DomainLocale | undefined {\n    if (!hostname || !this.lowerCaseDomains || !this.config.domains) return\n\n    if (detectedLocale) detectedLocale = detectedLocale.toLowerCase()\n\n    for (let i = 0; i < this.lowerCaseDomains.length; i++) {\n      const domainLocale = this.lowerCaseDomains[i]\n      if (\n        // We assume that the hostname is already lowercased.\n        domainLocale.hostname === hostname ||\n        // Configuration validation ensures that the locale is not repeated in\n        // other domains locales.\n        domainLocale.locales?.some((locale) => locale === detectedLocale)\n      ) {\n        return this.config.domains[i]\n      }\n    }\n\n    return\n  }\n\n  /**\n   * Pulls the pre-computed locale and inference results from the query\n   * object.\n   *\n   * @param pathname the pathname that could contain a locale prefix\n   * @param query the query object\n   * @returns the locale analysis result\n   */\n  public fromQuery(\n    pathname: string,\n    query: NextParsedUrlQuery\n  ): LocaleAnalysisResult {\n    const detectedLocale = query.__nextLocale\n\n    // If a locale was detected on the query, analyze the pathname to ensure\n    // that the locale matches.\n    if (detectedLocale) {\n      const analysis = this.analyze(pathname)\n\n      // If the analysis contained a locale we should validate it against the\n      // query and strip it from the pathname.\n      if (analysis.detectedLocale) {\n        if (analysis.detectedLocale !== detectedLocale) {\n          throw new Error(\n            `Invariant: The detected locale does not match the locale in the query. Expected to find '${detectedLocale}' in '${pathname}' but found '${analysis.detectedLocale}'}`\n          )\n        }\n\n        pathname = analysis.pathname\n      }\n    }\n\n    return {\n      pathname,\n      detectedLocale,\n      inferredFromDefault: query.__nextInferredLocaleFromDefault === '1',\n    }\n  }\n\n  /**\n   * Validates that the locale is valid.\n   *\n   * @param locale The locale to validate.\n   * @returns `true` if the locale is valid, `false` otherwise.\n   */\n  private validate(locale: string): boolean {\n    return this.lowerCaseLocales.includes(locale.toLowerCase())\n  }\n\n  /**\n   * Validates that the locales in the query object are valid.\n   *\n   * @param query The query object to validate.\n   * @returns `true` if the locale is valid, `false` otherwise.\n   */\n  public validateQuery(query: NextParsedUrlQuery) {\n    if (query.__nextLocale && !this.validate(query.__nextLocale)) {\n      return false\n    }\n\n    if (\n      query.__nextDefaultLocale &&\n      !this.validate(query.__nextDefaultLocale)\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  /**\n   * Analyzes the pathname for a locale and returns the pathname without it.\n   *\n   * @param pathname The pathname that could contain a locale prefix.\n   * @param options The options to use when matching the locale.\n   * @returns The matched locale and the pathname without the locale prefix\n   *          (if any).\n   */\n  public analyze(\n    pathname: string,\n    options: LocaleAnalysisOptions = {}\n  ): LocaleAnalysisResult {\n    let detectedLocale: string | undefined = options.defaultLocale\n\n    // By default, we assume that the default locale was inferred if there was\n    // no detected locale.\n    let inferredFromDefault = typeof detectedLocale === 'string'\n\n    // The first segment will be empty, because it has a leading `/`. If\n    // there is no further segment, there is no locale (or it's the default).\n    const segments = pathname.split('/', 2)\n    if (!segments[1])\n      return {\n        detectedLocale,\n        pathname,\n        inferredFromDefault,\n      }\n\n    // The second segment will contain the locale part if any.\n    const segment = segments[1].toLowerCase()\n\n    // See if the segment matches one of the locales. If it doesn't, there is\n    // no locale (or it's the default).\n    const index = this.lowerCaseLocales.indexOf(segment)\n    if (index < 0)\n      return {\n        detectedLocale,\n        pathname,\n        inferredFromDefault,\n      }\n\n    // Return the case-sensitive locale.\n    detectedLocale = this.config.locales[index]\n    inferredFromDefault = false\n\n    // Remove the `/${locale}` part of the pathname.\n    pathname = pathname.slice(detectedLocale.length + 1) || '/'\n\n    return {\n      detectedLocale,\n      pathname,\n      inferredFromDefault,\n    }\n  }\n}\n"],"names":["I18NProvider","constructor","config","locales","length","Error","lowerCaseLocales","map","locale","toLowerCase","lowerCaseDomains","domains","domainLocale","domain","defaultLocale","hostname","split","http","detectDomainLocale","detectedLocale","i","some","fromQuery","pathname","query","__nextLocale","analysis","analyze","inferredFromDefault","__nextInferredLocaleFromDefault","validate","includes","validateQuery","__nextDefaultLocale","options","segments","segment","index","indexOf","slice"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4443, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4448, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/match-next-data-pathname.ts"],"sourcesContent":["import { getPathMatch } from '../../shared/lib/router/utils/path-match'\n\nconst matcher = getPathMatch('/_next/data/:path*')\n\nexport function matchNextDataPathname(pathname: string | null | undefined) {\n  if (typeof pathname !== 'string') return false\n\n  return matcher(pathname)\n}\n"],"names":["matchNextDataPathname","matcher","getPathMatch","pathname"],"mappings":";;;;+BAIgBA,yBAAAA;;;eAAAA;;;2BAJa;AAE7B,MAAMC,UAAUC,CAAAA,GAAAA,WAAAA,YAAY,EAAC;AAEtB,SAASF,sBAAsBG,QAAmC;IACvE,IAAI,OAAOA,aAAa,UAAU,OAAO;IAEzC,OAAOF,QAAQE;AACjB","ignoreList":[0]}},
    {"offset": {"line": 4464, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4469, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/router-utils/decode-path-params.ts"],"sourcesContent":["import escapePathDelimiters from '../../../shared/lib/router/utils/escape-path-delimiters'\nimport { DecodeError } from '../../../shared/lib/utils'\n\n/**\n * We only encode path delimiters for path segments from\n * getStaticPaths so we need to attempt decoding the URL\n * to match against and only escape the path delimiters\n * this allows non-ascii values to be handled e.g.\n * Japanese characters.\n * */\nfunction decodePathParams(pathname: string): string {\n  // TODO: investigate adding this handling for non-SSG\n  // pages so non-ascii names also work there.\n  return pathname\n    .split('/')\n    .map((seg) => {\n      try {\n        seg = escapePathDelimiters(decodeURIComponent(seg), true)\n      } catch (_) {\n        // An improperly encoded URL was provided\n        throw new DecodeError('Failed to decode path param(s).')\n      }\n      return seg\n    })\n    .join('/')\n}\n\nexport { decodePathParams }\n"],"names":["decodePathParams","pathname","split","map","seg","escapePathDelimiters","decodeURIComponent","_","DecodeError","join"],"mappings":";;;;+BA2BSA,oBAAAA;;;eAAAA;;;6EA3BwB;uBACL;;;;;;AAE5B;;;;;;GAMG,GACH,SAASA,iBAAiBC,QAAgB;IACxC,qDAAqD;IACrD,4CAA4C;IAC5C,OAAOA,SACJC,KAAK,CAAC,KACNC,GAAG,CAAC,CAACC;QACJ,IAAI;YACFA,MAAMC,CAAAA,GAAAA,sBAAAA,OAAoB,EAACC,mBAAmBF,MAAM;QACtD,EAAE,OAAOG,GAAG;YACV,yCAAyC;YACzC,MAAM,IAAIC,OAAAA,WAAW,CAAC;QACxB;QACA,OAAOJ;IACT,GACCK,IAAI,CAAC;AACV","ignoreList":[0]}},
    {"offset": {"line": 4505, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4510, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/patch-set-header.ts"],"sourcesContent":["import { getRequestMeta, type NextIncomingMessage } from '../request-meta'\n\ntype PatchableResponse = {\n  setHeader(key: string, value: string | string[]): PatchableResponse\n}\n\n/**\n * Ensure cookies set in middleware are merged and not overridden by API\n * routes/getServerSideProps.\n *\n * @param req Incoming request\n * @param res Outgoing response\n */\nexport function patchSetHeaderWithCookieSupport(\n  req: NextIncomingMessage,\n  res: PatchableResponse\n) {\n  const setHeader = res.setHeader.bind(res)\n  res.setHeader = (\n    name: string,\n    value: string | string[]\n  ): PatchableResponse => {\n    // When renders /_error after page is failed, it could attempt to set\n    // headers after headers.\n    if ('headersSent' in res && res.headersSent) {\n      return res\n    }\n\n    if (name.toLowerCase() === 'set-cookie') {\n      const middlewareValue = getRequestMeta(req, 'middlewareCookie')\n\n      if (\n        !middlewareValue ||\n        !Array.isArray(value) ||\n        !value.every((item, idx) => item === middlewareValue[idx])\n      ) {\n        value = [\n          // TODO: (wyattjoh) find out why this is called multiple times resulting in duplicate cookies being added\n          ...new Set([\n            ...(middlewareValue || []),\n            ...(typeof value === 'string'\n              ? [value]\n              : Array.isArray(value)\n                ? value\n                : []),\n          ]),\n        ]\n      }\n    }\n\n    return setHeader(name, value)\n  }\n}\n"],"names":["patchSetHeaderWithCookieSupport","req","res","setHeader","bind","name","value","headersSent","toLowerCase","middlewareValue","getRequestMeta","Array","isArray","every","item","idx","Set"],"mappings":";;;;+BAagBA,mCAAAA;;;eAAAA;;;6BAbyC;AAalD,SAASA,gCACdC,GAAwB,EACxBC,GAAsB;IAEtB,MAAMC,YAAYD,IAAIC,SAAS,CAACC,IAAI,CAACF;IACrCA,IAAIC,SAAS,GAAG,CACdE,MACAC;QAEA,qEAAqE;QACrE,yBAAyB;QACzB,IAAI,iBAAiBJ,OAAOA,IAAIK,WAAW,EAAE;YAC3C,OAAOL;QACT;QAEA,IAAIG,KAAKG,WAAW,OAAO,cAAc;YACvC,MAAMC,kBAAkBC,CAAAA,GAAAA,aAAAA,cAAc,EAACT,KAAK;YAE5C,IACE,CAACQ,mBACD,CAACE,MAAMC,OAAO,CAACN,UACf,CAACA,MAAMO,KAAK,CAAC,CAACC,MAAMC,MAAQD,SAASL,eAAe,CAACM,IAAI,GACzD;gBACAT,QAAQ;oBACN,yGAAyG;uBACtG,IAAIU,IAAI;2BACLP,mBAAmB,EAAE;2BACrB,OAAOH,UAAU,WACjB;4BAACA;yBAAM,GACPK,MAAMC,OAAO,CAACN,SACZA,QACA,EAAE;qBACT;iBACF;YACH;QACF;QAEA,OAAOH,UAAUE,MAAMC;IACzB;AACF","ignoreList":[0]}},
    {"offset": {"line": 4546, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4551, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/dev-bundler-service.ts"],"sourcesContent":["import type { IncomingMessage } from 'http'\nimport type { DevBundler } from './router-utils/setup-dev-bundler'\nimport type { WorkerRequestHandler } from './types'\n\nimport { LRUCache } from './lru-cache'\nimport { createRequestResponseMocks } from './mock-request'\nimport { HMR_ACTIONS_SENT_TO_BROWSER } from '../dev/hot-reloader-types'\n\n/**\n * The DevBundlerService provides an interface to perform tasks with the\n * bundler while in development.\n */\nexport class DevBundlerService {\n  public appIsrManifestInner: InstanceType<typeof LRUCache>\n\n  constructor(\n    private readonly bundler: DevBundler,\n    private readonly handler: WorkerRequestHandler\n  ) {\n    this.appIsrManifestInner = new LRUCache(\n      8_000,\n\n      function length() {\n        return 16\n      }\n    ) as any\n  }\n\n  public ensurePage: typeof this.bundler.hotReloader.ensurePage = async (\n    definition\n  ) => {\n    // TODO: remove after ensure is pulled out of server\n    return await this.bundler.hotReloader.ensurePage(definition)\n  }\n\n  public logErrorWithOriginalStack =\n    this.bundler.logErrorWithOriginalStack.bind(this.bundler)\n\n  public async getFallbackErrorComponents(url?: string) {\n    await this.bundler.hotReloader.buildFallbackError()\n    // Build the error page to ensure the fallback is built too.\n    // TODO: See if this can be moved into hotReloader or removed.\n    await this.bundler.hotReloader.ensurePage({\n      page: '/_error',\n      clientOnly: false,\n      definition: undefined,\n      url,\n    })\n  }\n\n  public async getCompilationError(page: string) {\n    const errors = await this.bundler.hotReloader.getCompilationErrors(page)\n    if (!errors) return\n\n    // Return the very first error we found.\n    return errors[0]\n  }\n\n  public async revalidate({\n    urlPath,\n    revalidateHeaders,\n    opts: revalidateOpts,\n  }: {\n    urlPath: string\n    revalidateHeaders: IncomingMessage['headers']\n    opts: any\n  }) {\n    const mocked = createRequestResponseMocks({\n      url: urlPath,\n      headers: revalidateHeaders,\n    })\n\n    await this.handler(mocked.req, mocked.res)\n    await mocked.res.hasStreamed\n\n    if (\n      mocked.res.getHeader('x-nextjs-cache') !== 'REVALIDATED' &&\n      !(mocked.res.statusCode === 404 && revalidateOpts.unstable_onlyGenerated)\n    ) {\n      throw new Error(`Invalid response ${mocked.res.statusCode}`)\n    }\n\n    return {}\n  }\n\n  public get appIsrManifest() {\n    const serializableManifest: Record<string, boolean> = {}\n\n    for (const key of this.appIsrManifestInner.keys() as string[]) {\n      serializableManifest[key] = this.appIsrManifestInner.get(key) as boolean\n    }\n    return serializableManifest\n  }\n\n  public setAppIsrStatus(key: string, value: boolean | null) {\n    if (value === null) {\n      this.appIsrManifestInner.remove(key)\n    } else {\n      this.appIsrManifestInner.set(key, value)\n    }\n    this.bundler?.hotReloader?.send({\n      action: HMR_ACTIONS_SENT_TO_BROWSER.APP_ISR_MANIFEST,\n      data: this.appIsrManifest,\n    })\n  }\n}\n"],"names":["DevBundlerService","constructor","bundler","handler","ensurePage","definition","hotReloader","logErrorWithOriginalStack","bind","appIsrManifestInner","LRUCache","length","getFallbackErrorComponents","url","buildFallbackError","page","clientOnly","undefined","getCompilationError","errors","getCompilationErrors","revalidate","urlPath","revalidateHeaders","opts","revalidateOpts","mocked","createRequestResponseMocks","headers","req","res","hasStreamed","getHeader","statusCode","unstable_onlyGenerated","Error","appIsrManifest","serializableManifest","key","keys","get","setAppIsrStatus","value","remove","set","send","action","HMR_ACTIONS_SENT_TO_BROWSER","APP_ISR_MANIFEST","data"],"mappings":";;;;+BAYaA,qBAAAA;;;eAAAA;;;0BARY;6BACkB;kCACC;AAMrC,MAAMA;IAGXC,YACmBC,OAAmB,EACnBC,OAA6B,CAC9C;aAFiBD,OAAAA,GAAAA;aACAC,OAAAA,GAAAA;aAWZC,UAAAA,GAAyD,OAC9DC;YAEA,oDAAoD;YACpD,OAAO,MAAM,IAAI,CAACH,OAAO,CAACI,WAAW,CAACF,UAAU,CAACC;QACnD;aAEOE,yBAAAA,GACL,IAAI,CAACL,OAAO,CAACK,yBAAyB,CAACC,IAAI,CAAC,IAAI,CAACN,OAAO;QAjBxD,IAAI,CAACO,mBAAmB,GAAG,IAAIC,UAAAA,QAAQ,CACrC,MAEA,SAASC;YACP,OAAO;QACT;IAEJ;IAYA,MAAaC,2BAA2BC,GAAY,EAAE;QACpD,MAAM,IAAI,CAACX,OAAO,CAACI,WAAW,CAACQ,kBAAkB;QACjD,4DAA4D;QAC5D,8DAA8D;QAC9D,MAAM,IAAI,CAACZ,OAAO,CAACI,WAAW,CAACF,UAAU,CAAC;YACxCW,MAAM;YACNC,YAAY;YACZX,YAAYY;YACZJ;QACF;IACF;IAEA,MAAaK,oBAAoBH,IAAY,EAAE;QAC7C,MAAMI,SAAS,MAAM,IAAI,CAACjB,OAAO,CAACI,WAAW,CAACc,oBAAoB,CAACL;QACnE,IAAI,CAACI,QAAQ;QAEb,wCAAwC;QACxC,OAAOA,MAAM,CAAC,EAAE;IAClB;IAEA,MAAaE,WAAW,EACtBC,OAAO,EACPC,iBAAiB,EACjBC,MAAMC,cAAc,EAKrB,EAAE;QACD,MAAMC,SAASC,CAAAA,GAAAA,aAAAA,0BAA0B,EAAC;YACxCd,KAAKS;YACLM,SAASL;QACX;QAEA,MAAM,IAAI,CAACpB,OAAO,CAACuB,OAAOG,GAAG,EAAEH,OAAOI,GAAG;QACzC,MAAMJ,OAAOI,GAAG,CAACC,WAAW;QAE5B,IACEL,OAAOI,GAAG,CAACE,SAAS,CAAC,sBAAsB,iBAC3C,CAAEN,CAAAA,OAAOI,GAAG,CAACG,UAAU,KAAK,OAAOR,eAAeS,sBAAqB,GACvE;YACA,MAAM,IAAIC,MAAM,CAAC,iBAAiB,EAAET,OAAOI,GAAG,CAACG,UAAU,EAAE;QAC7D;QAEA,OAAO,CAAC;IACV;IAEA,IAAWG,iBAAiB;QAC1B,MAAMC,uBAAgD,CAAC;QAEvD,KAAK,MAAMC,OAAO,IAAI,CAAC7B,mBAAmB,CAAC8B,IAAI,GAAgB;YAC7DF,oBAAoB,CAACC,IAAI,GAAG,IAAI,CAAC7B,mBAAmB,CAAC+B,GAAG,CAACF;QAC3D;QACA,OAAOD;IACT;IAEOI,gBAAgBH,GAAW,EAAEI,KAAqB,EAAE;YAMzD,2BAAA;QALA,IAAIA,UAAU,MAAM;YAClB,IAAI,CAACjC,mBAAmB,CAACkC,MAAM,CAACL;QAClC,OAAO;YACL,IAAI,CAAC7B,mBAAmB,CAACmC,GAAG,CAACN,KAAKI;QACpC;SACA,gBAAA,IAAI,CAACxC,OAAO,KAAA,OAAA,KAAA,IAAA,CAAZ,4BAAA,cAAcI,WAAW,KAAA,OAAA,KAAA,IAAzB,0BAA2BuC,IAAI,CAAC;YAC9BC,QAAQC,kBAAAA,2BAA2B,CAACC,gBAAgB;YACpDC,MAAM,IAAI,CAACb,cAAc;QAC3B;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 4626, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4631, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/clone-response.ts"],"sourcesContent":["/**\n * Clones a response by teeing the body so we can return two independent\n * ReadableStreams from it. This avoids the bug in the undici library around\n * response cloning.\n *\n * After cloning, the original response's body will be consumed and closed.\n *\n * @see https://github.com/vercel/next.js/pull/73274\n *\n * @param original - The original response to clone.\n * @returns A tuple containing two independent clones of the original response.\n */\nexport function cloneResponse(original: Response): [Response, Response] {\n  // If the response has no body, then we can just return the original response\n  // twice because it's immutable.\n  if (!original.body) {\n    return [original, original]\n  }\n\n  const [body1, body2] = original.body.tee()\n\n  const cloned1 = new Response(body1, {\n    status: original.status,\n    statusText: original.statusText,\n    headers: original.headers,\n  })\n\n  Object.defineProperty(cloned1, 'url', {\n    value: original.url,\n  })\n\n  const cloned2 = new Response(body2, {\n    status: original.status,\n    statusText: original.statusText,\n    headers: original.headers,\n  })\n\n  Object.defineProperty(cloned2, 'url', {\n    value: original.url,\n  })\n\n  return [cloned1, cloned2]\n}\n"],"names":["cloneResponse","original","body","body1","body2","tee","cloned1","Response","status","statusText","headers","Object","defineProperty","value","url","cloned2"],"mappings":"AAAA;;;;;;;;;;;CAWC,GAAA;;;;+BACeA,iBAAAA;;;eAAAA;;;AAAT,SAASA,cAAcC,QAAkB;IAC9C,6EAA6E;IAC7E,gCAAgC;IAChC,IAAI,CAACA,SAASC,IAAI,EAAE;QAClB,OAAO;YAACD;YAAUA;SAAS;IAC7B;IAEA,MAAM,CAACE,OAAOC,MAAM,GAAGH,SAASC,IAAI,CAACG,GAAG;IAExC,MAAMC,UAAU,IAAIC,SAASJ,OAAO;QAClCK,QAAQP,SAASO,MAAM;QACvBC,YAAYR,SAASQ,UAAU;QAC/BC,SAAST,SAASS,OAAO;IAC3B;IAEAC,OAAOC,cAAc,CAACN,SAAS,OAAO;QACpCO,OAAOZ,SAASa,GAAG;IACrB;IAEA,MAAMC,UAAU,IAAIR,SAASH,OAAO;QAClCI,QAAQP,SAASO,MAAM;QACvBC,YAAYR,SAASQ,UAAU;QAC/BC,SAAST,SAASS,OAAO;IAC3B;IAEAC,OAAOC,cAAc,CAACG,SAAS,OAAO;QACpCF,OAAOZ,SAASa,GAAG;IACrB;IAEA,OAAO;QAACR;QAASS;KAAQ;AAC3B","ignoreList":[0]}},
    {"offset": {"line": 4683, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4688, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/dedupe-fetch.ts"],"sourcesContent":["/**\n * Based on https://github.com/facebook/react/blob/d4e78c42a94be027b4dc7ed2659a5fddfbf9bd4e/packages/react/src/ReactFetch.js\n */\nimport * as React from 'react'\nimport { cloneResponse } from './clone-response'\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\nconst simpleCacheKey = '[\"GET\",[],null,\"follow\",null,null,null,null]' // generateCacheKey(new Request('https://blank'));\n\nfunction generateCacheKey(request: Request): string {\n  // We pick the fields that goes into the key used to dedupe requests.\n  // We don't include the `cache` field, because we end up using whatever\n  // caching resulted from the first request.\n  // Notably we currently don't consider non-standard (or future) options.\n  // This might not be safe. TODO: warn for non-standard extensions differing.\n  // IF YOU CHANGE THIS UPDATE THE simpleCacheKey ABOVE.\n  return JSON.stringify([\n    request.method,\n    Array.from(request.headers.entries()),\n    request.mode,\n    request.redirect,\n    request.credentials,\n    request.referrer,\n    request.referrerPolicy,\n    request.integrity,\n  ])\n}\n\ntype CacheEntry = [\n  key: string,\n  promise: Promise<Response>,\n  response: Response | null,\n]\n\nexport function createDedupeFetch(originalFetch: typeof fetch) {\n  const getCacheEntries = React.cache(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars -- url is the cache key\n    (url: string): CacheEntry[] => []\n  )\n\n  return function dedupeFetch(\n    resource: URL | RequestInfo,\n    options?: RequestInit\n  ): Promise<Response> {\n    if (options && options.signal) {\n      // If we're passed a signal, then we assume that\n      // someone else controls the lifetime of this object and opts out of\n      // caching. It's effectively the opt-out mechanism.\n      // Ideally we should be able to check this on the Request but\n      // it always gets initialized with its own signal so we don't\n      // know if it's supposed to override - unless we also override the\n      // Request constructor.\n      return originalFetch(resource, options)\n    }\n    // Normalize the Request\n    let url: string\n    let cacheKey: string\n    if (typeof resource === 'string' && !options) {\n      // Fast path.\n      cacheKey = simpleCacheKey\n      url = resource\n    } else {\n      // Normalize the request.\n      // if resource is not a string or a URL (its an instance of Request)\n      // then do not instantiate a new Request but instead\n      // reuse the request as to not disturb the body in the event it's a ReadableStream.\n      const request =\n        typeof resource === 'string' || resource instanceof URL\n          ? new Request(resource, options)\n          : resource\n      if (\n        (request.method !== 'GET' && request.method !== 'HEAD') ||\n        request.keepalive\n      ) {\n        // We currently don't dedupe requests that might have side-effects. Those\n        // have to be explicitly cached. We assume that the request doesn't have a\n        // body if it's GET or HEAD.\n        // keepalive gets treated the same as if you passed a custom cache signal.\n        return originalFetch(resource, options)\n      }\n      cacheKey = generateCacheKey(request)\n      url = request.url\n    }\n\n    const cacheEntries = getCacheEntries(url)\n    for (let i = 0, j = cacheEntries.length; i < j; i += 1) {\n      const [key, promise] = cacheEntries[i]\n      if (key === cacheKey) {\n        return promise.then(() => {\n          const response = cacheEntries[i][2]\n          if (!response) throw new InvariantError('No cached response')\n\n          // We're cloning the response using this utility because there exists\n          // a bug in the undici library around response cloning. See the\n          // following pull request for more details:\n          // https://github.com/vercel/next.js/pull/73274\n          const [cloned1, cloned2] = cloneResponse(response)\n          cacheEntries[i][2] = cloned2\n          return cloned1\n        })\n      }\n    }\n\n    // We pass the original arguments here in case normalizing the Request\n    // doesn't include all the options in this environment.\n    const promise = originalFetch(resource, options)\n    const entry: CacheEntry = [cacheKey, promise, null]\n    cacheEntries.push(entry)\n\n    return promise.then((response) => {\n      // We're cloning the response using this utility because there exists\n      // a bug in the undici library around response cloning. See the\n      // following pull request for more details:\n      // https://github.com/vercel/next.js/pull/73274\n      const [cloned1, cloned2] = cloneResponse(response)\n      entry[2] = cloned2\n      return cloned1\n    })\n  }\n}\n"],"names":["createDedupeFetch","simpleCacheKey","generateCacheKey","request","JSON","stringify","method","Array","from","headers","entries","mode","redirect","credentials","referrer","referrerPolicy","integrity","originalFetch","getCacheEntries","React","cache","url","dedupeFetch","resource","options","signal","cacheKey","URL","Request","keepalive","cacheEntries","i","j","length","key","promise","then","response","InvariantError","cloned1","cloned2","cloneResponse","entry","push"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4837, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4842, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/patch-fetch.ts"],"sourcesContent":["import type {\n  WorkAsyncStorage,\n  WorkStore,\n} from '../app-render/work-async-storage.external'\n\nimport { AppRenderSpan, NextNodeServerSpan } from './trace/constants'\nimport { getTracer, SpanKind } from './trace/tracer'\nimport {\n  CACHE_ONE_YEAR,\n  INFINITE_CACHE,\n  NEXT_CACHE_TAG_MAX_ITEMS,\n  NEXT_CACHE_TAG_MAX_LENGTH,\n} from '../../lib/constants'\nimport { markCurrentScopeAsDynamic } from '../app-render/dynamic-rendering'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport type { FetchMetric } from '../base-http'\nimport { createDedupeFetch } from './dedupe-fetch'\nimport type {\n  WorkUnitAsyncStorage,\n  RequestStore,\n} from '../app-render/work-unit-async-storage.external'\nimport {\n  CachedRouteKind,\n  IncrementalCacheKind,\n  type CachedFetchData,\n} from '../response-cache'\nimport { waitAtLeastOneReactRenderTask } from '../../lib/scheduler'\nimport { cloneResponse } from './clone-response'\n\nconst isEdgeRuntime = process.env.NEXT_RUNTIME === 'edge'\n\ntype Fetcher = typeof fetch\n\ntype PatchedFetcher = Fetcher & {\n  readonly __nextPatched: true\n  readonly __nextGetStaticStore: () => WorkAsyncStorage\n  readonly _nextOriginalFetch: Fetcher\n}\n\nexport const NEXT_PATCH_SYMBOL = Symbol.for('next-patch')\n\nfunction isFetchPatched() {\n  return (globalThis as Record<symbol, unknown>)[NEXT_PATCH_SYMBOL] === true\n}\n\nexport function validateRevalidate(\n  revalidateVal: unknown,\n  route: string\n): undefined | number {\n  try {\n    let normalizedRevalidate: number | undefined = undefined\n\n    if (revalidateVal === false) {\n      normalizedRevalidate = INFINITE_CACHE\n    } else if (\n      typeof revalidateVal === 'number' &&\n      !isNaN(revalidateVal) &&\n      revalidateVal > -1\n    ) {\n      normalizedRevalidate = revalidateVal\n    } else if (typeof revalidateVal !== 'undefined') {\n      throw new Error(\n        `Invalid revalidate value \"${revalidateVal}\" on \"${route}\", must be a non-negative number or false`\n      )\n    }\n    return normalizedRevalidate\n  } catch (err: any) {\n    // handle client component error from attempting to check revalidate value\n    if (err instanceof Error && err.message.includes('Invalid revalidate')) {\n      throw err\n    }\n    return undefined\n  }\n}\n\nexport function validateTags(tags: any[], description: string) {\n  const validTags: string[] = []\n  const invalidTags: Array<{\n    tag: any\n    reason: string\n  }> = []\n\n  for (let i = 0; i < tags.length; i++) {\n    const tag = tags[i]\n\n    if (typeof tag !== 'string') {\n      invalidTags.push({ tag, reason: 'invalid type, must be a string' })\n    } else if (tag.length > NEXT_CACHE_TAG_MAX_LENGTH) {\n      invalidTags.push({\n        tag,\n        reason: `exceeded max length of ${NEXT_CACHE_TAG_MAX_LENGTH}`,\n      })\n    } else {\n      validTags.push(tag)\n    }\n\n    if (validTags.length > NEXT_CACHE_TAG_MAX_ITEMS) {\n      console.warn(\n        `Warning: exceeded max tag count for ${description}, dropped tags:`,\n        tags.slice(i).join(', ')\n      )\n      break\n    }\n  }\n\n  if (invalidTags.length > 0) {\n    console.warn(`Warning: invalid tags passed to ${description}: `)\n\n    for (const { tag, reason } of invalidTags) {\n      console.log(`tag: \"${tag}\" ${reason}`)\n    }\n  }\n  return validTags\n}\n\nfunction trackFetchMetric(\n  workStore: WorkStore,\n  ctx: Omit<FetchMetric, 'end' | 'idx'>\n) {\n  // If the static generation store is not available, we can't track the fetch\n  if (!workStore) return\n  if (workStore.requestEndedState?.ended) return\n\n  const isDebugBuild =\n    (!!process.env.NEXT_DEBUG_BUILD ||\n      process.env.NEXT_SSG_FETCH_METRICS === '1') &&\n    workStore.isStaticGeneration\n  const isDevelopment = process.env.NODE_ENV === 'development'\n\n  if (\n    // The only time we want to track fetch metrics outside of development is when\n    // we are performing a static generation & we are in debug mode.\n    !isDebugBuild &&\n    !isDevelopment\n  ) {\n    return\n  }\n\n  workStore.fetchMetrics ??= []\n\n  workStore.fetchMetrics.push({\n    ...ctx,\n    end: performance.timeOrigin + performance.now(),\n    idx: workStore.nextFetchId || 0,\n  })\n}\n\ninterface PatchableModule {\n  workAsyncStorage: WorkAsyncStorage\n  workUnitAsyncStorage: WorkUnitAsyncStorage\n}\n\nexport function createPatchedFetcher(\n  originFetch: Fetcher,\n  { workAsyncStorage, workUnitAsyncStorage }: PatchableModule\n): PatchedFetcher {\n  // Create the patched fetch function. We don't set the type here, as it's\n  // verified as the return value of this function.\n  const patched = async (\n    input: RequestInfo | URL,\n    init: RequestInit | undefined\n  ) => {\n    let url: URL | undefined\n    try {\n      url = new URL(input instanceof Request ? input.url : input)\n      url.username = ''\n      url.password = ''\n    } catch {\n      // Error caused by malformed URL should be handled by native fetch\n      url = undefined\n    }\n    const fetchUrl = url?.href ?? ''\n    const method = init?.method?.toUpperCase() || 'GET'\n\n    // Do create a new span trace for internal fetches in the\n    // non-verbose mode.\n    const isInternal = (init?.next as any)?.internal === true\n    const hideSpan = process.env.NEXT_OTEL_FETCH_DISABLED === '1'\n    // We don't track fetch metrics for internal fetches\n    // so it's not critical that we have a start time, as it won't be recorded.\n    // This is to workaround a flaky issue where performance APIs might\n    // not be available and will require follow-up investigation.\n    const fetchStart: number | undefined = isInternal\n      ? undefined\n      : performance.timeOrigin + performance.now()\n\n    const workStore = workAsyncStorage.getStore()\n    const workUnitStore = workUnitAsyncStorage.getStore()\n\n    // During static generation we track cache reads so we can reason about when they fill\n    let cacheSignal =\n      workUnitStore && workUnitStore.type === 'prerender'\n        ? workUnitStore.cacheSignal\n        : null\n    if (cacheSignal) {\n      cacheSignal.beginRead()\n    }\n\n    const result = getTracer().trace(\n      isInternal ? NextNodeServerSpan.internalFetch : AppRenderSpan.fetch,\n      {\n        hideSpan,\n        kind: SpanKind.CLIENT,\n        spanName: ['fetch', method, fetchUrl].filter(Boolean).join(' '),\n        attributes: {\n          'http.url': fetchUrl,\n          'http.method': method,\n          'net.peer.name': url?.hostname,\n          'net.peer.port': url?.port || undefined,\n        },\n      },\n      async () => {\n        // If this is an internal fetch, we should not do any special treatment.\n        if (isInternal) {\n          return originFetch(input, init)\n        }\n\n        // If the workStore is not available, we can't do any\n        // special treatment of fetch, therefore fallback to the original\n        // fetch implementation.\n        if (!workStore) {\n          return originFetch(input, init)\n        }\n\n        // We should also fallback to the original fetch implementation if we\n        // are in draft mode, it does not constitute a static generation.\n        if (workStore.isDraftMode) {\n          return originFetch(input, init)\n        }\n\n        const isRequestInput =\n          input &&\n          typeof input === 'object' &&\n          typeof (input as Request).method === 'string'\n\n        const getRequestMeta = (field: string) => {\n          // If request input is present but init is not, retrieve from input first.\n          const value = (init as any)?.[field]\n          return value || (isRequestInput ? (input as any)[field] : null)\n        }\n\n        let finalRevalidate: number | undefined = undefined\n        const getNextField = (field: 'revalidate' | 'tags') => {\n          return typeof init?.next?.[field] !== 'undefined'\n            ? init?.next?.[field]\n            : isRequestInput\n              ? (input as any).next?.[field]\n              : undefined\n        }\n        // RequestInit doesn't keep extra fields e.g. next so it's\n        // only available if init is used separate\n        let currentFetchRevalidate = getNextField('revalidate')\n        const tags: string[] = validateTags(\n          getNextField('tags') || [],\n          `fetch ${input.toString()}`\n        )\n\n        const revalidateStore =\n          workUnitStore &&\n          (workUnitStore.type === 'cache' ||\n            workUnitStore.type === 'prerender' ||\n            workUnitStore.type === 'prerender-ppr' ||\n            workUnitStore.type === 'prerender-legacy')\n            ? workUnitStore\n            : undefined\n\n        if (revalidateStore) {\n          if (Array.isArray(tags)) {\n            // Collect tags onto parent caches or parent prerenders.\n            const collectedTags =\n              revalidateStore.tags ?? (revalidateStore.tags = [])\n            for (const tag of tags) {\n              if (!collectedTags.includes(tag)) {\n                collectedTags.push(tag)\n              }\n            }\n          }\n        }\n\n        const implicitTags =\n          !workUnitStore || workUnitStore.type === 'unstable-cache'\n            ? []\n            : workUnitStore.implicitTags\n\n        // Inside unstable-cache we treat it the same as force-no-store on the\n        // page.\n        const pageFetchCacheMode =\n          workUnitStore && workUnitStore.type === 'unstable-cache'\n            ? 'force-no-store'\n            : workStore.fetchCache\n\n        const isUsingNoStore = !!workStore.isUnstableNoStore\n\n        let currentFetchCacheConfig = getRequestMeta('cache')\n        let cacheReason = ''\n        let cacheWarning: string | undefined\n\n        if (\n          typeof currentFetchCacheConfig === 'string' &&\n          typeof currentFetchRevalidate !== 'undefined'\n        ) {\n          // If the revalidate value conflicts with the cache value, we should warn the user and unset the conflicting values.\n          const isConflictingRevalidate =\n            // revalidate: 0 and cache: force-cache\n            (currentFetchCacheConfig === 'force-cache' &&\n              currentFetchRevalidate === 0) ||\n            // revalidate: >0 or revalidate: false and cache: no-store\n            (currentFetchCacheConfig === 'no-store' &&\n              (currentFetchRevalidate > 0 || currentFetchRevalidate === false))\n\n          if (isConflictingRevalidate) {\n            cacheWarning = `Specified \"cache: ${currentFetchCacheConfig}\" and \"revalidate: ${currentFetchRevalidate}\", only one should be specified.`\n            currentFetchCacheConfig = undefined\n            currentFetchRevalidate = undefined\n          }\n        }\n\n        const hasExplicitFetchCacheOptOut =\n          // fetch config itself signals not to cache\n          currentFetchCacheConfig === 'no-cache' ||\n          currentFetchCacheConfig === 'no-store' ||\n          // the fetch isn't explicitly caching and the segment level cache config signals not to cache\n          // note: `pageFetchCacheMode` is also set by being in an unstable_cache context.\n          pageFetchCacheMode === 'force-no-store' ||\n          pageFetchCacheMode === 'only-no-store'\n\n        // If no explicit fetch cache mode is set, but dynamic = `force-dynamic` is set,\n        // we shouldn't consider caching the fetch. This is because the `dynamic` cache\n        // is considered a \"top-level\" cache mode, whereas something like `fetchCache` is more\n        // fine-grained. Top-level modes are responsible for setting reasonable defaults for the\n        // other configurations.\n        const noFetchConfigAndForceDynamic =\n          !pageFetchCacheMode &&\n          !currentFetchCacheConfig &&\n          !currentFetchRevalidate &&\n          workStore.forceDynamic\n\n        if (\n          // force-cache was specified without a revalidate value. We set the revalidate value to false\n          // which will signal the cache to not revalidate\n          currentFetchCacheConfig === 'force-cache' &&\n          typeof currentFetchRevalidate === 'undefined'\n        ) {\n          currentFetchRevalidate = false\n        } else if (\n          // if we are inside of \"use cache\"/\"unstable_cache\"\n          // we shouldn't set the revalidate to 0 as it's overridden\n          // by the cache context\n          workUnitStore?.type !== 'cache' &&\n          (hasExplicitFetchCacheOptOut || noFetchConfigAndForceDynamic)\n        ) {\n          currentFetchRevalidate = 0\n        }\n\n        if (\n          currentFetchCacheConfig === 'no-cache' ||\n          currentFetchCacheConfig === 'no-store'\n        ) {\n          cacheReason = `cache: ${currentFetchCacheConfig}`\n        }\n\n        finalRevalidate = validateRevalidate(\n          currentFetchRevalidate,\n          workStore.route\n        )\n\n        const _headers = getRequestMeta('headers')\n        const initHeaders: Headers =\n          typeof _headers?.get === 'function'\n            ? _headers\n            : new Headers(_headers || {})\n\n        const hasUnCacheableHeader =\n          initHeaders.get('authorization') || initHeaders.get('cookie')\n\n        const isUnCacheableMethod = !['get', 'head'].includes(\n          getRequestMeta('method')?.toLowerCase() || 'get'\n        )\n\n        /**\n         * We automatically disable fetch caching under the following conditions:\n         * - Fetch cache configs are not set. Specifically:\n         *    - A page fetch cache mode is not set (export const fetchCache=...)\n         *    - A fetch cache mode is not set in the fetch call (fetch(url, { cache: ... }))\n         *      or the fetch cache mode is set to 'default'\n         *    - A fetch revalidate value is not set in the fetch call (fetch(url, { revalidate: ... }))\n         * - OR the fetch comes after a configuration that triggered dynamic rendering (e.g., reading cookies())\n         *   and the fetch was considered uncacheable (e.g., POST method or has authorization headers)\n         */\n        const hasNoExplicitCacheConfig =\n          // eslint-disable-next-line eqeqeq\n          pageFetchCacheMode == undefined &&\n          // eslint-disable-next-line eqeqeq\n          (currentFetchCacheConfig == undefined ||\n            // when considering whether to opt into the default \"no-cache\" fetch semantics,\n            // a \"default\" cache config should be treated the same as no cache config\n            currentFetchCacheConfig === 'default') &&\n          // eslint-disable-next-line eqeqeq\n          currentFetchRevalidate == undefined\n        const autoNoCache =\n          // this condition is hit for null/undefined\n          // eslint-disable-next-line eqeqeq\n          (hasNoExplicitCacheConfig &&\n            // we disable automatic no caching behavior during build time SSG so that we can still\n            // leverage the fetch cache between SSG workers\n            !workStore.isPrerendering) ||\n          ((hasUnCacheableHeader || isUnCacheableMethod) &&\n            revalidateStore &&\n            revalidateStore.revalidate === 0)\n\n        if (\n          hasNoExplicitCacheConfig &&\n          workUnitStore !== undefined &&\n          workUnitStore.type === 'prerender'\n        ) {\n          // If we have no cache config, and we're in Dynamic I/O prerendering, it'll be a dynamic call.\n          // We don't have to issue that dynamic call.\n          if (cacheSignal) {\n            cacheSignal.endRead()\n            cacheSignal = null\n          }\n          return makeHangingPromise<Response>(\n            workUnitStore.renderSignal,\n            'fetch()'\n          )\n        }\n\n        switch (pageFetchCacheMode) {\n          case 'force-no-store': {\n            cacheReason = 'fetchCache = force-no-store'\n            break\n          }\n          case 'only-no-store': {\n            if (\n              currentFetchCacheConfig === 'force-cache' ||\n              (typeof finalRevalidate !== 'undefined' && finalRevalidate > 0)\n            ) {\n              throw new Error(\n                `cache: 'force-cache' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-no-store'`\n              )\n            }\n            cacheReason = 'fetchCache = only-no-store'\n            break\n          }\n          case 'only-cache': {\n            if (currentFetchCacheConfig === 'no-store') {\n              throw new Error(\n                `cache: 'no-store' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-cache'`\n              )\n            }\n            break\n          }\n          case 'force-cache': {\n            if (\n              typeof currentFetchRevalidate === 'undefined' ||\n              currentFetchRevalidate === 0\n            ) {\n              cacheReason = 'fetchCache = force-cache'\n              finalRevalidate = INFINITE_CACHE\n            }\n            break\n          }\n          default:\n          // sometimes we won't match the above cases. the reason we don't move\n          // everything to this switch is the use of autoNoCache which is not a fetchCacheMode\n          // I suspect this could be unified with fetchCacheMode however in which case we could\n          // simplify the switch case and ensure we have an exhaustive switch handling all modes\n        }\n\n        if (typeof finalRevalidate === 'undefined') {\n          if (pageFetchCacheMode === 'default-cache' && !isUsingNoStore) {\n            finalRevalidate = INFINITE_CACHE\n            cacheReason = 'fetchCache = default-cache'\n          } else if (pageFetchCacheMode === 'default-no-store') {\n            finalRevalidate = 0\n            cacheReason = 'fetchCache = default-no-store'\n          } else if (isUsingNoStore) {\n            finalRevalidate = 0\n            cacheReason = 'noStore call'\n          } else if (autoNoCache) {\n            finalRevalidate = 0\n            cacheReason = 'auto no cache'\n          } else {\n            // TODO: should we consider this case an invariant?\n            cacheReason = 'auto cache'\n            finalRevalidate = revalidateStore\n              ? revalidateStore.revalidate\n              : INFINITE_CACHE\n          }\n        } else if (!cacheReason) {\n          cacheReason = `revalidate: ${finalRevalidate}`\n        }\n\n        if (\n          // when force static is configured we don't bail from\n          // `revalidate: 0` values\n          !(workStore.forceStatic && finalRevalidate === 0) &&\n          // we don't consider autoNoCache to switch to dynamic for ISR\n          !autoNoCache &&\n          // If the revalidate value isn't currently set or the value is less\n          // than the current revalidate value, we should update the revalidate\n          // value.\n          revalidateStore &&\n          finalRevalidate < revalidateStore.revalidate\n        ) {\n          // If we were setting the revalidate value to 0, we should try to\n          // postpone instead first.\n          if (finalRevalidate === 0) {\n            if (workUnitStore && workUnitStore.type === 'prerender') {\n              if (cacheSignal) {\n                cacheSignal.endRead()\n                cacheSignal = null\n              }\n              return makeHangingPromise<Response>(\n                workUnitStore.renderSignal,\n                'fetch()'\n              )\n            } else {\n              markCurrentScopeAsDynamic(\n                workStore,\n                workUnitStore,\n                `revalidate: 0 fetch ${input} ${workStore.route}`\n              )\n            }\n          }\n\n          // We only want to set the revalidate store's revalidate time if it\n          // was explicitly set for the fetch call, i.e. currentFetchRevalidate.\n          if (revalidateStore && currentFetchRevalidate === finalRevalidate) {\n            revalidateStore.revalidate = finalRevalidate\n          }\n        }\n\n        const isCacheableRevalidate =\n          typeof finalRevalidate === 'number' && finalRevalidate > 0\n\n        let cacheKey: string | undefined\n        const { incrementalCache } = workStore\n\n        const requestStore: undefined | RequestStore =\n          workUnitStore !== undefined && workUnitStore.type === 'request'\n            ? workUnitStore\n            : undefined\n\n        if (\n          incrementalCache &&\n          (isCacheableRevalidate || requestStore?.serverComponentsHmrCache)\n        ) {\n          try {\n            cacheKey = await incrementalCache.generateCacheKey(\n              fetchUrl,\n              isRequestInput ? (input as RequestInit) : init\n            )\n          } catch (err) {\n            console.error(`Failed to generate cache key for`, input)\n          }\n        }\n\n        const fetchIdx = workStore.nextFetchId ?? 1\n        workStore.nextFetchId = fetchIdx + 1\n\n        let handleUnlock = () => Promise.resolve()\n\n        const doOriginalFetch = async (\n          isStale?: boolean,\n          cacheReasonOverride?: string\n        ) => {\n          const requestInputFields = [\n            'cache',\n            'credentials',\n            'headers',\n            'integrity',\n            'keepalive',\n            'method',\n            'mode',\n            'redirect',\n            'referrer',\n            'referrerPolicy',\n            'window',\n            'duplex',\n\n            // don't pass through signal when revalidating\n            ...(isStale ? [] : ['signal']),\n          ]\n\n          if (isRequestInput) {\n            const reqInput: Request = input as any\n            const reqOptions: RequestInit = {\n              body: (reqInput as any)._ogBody || reqInput.body,\n            }\n\n            for (const field of requestInputFields) {\n              // @ts-expect-error custom fields\n              reqOptions[field] = reqInput[field]\n            }\n            input = new Request(reqInput.url, reqOptions)\n          } else if (init) {\n            const { _ogBody, body, signal, ...otherInput } =\n              init as RequestInit & { _ogBody?: any }\n            init = {\n              ...otherInput,\n              body: _ogBody || body,\n              signal: isStale ? undefined : signal,\n            }\n          }\n\n          // add metadata to init without editing the original\n          const clonedInit = {\n            ...init,\n            next: { ...init?.next, fetchType: 'origin', fetchIdx },\n          }\n\n          return originFetch(input, clonedInit).then(async (res) => {\n            if (!isStale && fetchStart) {\n              trackFetchMetric(workStore, {\n                start: fetchStart,\n                url: fetchUrl,\n                cacheReason: cacheReasonOverride || cacheReason,\n                cacheStatus:\n                  finalRevalidate === 0 || cacheReasonOverride\n                    ? 'skip'\n                    : 'miss',\n                cacheWarning,\n                status: res.status,\n                method: clonedInit.method || 'GET',\n              })\n            }\n            if (\n              res.status === 200 &&\n              incrementalCache &&\n              cacheKey &&\n              (isCacheableRevalidate || requestStore?.serverComponentsHmrCache)\n            ) {\n              const normalizedRevalidate =\n                finalRevalidate >= INFINITE_CACHE\n                  ? CACHE_ONE_YEAR\n                  : finalRevalidate\n              const externalRevalidate =\n                finalRevalidate >= INFINITE_CACHE ? false : finalRevalidate\n\n              if (workUnitStore && workUnitStore.type === 'prerender') {\n                // We are prerendering at build time or revalidate time with dynamicIO so we need to\n                // buffer the response so we can guarantee it can be read in a microtask\n                const bodyBuffer = await res.arrayBuffer()\n\n                const fetchedData = {\n                  headers: Object.fromEntries(res.headers.entries()),\n                  body: Buffer.from(bodyBuffer).toString('base64'),\n                  status: res.status,\n                  url: res.url,\n                }\n\n                // We can skip checking the serverComponentsHmrCache because we aren't in\n                // dev mode.\n\n                await incrementalCache.set(\n                  cacheKey,\n                  {\n                    kind: CachedRouteKind.FETCH,\n                    data: fetchedData,\n                    revalidate: normalizedRevalidate,\n                  },\n                  {\n                    fetchCache: true,\n                    revalidate: externalRevalidate,\n                    fetchUrl,\n                    fetchIdx,\n                    tags,\n                  }\n                )\n                await handleUnlock()\n\n                // We we return a new Response to the caller.\n                return new Response(bodyBuffer, {\n                  headers: res.headers,\n                  status: res.status,\n                  statusText: res.statusText,\n                })\n              } else {\n                // We're cloning the response using this utility because there\n                // exists a bug in the undici library around response cloning.\n                // See the following pull request for more details:\n                // https://github.com/vercel/next.js/pull/73274\n                const [cloned1, cloned2] = cloneResponse(res)\n\n                // We are dynamically rendering including dev mode. We want to return\n                // the response to the caller as soon as possible because it might stream\n                // over a very long time.\n                cloned1\n                  .arrayBuffer()\n                  .then(async (arrayBuffer) => {\n                    const bodyBuffer = Buffer.from(arrayBuffer)\n\n                    const fetchedData = {\n                      headers: Object.fromEntries(cloned1.headers.entries()),\n                      body: bodyBuffer.toString('base64'),\n                      status: cloned1.status,\n                      url: cloned1.url,\n                    }\n\n                    requestStore?.serverComponentsHmrCache?.set(\n                      cacheKey,\n                      fetchedData\n                    )\n\n                    if (isCacheableRevalidate) {\n                      await incrementalCache.set(\n                        cacheKey,\n                        {\n                          kind: CachedRouteKind.FETCH,\n                          data: fetchedData,\n                          revalidate: normalizedRevalidate,\n                        },\n                        {\n                          fetchCache: true,\n                          revalidate: externalRevalidate,\n                          fetchUrl,\n                          fetchIdx,\n                          tags,\n                        }\n                      )\n                    }\n                  })\n                  .catch((error) =>\n                    console.warn(`Failed to set fetch cache`, input, error)\n                  )\n                  .finally(handleUnlock)\n\n                return cloned2\n              }\n            }\n\n            // we had response that we determined shouldn't be cached so we return it\n            // and don't cache it. This also needs to unlock the cache lock we acquired.\n            await handleUnlock()\n\n            return res\n          })\n        }\n\n        let cacheReasonOverride\n        let isForegroundRevalidate = false\n        let isHmrRefreshCache = false\n\n        if (cacheKey && incrementalCache) {\n          let cachedFetchData: CachedFetchData | undefined\n\n          if (\n            requestStore?.isHmrRefresh &&\n            requestStore.serverComponentsHmrCache\n          ) {\n            cachedFetchData =\n              requestStore.serverComponentsHmrCache.get(cacheKey)\n\n            isHmrRefreshCache = true\n          }\n\n          if (isCacheableRevalidate && !cachedFetchData) {\n            handleUnlock = await incrementalCache.lock(cacheKey)\n            const entry = workStore.isOnDemandRevalidate\n              ? null\n              : await incrementalCache.get(cacheKey, {\n                  kind: IncrementalCacheKind.FETCH,\n                  revalidate: finalRevalidate,\n                  fetchUrl,\n                  fetchIdx,\n                  tags,\n                  softTags: implicitTags,\n                  isFallback: false,\n                })\n\n            if (hasNoExplicitCacheConfig) {\n              // We sometimes use the cache to dedupe fetches that do not specify a cache configuration\n              // In these cases we want to make sure we still exclude them from prerenders if dynamicIO is on\n              // so we introduce an artificial Task boundary here.\n              if (workUnitStore && workUnitStore.type === 'prerender') {\n                await waitAtLeastOneReactRenderTask()\n              }\n            }\n\n            if (entry) {\n              await handleUnlock()\n            } else {\n              // in dev, incremental cache response will be null in case the browser adds `cache-control: no-cache` in the request headers\n              cacheReasonOverride = 'cache-control: no-cache (hard refresh)'\n            }\n\n            if (entry?.value && entry.value.kind === CachedRouteKind.FETCH) {\n              // when stale and is revalidating we wait for fresh data\n              // so the revalidated entry has the updated data\n              if (workStore.isRevalidate && entry.isStale) {\n                isForegroundRevalidate = true\n              } else {\n                if (entry.isStale) {\n                  workStore.pendingRevalidates ??= {}\n                  if (!workStore.pendingRevalidates[cacheKey]) {\n                    const pendingRevalidate = doOriginalFetch(true)\n                      .then(async (response) => ({\n                        body: await response.arrayBuffer(),\n                        headers: response.headers,\n                        status: response.status,\n                        statusText: response.statusText,\n                      }))\n                      .finally(() => {\n                        workStore.pendingRevalidates ??= {}\n                        delete workStore.pendingRevalidates[cacheKey || '']\n                      })\n\n                    // Attach the empty catch here so we don't get a \"unhandled\n                    // promise rejection\" warning.\n                    pendingRevalidate.catch(console.error)\n\n                    workStore.pendingRevalidates[cacheKey] = pendingRevalidate\n                  }\n                }\n\n                cachedFetchData = entry.value.data\n              }\n            }\n          }\n\n          if (cachedFetchData) {\n            if (fetchStart) {\n              trackFetchMetric(workStore, {\n                start: fetchStart,\n                url: fetchUrl,\n                cacheReason,\n                cacheStatus: isHmrRefreshCache ? 'hmr' : 'hit',\n                cacheWarning,\n                status: cachedFetchData.status || 200,\n                method: init?.method || 'GET',\n              })\n            }\n\n            const response = new Response(\n              Buffer.from(cachedFetchData.body, 'base64'),\n              {\n                headers: cachedFetchData.headers,\n                status: cachedFetchData.status,\n              }\n            )\n\n            Object.defineProperty(response, 'url', {\n              value: cachedFetchData.url,\n            })\n\n            return response\n          }\n        }\n\n        if (workStore.isStaticGeneration && init && typeof init === 'object') {\n          const { cache } = init\n\n          // Delete `cache` property as Cloudflare Workers will throw an error\n          if (isEdgeRuntime) delete init.cache\n\n          if (cache === 'no-store') {\n            // If enabled, we should bail out of static generation.\n            if (workUnitStore && workUnitStore.type === 'prerender') {\n              if (cacheSignal) {\n                cacheSignal.endRead()\n                cacheSignal = null\n              }\n              return makeHangingPromise<Response>(\n                workUnitStore.renderSignal,\n                'fetch()'\n              )\n            } else {\n              markCurrentScopeAsDynamic(\n                workStore,\n                workUnitStore,\n                `no-store fetch ${input} ${workStore.route}`\n              )\n            }\n          }\n\n          const hasNextConfig = 'next' in init\n          const { next = {} } = init\n          if (\n            typeof next.revalidate === 'number' &&\n            revalidateStore &&\n            next.revalidate < revalidateStore.revalidate\n          ) {\n            if (next.revalidate === 0) {\n              // If enabled, we should bail out of static generation.\n              if (workUnitStore && workUnitStore.type === 'prerender') {\n                return makeHangingPromise<Response>(\n                  workUnitStore.renderSignal,\n                  'fetch()'\n                )\n              } else {\n                markCurrentScopeAsDynamic(\n                  workStore,\n                  workUnitStore,\n                  `revalidate: 0 fetch ${input} ${workStore.route}`\n                )\n              }\n            }\n\n            if (!workStore.forceStatic || next.revalidate !== 0) {\n              revalidateStore.revalidate = next.revalidate\n            }\n          }\n          if (hasNextConfig) delete init.next\n        }\n\n        // if we are revalidating the whole page via time or on-demand and\n        // the fetch cache entry is stale we should still de-dupe the\n        // origin hit if it's a cache-able entry\n        if (cacheKey && isForegroundRevalidate) {\n          const pendingRevalidateKey = cacheKey\n          workStore.pendingRevalidates ??= {}\n          let pendingRevalidate =\n            workStore.pendingRevalidates[pendingRevalidateKey]\n\n          if (pendingRevalidate) {\n            const revalidatedResult: {\n              body: ArrayBuffer\n              headers: Headers\n              status: number\n              statusText: string\n            } = await pendingRevalidate\n            return new Response(revalidatedResult.body, {\n              headers: revalidatedResult.headers,\n              status: revalidatedResult.status,\n              statusText: revalidatedResult.statusText,\n            })\n          }\n\n          // We used to just resolve the Response and clone it however for\n          // static generation with dynamicIO we need the response to be able to\n          // be resolved in a microtask and cloning the response will never have\n          // a body that can resolve in a microtask in node (as observed through\n          // experimentation) So instead we await the body and then when it is\n          // available we construct manually cloned Response objects with the\n          // body as an ArrayBuffer. This will be resolvable in a microtask\n          // making it compatible with dynamicIO.\n          const pendingResponse = doOriginalFetch(true, cacheReasonOverride)\n            // We're cloning the response using this utility because there\n            // exists a bug in the undici library around response cloning.\n            // See the following pull request for more details:\n            // https://github.com/vercel/next.js/pull/73274\n            .then(cloneResponse)\n\n          pendingRevalidate = pendingResponse\n            .then(async (responses) => {\n              const response = responses[0]\n              return {\n                body: await response.arrayBuffer(),\n                headers: response.headers,\n                status: response.status,\n                statusText: response.statusText,\n              }\n            })\n            .finally(() => {\n              // If the pending revalidate is not present in the store, then\n              // we have nothing to delete.\n              if (!workStore.pendingRevalidates?.[pendingRevalidateKey]) {\n                return\n              }\n\n              delete workStore.pendingRevalidates[pendingRevalidateKey]\n            })\n\n          // Attach the empty catch here so we don't get a \"unhandled promise\n          // rejection\" warning\n          pendingRevalidate.catch(() => {})\n\n          workStore.pendingRevalidates[pendingRevalidateKey] = pendingRevalidate\n\n          return pendingResponse.then((responses) => responses[1])\n        } else {\n          return doOriginalFetch(false, cacheReasonOverride)\n        }\n      }\n    )\n\n    if (cacheSignal) {\n      try {\n        return await result\n      } finally {\n        if (cacheSignal) {\n          cacheSignal.endRead()\n        }\n      }\n    }\n    return result\n  }\n\n  // Attach the necessary properties to the patched fetch function.\n  // We don't use this to determine if the fetch function has been patched,\n  // but for external consumers to determine if the fetch function has been\n  // patched.\n  patched.__nextPatched = true as const\n  patched.__nextGetStaticStore = () => workAsyncStorage\n  patched._nextOriginalFetch = originFetch\n  ;(globalThis as Record<symbol, unknown>)[NEXT_PATCH_SYMBOL] = true\n\n  return patched\n}\n// we patch fetch to collect cache information used for\n// determining if a page is static or not\nexport function patchFetch(options: PatchableModule) {\n  // If we've already patched fetch, we should not patch it again.\n  if (isFetchPatched()) return\n\n  // Grab the original fetch function. We'll attach this so we can use it in\n  // the patched fetch function.\n  const original = createDedupeFetch(globalThis.fetch)\n\n  // Set the global fetch to the patched fetch.\n  globalThis.fetch = createPatchedFetcher(original, options)\n}\n"],"names":["NEXT_PATCH_SYMBOL","createPatchedFetcher","patchFetch","validateRevalidate","validateTags","isEdgeRuntime","process","env","NEXT_RUNTIME","Symbol","for","isFetchPatched","globalThis","revalidateVal","route","normalizedRevalidate","undefined","INFINITE_CACHE","isNaN","Error","err","message","includes","tags","description","validTags","invalidTags","i","length","tag","push","reason","NEXT_CACHE_TAG_MAX_LENGTH","NEXT_CACHE_TAG_MAX_ITEMS","console","warn","slice","join","log","trackFetchMetric","workStore","ctx","requestEndedState","ended","isDebugBuild","NEXT_DEBUG_BUILD","NEXT_SSG_FETCH_METRICS","isStaticGeneration","isDevelopment","NODE_ENV","fetchMetrics","end","performance","timeOrigin","now","idx","nextFetchId","originFetch","workAsyncStorage","workUnitAsyncStorage","patched","input","init","url","URL","Request","username","password","fetchUrl","href","method","toUpperCase","isInternal","next","internal","hideSpan","NEXT_OTEL_FETCH_DISABLED","fetchStart","getStore","workUnitStore","cacheSignal","type","beginRead","result","getTracer","trace","NextNodeServerSpan","internalFetch","AppRenderSpan","fetch","kind","SpanKind","CLIENT","spanName","filter","Boolean","attributes","hostname","port","getRequestMeta","isDraftMode","isRequestInput","field","value","finalRevalidate","getNextField","currentFetchRevalidate","toString","revalidateStore","Array","isArray","collectedTags","implicitTags","pageFetchCacheMode","fetchCache","isUsingNoStore","isUnstableNoStore","currentFetchCacheConfig","cacheReason","cacheWarning","isConflictingRevalidate","hasExplicitFetchCacheOptOut","noFetchConfigAndForceDynamic","forceDynamic","_headers","initHeaders","get","Headers","hasUnCacheableHeader","isUnCacheableMethod","toLowerCase","hasNoExplicitCacheConfig","autoNoCache","isPrerendering","revalidate","endRead","makeHangingPromise","renderSignal","forceStatic","markCurrentScopeAsDynamic","isCacheableRevalidate","cacheKey","incrementalCache","requestStore","serverComponentsHmrCache","generateCacheKey","error","fetchIdx","handleUnlock","Promise","resolve","doOriginalFetch","isStale","cacheReasonOverride","requestInputFields","reqInput","reqOptions","body","_ogBody","signal","otherInput","clonedInit","fetchType","then","res","start","cacheStatus","status","CACHE_ONE_YEAR","externalRevalidate","bodyBuffer","arrayBuffer","fetchedData","headers","Object","fromEntries","entries","Buffer","from","set","CachedRouteKind","FETCH","data","Response","statusText","cloned1","cloned2","cloneResponse","catch","finally","isForegroundRevalidate","isHmrRefreshCache","cachedFetchData","isHmrRefresh","lock","entry","isOnDemandRevalidate","IncrementalCacheKind","softTags","isFallback","waitAtLeastOneReactRenderTask","isRevalidate","pendingRevalidates","pendingRevalidate","response","defineProperty","cache","hasNextConfig","pendingRevalidateKey","revalidatedResult","pendingResponse","responses","__nextPatched","__nextGetStaticStore","_nextOriginalFetch","options","original","createDedupeFetch"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5547, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5552, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/router-utils/build-data-route.ts"],"sourcesContent":["import path from '../../../shared/lib/isomorphic/path'\nimport { normalizePagePath } from '../../../shared/lib/page-path/normalize-page-path'\nimport { isDynamicRoute } from '../../../shared/lib/router/utils/is-dynamic'\nimport { getNamedRouteRegex } from '../../../shared/lib/router/utils/route-regex'\nimport { normalizeRouteRegex } from '../../../lib/load-custom-routes'\nimport { escapeStringRegexp } from '../../../shared/lib/escape-regexp'\n\nexport function buildDataRoute(page: string, buildId: string) {\n  const pagePath = normalizePagePath(page)\n  const dataRoute = path.posix.join('/_next/data', buildId, `${pagePath}.json`)\n\n  let dataRouteRegex: string\n  let namedDataRouteRegex: string | undefined\n  let routeKeys: { [named: string]: string } | undefined\n\n  if (isDynamicRoute(page)) {\n    const routeRegex = getNamedRouteRegex(\n      dataRoute.replace(/\\.json$/, ''),\n      true\n    )\n\n    dataRouteRegex = normalizeRouteRegex(\n      routeRegex.re.source.replace(/\\(\\?:\\\\\\/\\)\\?\\$$/, `\\\\.json$`)\n    )\n    namedDataRouteRegex = routeRegex.namedRegex!.replace(\n      /\\(\\?:\\/\\)\\?\\$$/,\n      `\\\\.json$`\n    )\n    routeKeys = routeRegex.routeKeys\n  } else {\n    dataRouteRegex = normalizeRouteRegex(\n      new RegExp(\n        `^${path.posix.join(\n          '/_next/data',\n          escapeStringRegexp(buildId),\n          `${pagePath}.json`\n        )}$`\n      ).source\n    )\n  }\n\n  return {\n    page,\n    routeKeys,\n    dataRouteRegex,\n    namedDataRouteRegex,\n  }\n}\n"],"names":["buildDataRoute","page","buildId","pagePath","normalizePagePath","dataRoute","path","posix","join","dataRouteRegex","namedDataRouteRegex","routeKeys","isDynamicRoute","routeRegex","getNamedRouteRegex","replace","normalizeRouteRegex","re","source","namedRegex","RegExp","escapeStringRegexp"],"mappings":";;;;+BAOgBA,kBAAAA;;;eAAAA;;;6DAPC;mCACiB;2BACH;4BACI;kCACC;8BACD;;;;;;AAE5B,SAASA,eAAeC,IAAY,EAAEC,OAAe;IAC1D,MAAMC,WAAWC,CAAAA,GAAAA,mBAAAA,iBAAiB,EAACH;IACnC,MAAMI,YAAYC,MAAAA,OAAI,CAACC,KAAK,CAACC,IAAI,CAAC,eAAeN,SAAS,GAAGC,SAAS,KAAK,CAAC;IAE5E,IAAIM;IACJ,IAAIC;IACJ,IAAIC;IAEJ,IAAIC,CAAAA,GAAAA,WAAAA,cAAc,EAACX,OAAO;QACxB,MAAMY,aAAaC,CAAAA,GAAAA,YAAAA,kBAAkB,EACnCT,UAAUU,OAAO,CAAC,WAAW,KAC7B;QAGFN,iBAAiBO,CAAAA,GAAAA,kBAAAA,mBAAmB,EAClCH,WAAWI,EAAE,CAACC,MAAM,CAACH,OAAO,CAAC,oBAAoB,CAAC,QAAQ,CAAC;QAE7DL,sBAAsBG,WAAWM,UAAU,CAAEJ,OAAO,CAClD,kBACA,CAAC,QAAQ,CAAC;QAEZJ,YAAYE,WAAWF,SAAS;IAClC,OAAO;QACLF,iBAAiBO,CAAAA,GAAAA,kBAAAA,mBAAmB,EAClC,IAAII,OACF,CAAC,CAAC,EAAEd,MAAAA,OAAI,CAACC,KAAK,CAACC,IAAI,CACjB,eACAa,CAAAA,GAAAA,cAAAA,kBAAkB,EAACnB,UACnB,GAAGC,SAAS,KAAK,CAAC,EAClB,CAAC,CAAC,EACJe,MAAM;IAEZ;IAEA,OAAO;QACLjB;QACAU;QACAF;QACAC;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 5594, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5599, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/experimental/create-env-definitions.ts"],"sourcesContent":["import type { LoadedEnvFiles } from '@next/env'\nimport { join } from 'node:path'\nimport { writeFile } from 'node:fs/promises'\n\nexport async function createEnvDefinitions({\n  distDir,\n  loadedEnvFiles,\n}: {\n  distDir: string\n  loadedEnvFiles: LoadedEnvFiles\n}) {\n  const envLines = []\n  const seenKeys = new Set()\n  // env files are in order of priority\n  for (const { path, env } of loadedEnvFiles) {\n    for (const key in env) {\n      if (!seenKeys.has(key)) {\n        envLines.push(`      /** Loaded from \\`${path}\\` */`)\n        envLines.push(`      ${key}?: string`)\n        seenKeys.add(key)\n      }\n    }\n  }\n  const envStr = envLines.join('\\n')\n\n  const definitionStr = `// Type definitions for Next.js environment variables\ndeclare global {\n  namespace NodeJS {\n    interface ProcessEnv {\n${envStr}\n    }\n  }\n}\nexport {}`\n\n  if (process.env.NODE_ENV === 'test') {\n    return definitionStr\n  }\n\n  try {\n    // we expect the types directory to already exist\n    const envDtsPath = join(distDir, 'types', 'env.d.ts')\n    // do not await, this is not essential for further process\n    writeFile(envDtsPath, definitionStr, 'utf-8')\n  } catch (e) {\n    console.error('Failed to write env.d.ts:', e)\n  }\n}\n"],"names":["createEnvDefinitions","distDir","loadedEnvFiles","envLines","seenKeys","Set","path","env","key","has","push","add","envStr","join","definitionStr","process","NODE_ENV","envDtsPath","writeFile","e","console","error"],"mappings":";;;;+BAIsBA,wBAAAA;;;eAAAA;;;0BAHD;0BACK;AAEnB,eAAeA,qBAAqB,EACzCC,OAAO,EACPC,cAAc,EAIf;IACC,MAAMC,WAAW,EAAE;IACnB,MAAMC,WAAW,IAAIC;IACrB,qCAAqC;IACrC,KAAK,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAE,IAAIL,eAAgB;QAC1C,IAAK,MAAMM,OAAOD,IAAK;YACrB,IAAI,CAACH,SAASK,GAAG,CAACD,MAAM;gBACtBL,SAASO,IAAI,CAAC,CAAC,wBAAwB,EAAEJ,KAAK,KAAK,CAAC;gBACpDH,SAASO,IAAI,CAAC,CAAC,MAAM,EAAEF,IAAI,SAAS,CAAC;gBACrCJ,SAASO,GAAG,CAACH;YACf;QACF;IACF;IACA,MAAMI,SAAST,SAASU,IAAI,CAAC;IAE7B,MAAMC,gBAAgB,CAAC;;;;AAIzB,EAAEF,OAAO;;;;SAIA,CAAC;IAER,IAAIG,QAAQR,GAAG,CAACS,QAAQ,KAAK,UAAQ;;IAErC;IAEA,IAAI;QACF,iDAAiD;QACjD,MAAMC,aAAaJ,CAAAA,GAAAA,UAAAA,IAAI,EAACZ,SAAS,SAAS;QAC1C,0DAA0D;QAC1DiB,CAAAA,GAAAA,UAAAA,SAAS,EAACD,YAAYH,eAAe;IACvC,EAAE,OAAOK,GAAG;QACVC,QAAQC,KAAK,CAAC,6BAA6BF;IAC7C;AACF","ignoreList":[0]}},
    {"offset": {"line": 5646, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5651, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/router-utils/setup-dev-bundler.ts"],"sourcesContent":["import type { NextConfigComplete } from '../../config-shared'\nimport type { FilesystemDynamicRoute } from './filesystem'\nimport type { UnwrapPromise } from '../../../lib/coalesced-function'\nimport {\n  getPageStaticInfo,\n  type MiddlewareMatcher,\n} from '../../../build/analysis/get-page-static-info'\nimport type { MiddlewareRouteMatch } from '../../../shared/lib/router/utils/middleware-route-matcher'\nimport type { PropagateToWorkersField } from './types'\nimport type { NextJsHotReloaderInterface } from '../../dev/hot-reloader-types'\n\nimport { createDefineEnv } from '../../../build/swc'\nimport fs from 'fs'\nimport { mkdir } from 'fs/promises'\nimport url from 'url'\nimport path from 'path'\nimport qs from 'querystring'\nimport Watchpack from 'next/dist/compiled/watchpack'\nimport { loadEnvConfig } from '@next/env'\nimport findUp from 'next/dist/compiled/find-up'\nimport { buildCustomRoute } from './filesystem'\nimport * as Log from '../../../build/output/log'\nimport HotReloaderWebpack from '../../dev/hot-reloader-webpack'\nimport { setGlobal } from '../../../trace/shared'\nimport type { Telemetry } from '../../../telemetry/storage'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport loadJsConfig from '../../../build/load-jsconfig'\nimport { createValidFileMatcher } from '../find-page-file'\nimport { eventCliSession } from '../../../telemetry/events'\nimport { getDefineEnv } from '../../../build/webpack/plugins/define-env-plugin'\nimport { getSortedRoutes } from '../../../shared/lib/router/utils'\nimport {\n  getStaticInfoIncludingLayouts,\n  sortByPageExts,\n} from '../../../build/entries'\nimport { verifyTypeScriptSetup } from '../../../lib/verify-typescript-setup'\nimport { verifyPartytownSetup } from '../../../lib/verify-partytown-setup'\nimport { getRouteRegex } from '../../../shared/lib/router/utils/route-regex'\nimport { normalizeAppPath } from '../../../shared/lib/router/utils/app-paths'\nimport { buildDataRoute } from './build-data-route'\nimport { getRouteMatcher } from '../../../shared/lib/router/utils/route-matcher'\nimport { normalizePathSep } from '../../../shared/lib/page-path/normalize-path-sep'\nimport { createClientRouterFilter } from '../../../lib/create-client-router-filter'\nimport { absolutePathToPage } from '../../../shared/lib/page-path/absolute-path-to-page'\nimport { generateInterceptionRoutesRewrites } from '../../../lib/generate-interception-routes-rewrites'\n\nimport {\n  CLIENT_STATIC_FILES_PATH,\n  DEV_CLIENT_PAGES_MANIFEST,\n  DEV_CLIENT_MIDDLEWARE_MANIFEST,\n  PHASE_DEVELOPMENT_SERVER,\n} from '../../../shared/lib/constants'\n\nimport { getMiddlewareRouteMatcher } from '../../../shared/lib/router/utils/middleware-route-matcher'\n\nimport {\n  isMiddlewareFile,\n  NestedMiddlewareError,\n  isInstrumentationHookFile,\n  getPossibleMiddlewareFilenames,\n  getPossibleInstrumentationHookFilenames,\n} from '../../../build/utils'\nimport { devPageFiles } from '../../../build/webpack/plugins/next-types-plugin/shared'\nimport type { LazyRenderServerInstance } from '../router-server'\nimport { HMR_ACTIONS_SENT_TO_BROWSER } from '../../dev/hot-reloader-types'\nimport { PAGE_TYPES } from '../../../lib/page-types'\nimport { createHotReloaderTurbopack } from '../../dev/hot-reloader-turbopack'\nimport { generateEncryptionKeyBase64 } from '../../app-render/encryption-utils-server'\nimport {\n  ModuleBuildError,\n  TurbopackInternalError,\n} from '../../dev/turbopack-utils'\nimport { isMetadataRouteFile } from '../../../lib/metadata/is-metadata-route'\nimport { normalizeMetadataPageToRoute } from '../../../lib/metadata/get-metadata-route'\nimport { createEnvDefinitions } from '../experimental/create-env-definitions'\nimport { JsConfigPathsPlugin } from '../../../build/webpack/plugins/jsconfig-paths-plugin'\nimport { store as consoleStore } from '../../../build/output/store'\n\nexport type SetupOpts = {\n  renderServer: LazyRenderServerInstance\n  dir: string\n  turbo?: boolean\n  appDir?: string\n  pagesDir?: string\n  telemetry: Telemetry\n  isCustomServer?: boolean\n  fsChecker: UnwrapPromise<\n    ReturnType<typeof import('./filesystem').setupFsCheck>\n  >\n  nextConfig: NextConfigComplete\n  port: number\n  onDevServerCleanup: ((listener: () => Promise<void>) => void) | undefined\n  resetFetch: () => void\n}\n\nexport type ServerFields = {\n  actualMiddlewareFile?: string | undefined\n  actualInstrumentationHookFile?: string | undefined\n  appPathRoutes?: Record<string, string | string[]>\n  middleware?:\n    | {\n        page: string\n        match: MiddlewareRouteMatch\n        matchers?: MiddlewareMatcher[]\n      }\n    | undefined\n  hasAppNotFound?: boolean\n  interceptionRoutes?: ReturnType<\n    typeof import('./filesystem').buildCustomRoute\n  >[]\n  setAppIsrStatus?: (key: string, value: boolean) => void\n  resetFetch?: () => void\n}\n\nasync function verifyTypeScript(opts: SetupOpts) {\n  let usingTypeScript = false\n  const verifyResult = await verifyTypeScriptSetup({\n    dir: opts.dir,\n    distDir: opts.nextConfig.distDir,\n    intentDirs: [opts.pagesDir, opts.appDir].filter(Boolean) as string[],\n    typeCheckPreflight: false,\n    tsconfigPath: opts.nextConfig.typescript.tsconfigPath,\n    disableStaticImages: opts.nextConfig.images.disableStaticImages,\n    hasAppDir: !!opts.appDir,\n    hasPagesDir: !!opts.pagesDir,\n  })\n\n  if (verifyResult.version) {\n    usingTypeScript = true\n  }\n  return usingTypeScript\n}\n\nexport async function propagateServerField(\n  opts: SetupOpts,\n  field: PropagateToWorkersField,\n  args: any\n) {\n  await opts.renderServer?.instance?.propagateServerField(opts.dir, field, args)\n}\n\nasync function startWatcher(opts: SetupOpts) {\n  const { nextConfig, appDir, pagesDir, dir, resetFetch } = opts\n  const { useFileSystemPublicRoutes } = nextConfig\n  const usingTypeScript = await verifyTypeScript(opts)\n\n  const distDir = path.join(opts.dir, opts.nextConfig.distDir)\n\n  // we ensure the types directory exists here\n  if (usingTypeScript) {\n    const distTypesDir = path.join(distDir, 'types')\n    if (!fs.existsSync(distTypesDir)) {\n      await mkdir(distTypesDir, { recursive: true })\n    }\n  }\n\n  setGlobal('distDir', distDir)\n  setGlobal('phase', PHASE_DEVELOPMENT_SERVER)\n\n  const validFileMatcher = createValidFileMatcher(\n    nextConfig.pageExtensions,\n    appDir\n  )\n\n  const serverFields: ServerFields = {}\n\n  // Update logging state once based on next.config.js when initializing\n  consoleStore.setState({\n    logging: nextConfig.logging !== false,\n  })\n\n  const hotReloader: NextJsHotReloaderInterface = opts.turbo\n    ? await createHotReloaderTurbopack(opts, serverFields, distDir, resetFetch)\n    : new HotReloaderWebpack(opts.dir, {\n        appDir,\n        pagesDir,\n        distDir,\n        config: opts.nextConfig,\n        buildId: 'development',\n        encryptionKey: await generateEncryptionKeyBase64({\n          isBuild: false,\n          distDir,\n        }),\n        telemetry: opts.telemetry,\n        rewrites: opts.fsChecker.rewrites,\n        previewProps: opts.fsChecker.prerenderManifest.preview,\n        resetFetch,\n      })\n\n  await hotReloader.start()\n\n  if (opts.nextConfig.experimental.nextScriptWorkers) {\n    await verifyPartytownSetup(\n      opts.dir,\n      path.join(distDir, CLIENT_STATIC_FILES_PATH)\n    )\n  }\n\n  opts.fsChecker.ensureCallback(async function ensure(item) {\n    if (item.type === 'appFile' || item.type === 'pageFile') {\n      await hotReloader.ensurePage({\n        clientOnly: false,\n        page: item.itemPath,\n        isApp: item.type === 'appFile',\n        definition: undefined,\n      })\n    }\n  })\n\n  let resolved = false\n  let prevSortedRoutes: string[] = []\n\n  await new Promise<void>(async (resolve, reject) => {\n    if (pagesDir) {\n      // Watchpack doesn't emit an event for an empty directory\n      fs.readdir(pagesDir, (_, files) => {\n        if (files?.length) {\n          return\n        }\n\n        if (!resolved) {\n          resolve()\n          resolved = true\n        }\n      })\n    }\n\n    const pages = pagesDir ? [pagesDir] : []\n    const app = appDir ? [appDir] : []\n    const directories = [...pages, ...app]\n\n    const rootDir = pagesDir || appDir\n    const files = [\n      ...getPossibleMiddlewareFilenames(\n        path.join(rootDir!, '..'),\n        nextConfig.pageExtensions\n      ),\n      ...getPossibleInstrumentationHookFilenames(\n        path.join(rootDir!, '..'),\n        nextConfig.pageExtensions\n      ),\n    ]\n    let nestedMiddleware: string[] = []\n\n    const envFiles = [\n      '.env.development.local',\n      '.env.local',\n      '.env.development',\n      '.env',\n    ].map((file) => path.join(dir, file))\n\n    files.push(...envFiles)\n\n    // tsconfig/jsconfig paths hot-reloading\n    const tsconfigPaths = [\n      path.join(dir, 'tsconfig.json'),\n      path.join(dir, 'jsconfig.json'),\n    ] as const\n    files.push(...tsconfigPaths)\n\n    const wp = new Watchpack({\n      ignored: (pathname: string) => {\n        return (\n          !files.some((file) => file.startsWith(pathname)) &&\n          !directories.some(\n            (d) => pathname.startsWith(d) || d.startsWith(pathname)\n          )\n        )\n      },\n    })\n    const fileWatchTimes = new Map()\n    let enabledTypeScript = usingTypeScript\n    let previousClientRouterFilters: any\n    let previousConflictingPagePaths: Set<string> = new Set()\n\n    wp.on('aggregated', async () => {\n      let middlewareMatchers: MiddlewareMatcher[] | undefined\n      const routedPages: string[] = []\n      const knownFiles = wp.getTimeInfoEntries()\n      const appPaths: Record<string, string[]> = {}\n      const pageNameSet = new Set<string>()\n      const conflictingAppPagePaths = new Set<string>()\n      const appPageFilePaths = new Map<string, string>()\n      const pagesPageFilePaths = new Map<string, string>()\n      const pagesWithUnsupportedSegments = new Map<string, string[]>()\n\n      let envChange = false\n      let tsconfigChange = false\n      let conflictingPageChange = 0\n      let hasRootAppNotFound = false\n\n      const { appFiles, pageFiles } = opts.fsChecker\n\n      appFiles.clear()\n      pageFiles.clear()\n      devPageFiles.clear()\n      pagesWithUnsupportedSegments.clear()\n\n      const sortedKnownFiles: string[] = [...knownFiles.keys()].sort(\n        sortByPageExts(nextConfig.pageExtensions)\n      )\n\n      for (const fileName of sortedKnownFiles) {\n        if (\n          !files.includes(fileName) &&\n          !directories.some((d) => fileName.startsWith(d))\n        ) {\n          continue\n        }\n        const meta = knownFiles.get(fileName)\n\n        const watchTime = fileWatchTimes.get(fileName)\n        // If the file is showing up for the first time or the meta.timestamp is changed since last time\n        const watchTimeChange =\n          watchTime === undefined ||\n          (watchTime && watchTime !== meta?.timestamp)\n        fileWatchTimes.set(fileName, meta?.timestamp)\n\n        if (envFiles.includes(fileName)) {\n          if (watchTimeChange) {\n            envChange = true\n          }\n          continue\n        }\n\n        if (tsconfigPaths.includes(fileName)) {\n          if (fileName.endsWith('tsconfig.json')) {\n            enabledTypeScript = true\n          }\n          if (watchTimeChange) {\n            tsconfigChange = true\n          }\n          continue\n        }\n\n        if (\n          meta?.accuracy === undefined ||\n          !validFileMatcher.isPageFile(fileName)\n        ) {\n          continue\n        }\n\n        const isAppPath = Boolean(\n          appDir &&\n            normalizePathSep(fileName).startsWith(\n              normalizePathSep(appDir) + '/'\n            )\n        )\n        const isPagePath = Boolean(\n          pagesDir &&\n            normalizePathSep(fileName).startsWith(\n              normalizePathSep(pagesDir) + '/'\n            )\n        )\n\n        const rootFile = absolutePathToPage(fileName, {\n          dir: dir,\n          extensions: nextConfig.pageExtensions,\n          keepIndex: false,\n          pagesType: PAGE_TYPES.ROOT,\n        })\n\n        if (isMiddlewareFile(rootFile)) {\n          const staticInfo = await getStaticInfoIncludingLayouts({\n            pageFilePath: fileName,\n            config: nextConfig,\n            appDir: appDir,\n            page: rootFile,\n            isDev: true,\n            isInsideAppDir: isAppPath,\n            pageExtensions: nextConfig.pageExtensions,\n          })\n          if (nextConfig.output === 'export') {\n            Log.error(\n              'Middleware cannot be used with \"output: export\". See more info here: https://nextjs.org/docs/advanced-features/static-html-export'\n            )\n            continue\n          }\n          serverFields.actualMiddlewareFile = rootFile\n          await propagateServerField(\n            opts,\n            'actualMiddlewareFile',\n            serverFields.actualMiddlewareFile\n          )\n          middlewareMatchers = staticInfo.middleware?.matchers || [\n            { regexp: '.*', originalSource: '/:path*' },\n          ]\n          continue\n        }\n        if (isInstrumentationHookFile(rootFile)) {\n          serverFields.actualInstrumentationHookFile = rootFile\n          await propagateServerField(\n            opts,\n            'actualInstrumentationHookFile',\n            serverFields.actualInstrumentationHookFile\n          )\n          continue\n        }\n\n        if (fileName.endsWith('.ts') || fileName.endsWith('.tsx')) {\n          enabledTypeScript = true\n        }\n\n        if (!(isAppPath || isPagePath)) {\n          continue\n        }\n\n        // Collect all current filenames for the TS plugin to use\n        devPageFiles.add(fileName)\n\n        let pageName = absolutePathToPage(fileName, {\n          dir: isAppPath ? appDir! : pagesDir!,\n          extensions: nextConfig.pageExtensions,\n          keepIndex: isAppPath,\n          pagesType: isAppPath ? PAGE_TYPES.APP : PAGE_TYPES.PAGES,\n        })\n\n        if (\n          isAppPath &&\n          appDir &&\n          isMetadataRouteFile(\n            fileName.replace(appDir, ''),\n            nextConfig.pageExtensions,\n            true\n          )\n        ) {\n          const staticInfo = await getPageStaticInfo({\n            pageFilePath: fileName,\n            nextConfig: {},\n            page: pageName,\n            isDev: true,\n            pageType: PAGE_TYPES.APP,\n          })\n\n          pageName = normalizeMetadataPageToRoute(\n            pageName,\n            !!(staticInfo.generateSitemaps || staticInfo.generateImageMetadata)\n          )\n        }\n\n        if (\n          !isAppPath &&\n          pageName.startsWith('/api/') &&\n          nextConfig.output === 'export'\n        ) {\n          Log.error(\n            'API Routes cannot be used with \"output: export\". See more info here: https://nextjs.org/docs/advanced-features/static-html-export'\n          )\n          continue\n        }\n\n        if (isAppPath) {\n          const isRootNotFound = validFileMatcher.isRootNotFound(fileName)\n          hasRootAppNotFound = true\n\n          if (isRootNotFound) {\n            continue\n          }\n          if (!isRootNotFound && !validFileMatcher.isAppRouterPage(fileName)) {\n            continue\n          }\n          // Ignore files/directories starting with `_` in the app directory\n          if (normalizePathSep(pageName).includes('/_')) {\n            continue\n          }\n\n          const originalPageName = pageName\n          pageName = normalizeAppPath(pageName).replace(/%5F/g, '_')\n          if (!appPaths[pageName]) {\n            appPaths[pageName] = []\n          }\n          appPaths[pageName].push(originalPageName)\n\n          if (useFileSystemPublicRoutes) {\n            appFiles.add(pageName)\n          }\n\n          if (routedPages.includes(pageName)) {\n            continue\n          }\n        } else {\n          if (useFileSystemPublicRoutes) {\n            pageFiles.add(pageName)\n            // always add to nextDataRoutes for now but in future only add\n            // entries that actually use getStaticProps/getServerSideProps\n            opts.fsChecker.nextDataRoutes.add(pageName)\n          }\n        }\n        ;(isAppPath ? appPageFilePaths : pagesPageFilePaths).set(\n          pageName,\n          fileName\n        )\n\n        if (appDir && pageNameSet.has(pageName)) {\n          conflictingAppPagePaths.add(pageName)\n        } else {\n          pageNameSet.add(pageName)\n        }\n\n        /**\n         * If there is a middleware that is not declared in the root we will\n         * warn without adding it so it doesn't make its way into the system.\n         */\n        if (/[\\\\\\\\/]_middleware$/.test(pageName)) {\n          nestedMiddleware.push(pageName)\n          continue\n        }\n\n        routedPages.push(pageName)\n      }\n\n      const numConflicting = conflictingAppPagePaths.size\n      conflictingPageChange = numConflicting - previousConflictingPagePaths.size\n\n      if (conflictingPageChange !== 0) {\n        if (numConflicting > 0) {\n          let errorMessage = `Conflicting app and page file${\n            numConflicting === 1 ? ' was' : 's were'\n          } found, please remove the conflicting files to continue:\\n`\n\n          for (const p of conflictingAppPagePaths) {\n            const appPath = path.relative(dir, appPageFilePaths.get(p)!)\n            const pagesPath = path.relative(dir, pagesPageFilePaths.get(p)!)\n            errorMessage += `  \"${pagesPath}\" - \"${appPath}\"\\n`\n          }\n          hotReloader.setHmrServerError(new Error(errorMessage))\n        } else if (numConflicting === 0) {\n          hotReloader.clearHmrServerError()\n          await propagateServerField(opts, 'reloadMatchers', undefined)\n        }\n      }\n\n      previousConflictingPagePaths = conflictingAppPagePaths\n\n      let clientRouterFilters: any\n      if (nextConfig.experimental.clientRouterFilter) {\n        clientRouterFilters = createClientRouterFilter(\n          Object.keys(appPaths),\n          nextConfig.experimental.clientRouterFilterRedirects\n            ? ((nextConfig as any)._originalRedirects || []).filter(\n                (r: any) => !r.internal\n              )\n            : [],\n          nextConfig.experimental.clientRouterFilterAllowedRate\n        )\n\n        if (\n          !previousClientRouterFilters ||\n          JSON.stringify(previousClientRouterFilters) !==\n            JSON.stringify(clientRouterFilters)\n        ) {\n          envChange = true\n          previousClientRouterFilters = clientRouterFilters\n        }\n      }\n\n      if (!usingTypeScript && enabledTypeScript) {\n        // we tolerate the error here as this is best effort\n        // and the manual install command will be shown\n        await verifyTypeScript(opts)\n          .then(() => {\n            tsconfigChange = true\n          })\n          .catch(() => {})\n      }\n\n      if (envChange || tsconfigChange) {\n        if (envChange) {\n          const { loadedEnvFiles } = loadEnvConfig(\n            dir,\n            process.env.NODE_ENV === 'development',\n            Log,\n            true,\n            (envFilePath) => {\n              Log.info(`Reload env: ${envFilePath}`)\n            }\n          )\n\n          if (usingTypeScript && nextConfig.experimental?.typedEnv) {\n            // do not await, this is not essential for further process\n            createEnvDefinitions({\n              distDir,\n              loadedEnvFiles: [\n                ...loadedEnvFiles,\n                {\n                  path: nextConfig.configFileName,\n                  env: nextConfig.env,\n                  contents: '',\n                },\n              ],\n            })\n          }\n\n          await propagateServerField(opts, 'loadEnvConfig', [\n            { dev: true, forceReload: true, silent: true },\n          ])\n        }\n        let tsconfigResult:\n          | UnwrapPromise<ReturnType<typeof loadJsConfig>>\n          | undefined\n\n        if (tsconfigChange) {\n          try {\n            tsconfigResult = await loadJsConfig(dir, nextConfig)\n          } catch (_) {\n            /* do we want to log if there are syntax errors in tsconfig while editing? */\n          }\n        }\n\n        if (hotReloader.turbopackProject) {\n          const hasRewrites =\n            opts.fsChecker.rewrites.afterFiles.length > 0 ||\n            opts.fsChecker.rewrites.beforeFiles.length > 0 ||\n            opts.fsChecker.rewrites.fallback.length > 0\n\n          await hotReloader.turbopackProject.update({\n            defineEnv: createDefineEnv({\n              isTurbopack: true,\n              clientRouterFilters,\n              config: nextConfig,\n              dev: true,\n              distDir,\n              fetchCacheKeyPrefix:\n                opts.nextConfig.experimental.fetchCacheKeyPrefix,\n              hasRewrites,\n              // TODO: Implement\n              middlewareMatchers: undefined,\n            }),\n          })\n        }\n\n        hotReloader.activeWebpackConfigs?.forEach((config, idx) => {\n          const isClient = idx === 0\n          const isNodeServer = idx === 1\n          const isEdgeServer = idx === 2\n          const hasRewrites =\n            opts.fsChecker.rewrites.afterFiles.length > 0 ||\n            opts.fsChecker.rewrites.beforeFiles.length > 0 ||\n            opts.fsChecker.rewrites.fallback.length > 0\n\n          if (tsconfigChange) {\n            config.resolve?.plugins?.forEach((plugin: any) => {\n              // look for the JsConfigPathsPlugin and update with\n              // the latest paths/baseUrl config\n              if (plugin instanceof JsConfigPathsPlugin && tsconfigResult) {\n                const { resolvedBaseUrl, jsConfig } = tsconfigResult\n                const currentResolvedBaseUrl = plugin.resolvedBaseUrl\n                const resolvedUrlIndex = config.resolve?.modules?.findIndex(\n                  (item) => item === currentResolvedBaseUrl?.baseUrl\n                )\n\n                if (resolvedBaseUrl) {\n                  if (\n                    resolvedBaseUrl.baseUrl !== currentResolvedBaseUrl?.baseUrl\n                  ) {\n                    // remove old baseUrl and add new one\n                    if (resolvedUrlIndex && resolvedUrlIndex > -1) {\n                      config.resolve?.modules?.splice(resolvedUrlIndex, 1)\n                    }\n\n                    // If the resolvedBaseUrl is implicit we only remove the previous value.\n                    // Only add the baseUrl if it's explicitly set in tsconfig/jsconfig\n                    if (!resolvedBaseUrl.isImplicit) {\n                      config.resolve?.modules?.push(resolvedBaseUrl.baseUrl)\n                    }\n                  }\n                }\n\n                if (jsConfig?.compilerOptions?.paths && resolvedBaseUrl) {\n                  Object.keys(plugin.paths).forEach((key) => {\n                    delete plugin.paths[key]\n                  })\n                  Object.assign(plugin.paths, jsConfig.compilerOptions.paths)\n                  plugin.resolvedBaseUrl = resolvedBaseUrl\n                }\n              }\n            })\n          }\n\n          if (envChange) {\n            config.plugins?.forEach((plugin: any) => {\n              // we look for the DefinePlugin definitions so we can\n              // update them on the active compilers\n              if (\n                plugin &&\n                typeof plugin.definitions === 'object' &&\n                plugin.definitions.__NEXT_DEFINE_ENV\n              ) {\n                const newDefine = getDefineEnv({\n                  isTurbopack: false,\n                  clientRouterFilters,\n                  config: nextConfig,\n                  dev: true,\n                  distDir,\n                  fetchCacheKeyPrefix:\n                    opts.nextConfig.experimental.fetchCacheKeyPrefix,\n                  hasRewrites,\n                  isClient,\n                  isEdgeServer,\n                  isNodeOrEdgeCompilation: isNodeServer || isEdgeServer,\n                  isNodeServer,\n                  middlewareMatchers: undefined,\n                })\n\n                Object.keys(plugin.definitions).forEach((key) => {\n                  if (!(key in newDefine)) {\n                    delete plugin.definitions[key]\n                  }\n                })\n                Object.assign(plugin.definitions, newDefine)\n              }\n            })\n          }\n        })\n        await hotReloader.invalidate({\n          reloadAfterInvalidation: envChange,\n        })\n      }\n\n      if (nestedMiddleware.length > 0) {\n        Log.error(\n          new NestedMiddlewareError(\n            nestedMiddleware,\n            dir,\n            (pagesDir || appDir)!\n          ).message\n        )\n        nestedMiddleware = []\n      }\n\n      // Make sure to sort parallel routes to make the result deterministic.\n      serverFields.appPathRoutes = Object.fromEntries(\n        Object.entries(appPaths).map(([k, v]) => [k, v.sort()])\n      )\n      await propagateServerField(\n        opts,\n        'appPathRoutes',\n        serverFields.appPathRoutes\n      )\n\n      // TODO: pass this to fsChecker/next-dev-server?\n      serverFields.middleware = middlewareMatchers\n        ? {\n            match: null as any,\n            page: '/',\n            matchers: middlewareMatchers,\n          }\n        : undefined\n\n      await propagateServerField(opts, 'middleware', serverFields.middleware)\n      serverFields.hasAppNotFound = hasRootAppNotFound\n\n      opts.fsChecker.middlewareMatcher = serverFields.middleware?.matchers\n        ? getMiddlewareRouteMatcher(serverFields.middleware?.matchers)\n        : undefined\n\n      const interceptionRoutes = generateInterceptionRoutesRewrites(\n        Object.keys(appPaths),\n        opts.nextConfig.basePath\n      ).map((item) =>\n        buildCustomRoute(\n          'before_files_rewrite',\n          item,\n          opts.nextConfig.basePath,\n          opts.nextConfig.experimental.caseSensitiveRoutes\n        )\n      )\n\n      opts.fsChecker.rewrites.beforeFiles.push(...interceptionRoutes)\n\n      const exportPathMap =\n        (typeof nextConfig.exportPathMap === 'function' &&\n          (await nextConfig.exportPathMap?.(\n            {},\n            {\n              dev: true,\n              dir: opts.dir,\n              outDir: null,\n              distDir: distDir,\n              buildId: 'development',\n            }\n          ))) ||\n        {}\n\n      const exportPathMapEntries = Object.entries(exportPathMap || {})\n\n      if (exportPathMapEntries.length > 0) {\n        opts.fsChecker.exportPathMapRoutes = exportPathMapEntries.map(\n          ([key, value]) =>\n            buildCustomRoute(\n              'before_files_rewrite',\n              {\n                source: key,\n                destination: `${value.page}${\n                  value.query ? '?' : ''\n                }${qs.stringify(value.query)}`,\n              },\n              opts.nextConfig.basePath,\n              opts.nextConfig.experimental.caseSensitiveRoutes\n            )\n        )\n      }\n\n      try {\n        // we serve a separate manifest with all pages for the client in\n        // dev mode so that we can match a page after a rewrite on the client\n        // before it has been built and is populated in the _buildManifest\n        const sortedRoutes = getSortedRoutes(routedPages)\n\n        opts.fsChecker.dynamicRoutes = sortedRoutes.map(\n          (page): FilesystemDynamicRoute => {\n            const regex = getRouteRegex(page)\n            return {\n              regex: regex.re.toString(),\n              match: getRouteMatcher(regex),\n              page,\n            }\n          }\n        )\n\n        const dataRoutes: typeof opts.fsChecker.dynamicRoutes = []\n\n        for (const page of sortedRoutes) {\n          const route = buildDataRoute(page, 'development')\n          const routeRegex = getRouteRegex(route.page)\n          dataRoutes.push({\n            ...route,\n            regex: routeRegex.re.toString(),\n            match: getRouteMatcher({\n              // TODO: fix this in the manifest itself, must also be fixed in\n              // upstream builder that relies on this\n              re: opts.nextConfig.i18n\n                ? new RegExp(\n                    route.dataRouteRegex.replace(\n                      `/development/`,\n                      `/development/(?<nextLocale>[^/]+?)/`\n                    )\n                  )\n                : new RegExp(route.dataRouteRegex),\n              groups: routeRegex.groups,\n            }),\n          })\n        }\n        opts.fsChecker.dynamicRoutes.unshift(...dataRoutes)\n\n        if (!prevSortedRoutes?.every((val, idx) => val === sortedRoutes[idx])) {\n          const addedRoutes = sortedRoutes.filter(\n            (route) => !prevSortedRoutes.includes(route)\n          )\n          const removedRoutes = prevSortedRoutes.filter(\n            (route) => !sortedRoutes.includes(route)\n          )\n\n          // emit the change so clients fetch the update\n          hotReloader.send({\n            action: HMR_ACTIONS_SENT_TO_BROWSER.DEV_PAGES_MANIFEST_UPDATE,\n            data: [\n              {\n                devPagesManifest: true,\n              },\n            ],\n          })\n\n          addedRoutes.forEach((route) => {\n            hotReloader.send({\n              action: HMR_ACTIONS_SENT_TO_BROWSER.ADDED_PAGE,\n              data: [route],\n            })\n          })\n\n          removedRoutes.forEach((route) => {\n            hotReloader.send({\n              action: HMR_ACTIONS_SENT_TO_BROWSER.REMOVED_PAGE,\n              data: [route],\n            })\n          })\n        }\n        prevSortedRoutes = sortedRoutes\n\n        if (!resolved) {\n          resolve()\n          resolved = true\n        }\n      } catch (e) {\n        if (!resolved) {\n          reject(e)\n          resolved = true\n        } else {\n          Log.warn('Failed to reload dynamic routes:', e)\n        }\n      } finally {\n        // Reload the matchers. The filesystem would have been written to,\n        // and the matchers need to re-scan it to update the router.\n        await propagateServerField(opts, 'reloadMatchers', undefined)\n      }\n    })\n\n    wp.watch({ directories: [dir], startTime: 0 })\n  })\n\n  const clientPagesManifestPath = `/_next/${CLIENT_STATIC_FILES_PATH}/development/${DEV_CLIENT_PAGES_MANIFEST}`\n  opts.fsChecker.devVirtualFsItems.add(clientPagesManifestPath)\n\n  const devMiddlewareManifestPath = `/_next/${CLIENT_STATIC_FILES_PATH}/development/${DEV_CLIENT_MIDDLEWARE_MANIFEST}`\n  opts.fsChecker.devVirtualFsItems.add(devMiddlewareManifestPath)\n\n  async function requestHandler(req: IncomingMessage, res: ServerResponse) {\n    const parsedUrl = url.parse(req.url || '/')\n\n    if (parsedUrl.pathname?.includes(clientPagesManifestPath)) {\n      res.statusCode = 200\n      res.setHeader('Content-Type', 'application/json; charset=utf-8')\n      res.end(\n        JSON.stringify({\n          pages: prevSortedRoutes.filter(\n            (route) => !opts.fsChecker.appFiles.has(route)\n          ),\n        })\n      )\n      return { finished: true }\n    }\n\n    if (parsedUrl.pathname?.includes(devMiddlewareManifestPath)) {\n      res.statusCode = 200\n      res.setHeader('Content-Type', 'application/json; charset=utf-8')\n      res.end(JSON.stringify(serverFields.middleware?.matchers || []))\n      return { finished: true }\n    }\n    return { finished: false }\n  }\n\n  function logErrorWithOriginalStack(\n    err: unknown,\n    type?: 'unhandledRejection' | 'uncaughtException' | 'warning' | 'app-dir'\n  ) {\n    if (err instanceof ModuleBuildError) {\n      // Errors that may come from issues from the user's code\n      Log.error(err.message)\n    } else if (err instanceof TurbopackInternalError) {\n      // An internal Turbopack error that has been handled by next-swc, written\n      // to disk and a simplified message shown to user on the Rust side.\n    } else if (type === 'warning') {\n      Log.warn(err)\n    } else if (type === 'app-dir') {\n      Log.error(err)\n    } else if (type) {\n      Log.error(`${type}:`, err)\n    } else {\n      Log.error(err)\n    }\n  }\n\n  return {\n    serverFields,\n    hotReloader,\n    requestHandler,\n    logErrorWithOriginalStack,\n\n    async ensureMiddleware(requestUrl?: string) {\n      if (!serverFields.actualMiddlewareFile) return\n      return hotReloader.ensurePage({\n        page: serverFields.actualMiddlewareFile,\n        clientOnly: false,\n        definition: undefined,\n        url: requestUrl,\n      })\n    },\n  }\n}\n\nexport async function setupDevBundler(opts: SetupOpts) {\n  const isSrcDir = path\n    .relative(opts.dir, opts.pagesDir || opts.appDir || '')\n    .startsWith('src')\n\n  const result = await startWatcher(opts)\n\n  opts.telemetry.record(\n    eventCliSession(\n      path.join(opts.dir, opts.nextConfig.distDir),\n      opts.nextConfig,\n      {\n        webpackVersion: 5,\n        isSrcDir,\n        turboFlag: !!opts.turbo,\n        cliCommand: 'dev',\n        appDir: !!opts.appDir,\n        pagesDir: !!opts.pagesDir,\n        isCustomServer: !!opts.isCustomServer,\n        hasNowJson: !!(await findUp('now.json', { cwd: opts.dir })),\n      }\n    )\n  )\n  return result\n}\n\nexport type DevBundler = Awaited<ReturnType<typeof setupDevBundler>>\n\n// Returns a trace rewritten through Turbopack's sourcemaps\n"],"names":["propagateServerField","setupDevBundler","verifyTypeScript","opts","usingTypeScript","verifyResult","verifyTypeScriptSetup","dir","distDir","nextConfig","intentDirs","pagesDir","appDir","filter","Boolean","typeCheckPreflight","tsconfigPath","typescript","disableStaticImages","images","hasAppDir","hasPagesDir","version","field","args","renderServer","instance","startWatcher","resetFetch","useFileSystemPublicRoutes","path","join","distTypesDir","fs","existsSync","mkdir","recursive","setGlobal","PHASE_DEVELOPMENT_SERVER","validFileMatcher","createValidFileMatcher","pageExtensions","serverFields","consoleStore","setState","logging","hotReloader","turbo","createHotReloaderTurbopack","HotReloaderWebpack","config","buildId","encryptionKey","generateEncryptionKeyBase64","isBuild","telemetry","rewrites","fsChecker","previewProps","prerenderManifest","preview","start","experimental","nextScriptWorkers","verifyPartytownSetup","CLIENT_STATIC_FILES_PATH","ensureCallback","ensure","item","type","ensurePage","clientOnly","page","itemPath","isApp","definition","undefined","resolved","prevSortedRoutes","Promise","resolve","reject","readdir","_","files","length","pages","app","directories","rootDir","getPossibleMiddlewareFilenames","getPossibleInstrumentationHookFilenames","nestedMiddleware","envFiles","map","file","push","tsconfigPaths","wp","Watchpack","ignored","pathname","some","startsWith","d","fileWatchTimes","Map","enabledTypeScript","previousClientRouterFilters","previousConflictingPagePaths","Set","on","middlewareMatchers","routedPages","knownFiles","getTimeInfoEntries","appPaths","pageNameSet","conflictingAppPagePaths","appPageFilePaths","pagesPageFilePaths","pagesWithUnsupportedSegments","envChange","tsconfigChange","conflictingPageChange","hasRootAppNotFound","appFiles","pageFiles","clear","devPageFiles","sortedKnownFiles","keys","sort","sortByPageExts","fileName","includes","meta","get","watchTime","watchTimeChange","timestamp","set","endsWith","accuracy","isPageFile","isAppPath","normalizePathSep","isPagePath","rootFile","absolutePathToPage","extensions","keepIndex","pagesType","PAGE_TYPES","ROOT","isMiddlewareFile","staticInfo","getStaticInfoIncludingLayouts","pageFilePath","isDev","isInsideAppDir","output","Log","error","actualMiddlewareFile","middleware","matchers","regexp","originalSource","isInstrumentationHookFile","actualInstrumentationHookFile","add","pageName","APP","PAGES","isMetadataRouteFile","replace","getPageStaticInfo","pageType","normalizeMetadataPageToRoute","generateSitemaps","generateImageMetadata","isRootNotFound","isAppRouterPage","originalPageName","normalizeAppPath","nextDataRoutes","has","test","numConflicting","size","errorMessage","p","appPath","relative","pagesPath","setHmrServerError","Error","clearHmrServerError","clientRouterFilters","clientRouterFilter","createClientRouterFilter","Object","clientRouterFilterRedirects","_originalRedirects","r","internal","clientRouterFilterAllowedRate","JSON","stringify","then","catch","loadedEnvFiles","loadEnvConfig","process","env","NODE_ENV","envFilePath","info","typedEnv","createEnvDefinitions","configFileName","contents","dev","forceReload","silent","tsconfigResult","loadJsConfig","turbopackProject","hasRewrites","afterFiles","beforeFiles","fallback","update","defineEnv","createDefineEnv","isTurbopack","fetchCacheKeyPrefix","activeWebpackConfigs","forEach","idx","isClient","isNodeServer","isEdgeServer","plugins","plugin","JsConfigPathsPlugin","jsConfig","resolvedBaseUrl","currentResolvedBaseUrl","resolvedUrlIndex","modules","findIndex","baseUrl","splice","isImplicit","compilerOptions","paths","key","assign","definitions","__NEXT_DEFINE_ENV","newDefine","getDefineEnv","isNodeOrEdgeCompilation","invalidate","reloadAfterInvalidation","NestedMiddlewareError","message","appPathRoutes","fromEntries","entries","k","v","match","hasAppNotFound","middlewareMatcher","getMiddlewareRouteMatcher","interceptionRoutes","generateInterceptionRoutesRewrites","basePath","buildCustomRoute","caseSensitiveRoutes","exportPathMap","outDir","exportPathMapEntries","exportPathMapRoutes","value","source","destination","query","qs","sortedRoutes","getSortedRoutes","dynamicRoutes","regex","getRouteRegex","re","toString","getRouteMatcher","dataRoutes","route","buildDataRoute","routeRegex","i18n","RegExp","dataRouteRegex","groups","unshift","every","val","addedRoutes","removedRoutes","send","action","HMR_ACTIONS_SENT_TO_BROWSER","DEV_PAGES_MANIFEST_UPDATE","data","devPagesManifest","ADDED_PAGE","REMOVED_PAGE","e","warn","watch","startTime","clientPagesManifestPath","DEV_CLIENT_PAGES_MANIFEST","devVirtualFsItems","devMiddlewareManifestPath","DEV_CLIENT_MIDDLEWARE_MANIFEST","requestHandler","req","res","parsedUrl","url","parse","statusCode","setHeader","end","finished","logErrorWithOriginalStack","err","ModuleBuildError","TurbopackInternalError","ensureMiddleware","requestUrl","isSrcDir","result","record","eventCliSession","webpackVersion","turboFlag","cliCommand","isCustomServer","hasNowJson","findUp","cwd"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6413, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6418, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/router-server.ts"],"sourcesContent":["// this must come first as it includes require hooks\nimport type { WorkerRequestHandler, WorkerUpgradeHandler } from './types'\nimport type { DevBundler, ServerFields } from './router-utils/setup-dev-bundler'\nimport type { NextUrlWithParsedQuery, RequestMeta } from '../request-meta'\n\n// This is required before other imports to ensure the require hook is setup.\nimport '../node-environment'\nimport '../require-hook'\n\nimport url from 'url'\nimport path from 'path'\nimport loadConfig from '../config'\nimport { serveStatic } from '../serve-static'\nimport setupDebug from 'next/dist/compiled/debug'\nimport * as Log from '../../build/output/log'\nimport { DecodeError } from '../../shared/lib/utils'\nimport { findPagesDir } from '../../lib/find-pages-dir'\nimport { setupFsCheck } from './router-utils/filesystem'\nimport { proxyRequest } from './router-utils/proxy-request'\nimport { isAbortError, pipeToNodeResponse } from '../pipe-readable'\nimport { getResolveRoutes } from './router-utils/resolve-routes'\nimport { addRequestMeta, getRequestMeta } from '../request-meta'\nimport { pathHasPrefix } from '../../shared/lib/router/utils/path-has-prefix'\nimport { removePathPrefix } from '../../shared/lib/router/utils/remove-path-prefix'\nimport setupCompression from 'next/dist/compiled/compression'\nimport { NoFallbackError } from '../base-server'\nimport { signalFromNodeResponse } from '../web/spec-extension/adapters/next-request'\nimport { isPostpone } from './router-utils/is-postpone'\nimport { parseUrl as parseUrlUtil } from '../../shared/lib/router/utils/parse-url'\n\nimport {\n  PHASE_PRODUCTION_SERVER,\n  PHASE_DEVELOPMENT_SERVER,\n  UNDERSCORE_NOT_FOUND_ROUTE,\n} from '../../shared/lib/constants'\nimport { RedirectStatusCode } from '../../client/components/redirect-status-code'\nimport { DevBundlerService } from './dev-bundler-service'\nimport { type Span, trace } from '../../trace'\nimport { ensureLeadingSlash } from '../../shared/lib/page-path/ensure-leading-slash'\nimport { getNextPathnameInfo } from '../../shared/lib/router/utils/get-next-pathname-info'\nimport { getHostname } from '../../shared/lib/get-hostname'\nimport { detectDomainLocale } from '../../shared/lib/i18n/detect-domain-locale'\nimport { MockedResponse } from './mock-request'\nimport {\n  HMR_ACTIONS_SENT_TO_BROWSER,\n  type AppIsrManifestAction,\n} from '../dev/hot-reloader-types'\nimport { normalizedAssetPrefix } from '../../shared/lib/normalized-asset-prefix'\nimport { NEXT_PATCH_SYMBOL } from './patch-fetch'\nimport type { ServerInitResult } from './render-server'\nimport { filterInternalHeaders } from './server-ipc/utils'\n\nconst debug = setupDebug('next:router-server:main')\nconst isNextFont = (pathname: string | null) =>\n  pathname && /\\/media\\/[^/]+\\.(woff|woff2|eot|ttf|otf)$/.test(pathname)\n\nexport type RenderServer = Pick<\n  typeof import('./render-server'),\n  | 'initialize'\n  | 'clearModuleContext'\n  | 'propagateServerField'\n  | 'getServerField'\n>\n\nexport interface LazyRenderServerInstance {\n  instance?: RenderServer\n}\n\nconst requestHandlers: Record<string, WorkerRequestHandler> = {}\n\nexport async function initialize(opts: {\n  dir: string\n  port: number\n  dev: boolean\n  onDevServerCleanup: ((listener: () => Promise<void>) => void) | undefined\n  server?: import('http').Server\n  minimalMode?: boolean\n  hostname?: string\n  keepAliveTimeout?: number\n  customServer?: boolean\n  experimentalHttpsServer?: boolean\n  startServerSpan?: Span\n  quiet?: boolean\n}): Promise<ServerInitResult> {\n  if (!process.env.NODE_ENV) {\n    // @ts-ignore not readonly\n    process.env.NODE_ENV = opts.dev ? 'development' : 'production'\n  }\n\n  const config = await loadConfig(\n    opts.dev ? PHASE_DEVELOPMENT_SERVER : PHASE_PRODUCTION_SERVER,\n    opts.dir,\n    { silent: false }\n  )\n\n  let compress: ReturnType<typeof setupCompression> | undefined\n\n  if (config?.compress !== false) {\n    compress = setupCompression()\n  }\n\n  const fsChecker = await setupFsCheck({\n    dev: opts.dev,\n    dir: opts.dir,\n    config,\n    minimalMode: opts.minimalMode,\n  })\n\n  const renderServer: LazyRenderServerInstance = {}\n\n  let developmentBundler: DevBundler | undefined\n\n  let devBundlerService: DevBundlerService | undefined\n\n  let originalFetch = globalThis.fetch\n\n  if (opts.dev) {\n    const { Telemetry } =\n      require('../../telemetry/storage') as typeof import('../../telemetry/storage')\n\n    const telemetry = new Telemetry({\n      distDir: path.join(opts.dir, config.distDir),\n    })\n    const { pagesDir, appDir } = findPagesDir(opts.dir)\n\n    const { setupDevBundler } =\n      require('./router-utils/setup-dev-bundler') as typeof import('./router-utils/setup-dev-bundler')\n\n    const resetFetch = () => {\n      globalThis.fetch = originalFetch\n      ;(globalThis as Record<symbol, unknown>)[NEXT_PATCH_SYMBOL] = false\n    }\n\n    const setupDevBundlerSpan = opts.startServerSpan\n      ? opts.startServerSpan.traceChild('setup-dev-bundler')\n      : trace('setup-dev-bundler')\n    developmentBundler = await setupDevBundlerSpan.traceAsyncFn(() =>\n      setupDevBundler({\n        // Passed here but the initialization of this object happens below, doing the initialization before the setupDev call breaks.\n        renderServer,\n        appDir,\n        pagesDir,\n        telemetry,\n        fsChecker,\n        dir: opts.dir,\n        nextConfig: config,\n        isCustomServer: opts.customServer,\n        turbo: !!process.env.TURBOPACK,\n        port: opts.port,\n        onDevServerCleanup: opts.onDevServerCleanup,\n        resetFetch,\n      })\n    )\n\n    devBundlerService = new DevBundlerService(\n      developmentBundler,\n      // The request handler is assigned below, this allows us to create a lazy\n      // reference to it.\n      (req, res) => {\n        return requestHandlers[opts.dir](req, res)\n      }\n    )\n  }\n\n  renderServer.instance =\n    require('./render-server') as typeof import('./render-server')\n\n  const requestHandlerImpl: WorkerRequestHandler = async (req, res) => {\n    // internal headers should not be honored by the request handler\n    if (!process.env.NEXT_PRIVATE_TEST_HEADERS) {\n      filterInternalHeaders(req.headers)\n    }\n\n    if (\n      !opts.minimalMode &&\n      config.i18n &&\n      config.i18n.localeDetection !== false\n    ) {\n      const urlParts = (req.url || '').split('?', 1)\n      let urlNoQuery = urlParts[0] || ''\n\n      if (config.basePath) {\n        urlNoQuery = removePathPrefix(urlNoQuery, config.basePath)\n      }\n\n      const pathnameInfo = getNextPathnameInfo(urlNoQuery, {\n        nextConfig: config,\n      })\n\n      const domainLocale = detectDomainLocale(\n        config.i18n.domains,\n        getHostname({ hostname: urlNoQuery }, req.headers)\n      )\n\n      const defaultLocale =\n        domainLocale?.defaultLocale || config.i18n.defaultLocale\n\n      const { getLocaleRedirect } =\n        require('../../shared/lib/i18n/get-locale-redirect') as typeof import('../../shared/lib/i18n/get-locale-redirect')\n\n      const parsedUrl = parseUrlUtil((req.url || '')?.replace(/^\\/+/, '/'))\n\n      const redirect = getLocaleRedirect({\n        defaultLocale,\n        domainLocale,\n        headers: req.headers,\n        nextConfig: config,\n        pathLocale: pathnameInfo.locale,\n        urlParsed: {\n          ...parsedUrl,\n          pathname: pathnameInfo.locale\n            ? `/${pathnameInfo.locale}${urlNoQuery}`\n            : urlNoQuery,\n        },\n      })\n\n      if (redirect) {\n        res.setHeader('Location', redirect)\n        res.statusCode = RedirectStatusCode.TemporaryRedirect\n        res.end(redirect)\n        return\n      }\n    }\n\n    if (compress) {\n      // @ts-expect-error not express req/res\n      compress(req, res, () => {})\n    }\n    req.on('error', (_err) => {\n      // TODO: log socket errors?\n    })\n    res.on('error', (_err) => {\n      // TODO: log socket errors?\n    })\n\n    const invokedOutputs = new Set<string>()\n\n    async function invokeRender(\n      parsedUrl: NextUrlWithParsedQuery,\n      invokePath: string,\n      handleIndex: number,\n      additionalRequestMeta?: RequestMeta\n    ) {\n      // invokeRender expects /api routes to not be locale prefixed\n      // so normalize here before continuing\n      if (\n        config.i18n &&\n        removePathPrefix(invokePath, config.basePath).startsWith(\n          `/${parsedUrl.query.__nextLocale}/api`\n        )\n      ) {\n        invokePath = fsChecker.handleLocale(\n          removePathPrefix(invokePath, config.basePath)\n        ).pathname\n      }\n\n      if (\n        req.headers['x-nextjs-data'] &&\n        fsChecker.getMiddlewareMatchers()?.length &&\n        removePathPrefix(invokePath, config.basePath) === '/404'\n      ) {\n        res.setHeader('x-nextjs-matched-path', parsedUrl.pathname || '')\n        res.statusCode = 404\n        res.setHeader('content-type', 'application/json')\n        res.end('{}')\n        return null\n      }\n\n      if (!handlers) {\n        throw new Error('Failed to initialize render server')\n      }\n\n      addRequestMeta(req, 'invokePath', invokePath)\n      addRequestMeta(req, 'invokeQuery', parsedUrl.query)\n      addRequestMeta(req, 'middlewareInvoke', false)\n\n      for (const key in additionalRequestMeta || {}) {\n        addRequestMeta(\n          req,\n          key as keyof RequestMeta,\n          additionalRequestMeta![key as keyof RequestMeta]\n        )\n      }\n\n      debug('invokeRender', req.url, req.headers)\n\n      try {\n        const initResult =\n          await renderServer?.instance?.initialize(renderServerOpts)\n        try {\n          await initResult?.requestHandler(req, res)\n        } catch (err) {\n          if (err instanceof NoFallbackError) {\n            // eslint-disable-next-line\n            await handleRequest(handleIndex + 1)\n            return\n          }\n          throw err\n        }\n        return\n      } catch (e) {\n        // If the client aborts before we can receive a response object (when\n        // the headers are flushed), then we can early exit without further\n        // processing.\n        if (isAbortError(e)) {\n          return\n        }\n        throw e\n      }\n    }\n\n    const handleRequest = async (handleIndex: number) => {\n      if (handleIndex > 5) {\n        throw new Error(`Attempted to handle request too many times ${req.url}`)\n      }\n\n      // handle hot-reloader first\n      if (developmentBundler) {\n        const origUrl = req.url || '/'\n\n        if (config.basePath && pathHasPrefix(origUrl, config.basePath)) {\n          req.url = removePathPrefix(origUrl, config.basePath)\n        }\n        const parsedUrl = url.parse(req.url || '/')\n\n        const hotReloaderResult = await developmentBundler.hotReloader.run(\n          req,\n          res,\n          parsedUrl\n        )\n\n        if (hotReloaderResult.finished) {\n          return hotReloaderResult\n        }\n        req.url = origUrl\n      }\n\n      const {\n        finished,\n        parsedUrl,\n        statusCode,\n        resHeaders,\n        bodyStream,\n        matchedOutput,\n      } = await resolveRoutes({\n        req,\n        res,\n        isUpgradeReq: false,\n        signal: signalFromNodeResponse(res),\n        invokedOutputs,\n      })\n\n      if (res.closed || res.finished) {\n        return\n      }\n\n      if (developmentBundler && matchedOutput?.type === 'devVirtualFsItem') {\n        const origUrl = req.url || '/'\n\n        if (config.basePath && pathHasPrefix(origUrl, config.basePath)) {\n          req.url = removePathPrefix(origUrl, config.basePath)\n        }\n\n        if (resHeaders) {\n          for (const key of Object.keys(resHeaders)) {\n            res.setHeader(key, resHeaders[key])\n          }\n        }\n        const result = await developmentBundler.requestHandler(req, res)\n\n        if (result.finished) {\n          return\n        }\n        // TODO: throw invariant if we resolved to this but it wasn't handled?\n        req.url = origUrl\n      }\n\n      debug('requestHandler!', req.url, {\n        matchedOutput,\n        statusCode,\n        resHeaders,\n        bodyStream: !!bodyStream,\n        parsedUrl: {\n          pathname: parsedUrl.pathname,\n          query: parsedUrl.query,\n        },\n        finished,\n      })\n\n      // apply any response headers from routing\n      for (const key of Object.keys(resHeaders || {})) {\n        res.setHeader(key, resHeaders[key])\n      }\n\n      // handle redirect\n      if (!bodyStream && statusCode && statusCode > 300 && statusCode < 400) {\n        const destination = url.format(parsedUrl)\n        res.statusCode = statusCode\n        res.setHeader('location', destination)\n\n        if (statusCode === RedirectStatusCode.PermanentRedirect) {\n          res.setHeader('Refresh', `0;url=${destination}`)\n        }\n        return res.end(destination)\n      }\n\n      // handle middleware body response\n      if (bodyStream) {\n        res.statusCode = statusCode || 200\n        return await pipeToNodeResponse(bodyStream, res)\n      }\n\n      if (finished && parsedUrl.protocol) {\n        return await proxyRequest(\n          req,\n          res,\n          parsedUrl,\n          undefined,\n          getRequestMeta(req, 'clonableBody')?.cloneBodyStream(),\n          config.experimental.proxyTimeout\n        )\n      }\n\n      if (matchedOutput?.fsPath && matchedOutput.itemPath) {\n        if (\n          opts.dev &&\n          (fsChecker.appFiles.has(matchedOutput.itemPath) ||\n            fsChecker.pageFiles.has(matchedOutput.itemPath))\n        ) {\n          res.statusCode = 500\n          await invokeRender(parsedUrl, '/_error', handleIndex, {\n            invokeStatus: 500,\n            invokeError: new Error(\n              `A conflicting public file and page file was found for path ${matchedOutput.itemPath} https://nextjs.org/docs/messages/conflicting-public-file-page`\n            ),\n          })\n          return\n        }\n\n        if (\n          !res.getHeader('cache-control') &&\n          matchedOutput.type === 'nextStaticFolder'\n        ) {\n          if (opts.dev && !isNextFont(parsedUrl.pathname)) {\n            res.setHeader('Cache-Control', 'no-store, must-revalidate')\n          } else {\n            res.setHeader(\n              'Cache-Control',\n              'public, max-age=31536000, immutable'\n            )\n          }\n        }\n        if (!(req.method === 'GET' || req.method === 'HEAD')) {\n          res.setHeader('Allow', ['GET', 'HEAD'])\n          res.statusCode = 405\n          return await invokeRender(\n            url.parse('/405', true),\n            '/405',\n            handleIndex,\n            {\n              invokeStatus: 405,\n            }\n          )\n        }\n\n        try {\n          return await serveStatic(req, res, matchedOutput.itemPath, {\n            root: matchedOutput.itemsRoot,\n            // Ensures that etags are not generated for static files when disabled.\n            etag: config.generateEtags,\n          })\n        } catch (err: any) {\n          /**\n           * Hardcoded every possible error status code that could be thrown by \"serveStatic\" method\n           * This is done by searching \"this.error\" inside \"send\" module's source code:\n           * https://github.com/pillarjs/send/blob/master/index.js\n           * https://github.com/pillarjs/send/blob/develop/index.js\n           */\n          const POSSIBLE_ERROR_CODE_FROM_SERVE_STATIC = new Set([\n            // send module will throw 500 when header is already sent or fs.stat error happens\n            // https://github.com/pillarjs/send/blob/53f0ab476145670a9bdd3dc722ab2fdc8d358fc6/index.js#L392\n            // Note: we will use Next.js built-in 500 page to handle 500 errors\n            // 500,\n\n            // send module will throw 404 when file is missing\n            // https://github.com/pillarjs/send/blob/53f0ab476145670a9bdd3dc722ab2fdc8d358fc6/index.js#L421\n            // Note: we will use Next.js built-in 404 page to handle 404 errors\n            // 404,\n\n            // send module will throw 403 when redirecting to a directory without enabling directory listing\n            // https://github.com/pillarjs/send/blob/53f0ab476145670a9bdd3dc722ab2fdc8d358fc6/index.js#L484\n            // Note: Next.js throws a different error (without status code) for directory listing\n            // 403,\n\n            // send module will throw 400 when fails to normalize the path\n            // https://github.com/pillarjs/send/blob/53f0ab476145670a9bdd3dc722ab2fdc8d358fc6/index.js#L520\n            400,\n\n            // send module will throw 412 with conditional GET request\n            // https://github.com/pillarjs/send/blob/53f0ab476145670a9bdd3dc722ab2fdc8d358fc6/index.js#L632\n            412,\n\n            // send module will throw 416 when range is not satisfiable\n            // https://github.com/pillarjs/send/blob/53f0ab476145670a9bdd3dc722ab2fdc8d358fc6/index.js#L669\n            416,\n          ])\n\n          let validErrorStatus = POSSIBLE_ERROR_CODE_FROM_SERVE_STATIC.has(\n            err.statusCode\n          )\n\n          // normalize non-allowed status codes\n          if (!validErrorStatus) {\n            ;(err as any).statusCode = 400\n          }\n\n          if (typeof err.statusCode === 'number') {\n            const invokePath = `/${err.statusCode}`\n            const invokeStatus = err.statusCode\n            res.statusCode = err.statusCode\n            return await invokeRender(\n              url.parse(invokePath, true),\n              invokePath,\n              handleIndex,\n              {\n                invokeStatus,\n              }\n            )\n          }\n          throw err\n        }\n      }\n\n      if (matchedOutput) {\n        invokedOutputs.add(matchedOutput.itemPath)\n\n        return await invokeRender(\n          parsedUrl,\n          parsedUrl.pathname || '/',\n          handleIndex,\n          {\n            invokeOutput: matchedOutput.itemPath,\n          }\n        )\n      }\n\n      // 404 case\n      res.setHeader(\n        'Cache-Control',\n        'private, no-cache, no-store, max-age=0, must-revalidate'\n      )\n\n      // Short-circuit favicon.ico serving so that the 404 page doesn't get built as favicon is requested by the browser when loading any route.\n      if (opts.dev && !matchedOutput && parsedUrl.pathname === '/favicon.ico') {\n        res.statusCode = 404\n        res.end('')\n        return null\n      }\n\n      const appNotFound = opts.dev\n        ? developmentBundler?.serverFields.hasAppNotFound\n        : await fsChecker.getItem(UNDERSCORE_NOT_FOUND_ROUTE)\n\n      res.statusCode = 404\n\n      if (appNotFound) {\n        return await invokeRender(\n          parsedUrl,\n          UNDERSCORE_NOT_FOUND_ROUTE,\n          handleIndex,\n          {\n            invokeStatus: 404,\n          }\n        )\n      }\n\n      await invokeRender(parsedUrl, '/404', handleIndex, {\n        invokeStatus: 404,\n      })\n    }\n\n    try {\n      await handleRequest(0)\n    } catch (err) {\n      try {\n        let invokePath = '/500'\n        let invokeStatus = '500'\n\n        if (err instanceof DecodeError) {\n          invokePath = '/400'\n          invokeStatus = '400'\n        } else {\n          console.error(err)\n        }\n        res.statusCode = Number(invokeStatus)\n        return await invokeRender(url.parse(invokePath, true), invokePath, 0, {\n          invokeStatus: res.statusCode,\n        })\n      } catch (err2) {\n        console.error(err2)\n      }\n      res.statusCode = 500\n      res.end('Internal Server Error')\n    }\n  }\n\n  let requestHandler: WorkerRequestHandler = requestHandlerImpl\n  if (config.experimental.testProxy) {\n    // Intercept fetch and other testmode apis.\n    const { wrapRequestHandlerWorker, interceptTestApis } =\n      require('next/dist/experimental/testmode/server') as typeof import('next/src/experimental/testmode/server')\n    requestHandler = wrapRequestHandlerWorker(requestHandler)\n    interceptTestApis()\n    // We treat the intercepted fetch as \"original\" fetch that should be reset to during HMR.\n    originalFetch = globalThis.fetch\n  }\n  requestHandlers[opts.dir] = requestHandler\n\n  const renderServerOpts: Parameters<RenderServer['initialize']>[0] = {\n    port: opts.port,\n    dir: opts.dir,\n    hostname: opts.hostname,\n    minimalMode: opts.minimalMode,\n    dev: !!opts.dev,\n    server: opts.server,\n    serverFields: {\n      ...(developmentBundler?.serverFields || {}),\n      setAppIsrStatus:\n        devBundlerService?.setAppIsrStatus.bind(devBundlerService),\n    } satisfies ServerFields,\n    experimentalTestProxy: !!config.experimental.testProxy,\n    experimentalHttpsServer: !!opts.experimentalHttpsServer,\n    bundlerService: devBundlerService,\n    startServerSpan: opts.startServerSpan,\n    quiet: opts.quiet,\n    onDevServerCleanup: opts.onDevServerCleanup,\n  }\n  renderServerOpts.serverFields.routerServerHandler = requestHandlerImpl\n\n  // pre-initialize workers\n  const handlers = await renderServer.instance.initialize(renderServerOpts)\n\n  const logError = async (\n    type: 'uncaughtException' | 'unhandledRejection',\n    err: Error | undefined\n  ) => {\n    if (isPostpone(err)) {\n      // React postpones that are unhandled might end up logged here but they're\n      // not really errors. They're just part of rendering.\n      return\n    }\n    if (type === 'unhandledRejection') {\n      Log.error('unhandledRejection: ', err)\n    } else if (type === 'uncaughtException') {\n      Log.error('uncaughtException: ', err)\n    }\n  }\n\n  process.on('uncaughtException', logError.bind(null, 'uncaughtException'))\n  process.on('unhandledRejection', logError.bind(null, 'unhandledRejection'))\n\n  const resolveRoutes = getResolveRoutes(\n    fsChecker,\n    config,\n    opts,\n    renderServer.instance,\n    renderServerOpts,\n    developmentBundler?.ensureMiddleware\n  )\n\n  const upgradeHandler: WorkerUpgradeHandler = async (req, socket, head) => {\n    try {\n      req.on('error', (_err) => {\n        // TODO: log socket errors?\n        // console.error(_err);\n      })\n      socket.on('error', (_err) => {\n        // TODO: log socket errors?\n        // console.error(_err);\n      })\n\n      if (opts.dev && developmentBundler && req.url) {\n        const { basePath, assetPrefix } = config\n\n        let hmrPrefix = basePath\n\n        // assetPrefix overrides basePath for HMR path\n        if (assetPrefix) {\n          hmrPrefix = normalizedAssetPrefix(assetPrefix)\n\n          if (URL.canParse(hmrPrefix)) {\n            // remove trailing slash from pathname\n            // return empty string if pathname is '/'\n            // to avoid conflicts with '/_next' below\n            hmrPrefix = new URL(hmrPrefix).pathname.replace(/\\/$/, '')\n          }\n        }\n\n        const isHMRRequest = req.url.startsWith(\n          ensureLeadingSlash(`${hmrPrefix}/_next/webpack-hmr`)\n        )\n\n        // only handle HMR requests if the basePath in the request\n        // matches the basePath for the handler responding to the request\n        if (isHMRRequest) {\n          return developmentBundler.hotReloader.onHMR(\n            req,\n            socket,\n            head,\n            (client) => {\n              client.send(\n                JSON.stringify({\n                  action: HMR_ACTIONS_SENT_TO_BROWSER.APP_ISR_MANIFEST,\n                  data: devBundlerService?.appIsrManifest || {},\n                } satisfies AppIsrManifestAction)\n              )\n            }\n          )\n        }\n      }\n\n      const res = new MockedResponse({\n        resWriter: () => {\n          throw new Error(\n            'Invariant: did not expect response writer to be written to for upgrade request'\n          )\n        },\n      })\n      const { matchedOutput, parsedUrl } = await resolveRoutes({\n        req,\n        res,\n        isUpgradeReq: true,\n        signal: signalFromNodeResponse(socket),\n      })\n\n      // TODO: allow upgrade requests to pages/app paths?\n      // this was not previously supported\n      if (matchedOutput) {\n        return socket.end()\n      }\n\n      if (parsedUrl.protocol) {\n        return await proxyRequest(req, socket, parsedUrl, head)\n      }\n\n      // If there's no matched output, we don't handle the request as user's\n      // custom WS server may be listening on the same path.\n    } catch (err) {\n      console.error('Error handling upgrade request', err)\n      socket.end()\n    }\n  }\n\n  return { requestHandler, upgradeHandler, server: handlers.server }\n}\n"],"names":["initialize","debug","setupDebug","isNextFont","pathname","test","requestHandlers","opts","process","env","NODE_ENV","dev","config","loadConfig","PHASE_DEVELOPMENT_SERVER","PHASE_PRODUCTION_SERVER","dir","silent","compress","setupCompression","fsChecker","setupFsCheck","minimalMode","renderServer","developmentBundler","devBundlerService","originalFetch","globalThis","fetch","Telemetry","require","telemetry","distDir","path","join","pagesDir","appDir","findPagesDir","setupDevBundler","resetFetch","NEXT_PATCH_SYMBOL","setupDevBundlerSpan","startServerSpan","traceChild","trace","traceAsyncFn","nextConfig","isCustomServer","customServer","turbo","TURBOPACK","port","onDevServerCleanup","DevBundlerService","req","res","instance","requestHandlerImpl","NEXT_PRIVATE_TEST_HEADERS","filterInternalHeaders","headers","i18n","localeDetection","urlParts","url","split","urlNoQuery","basePath","removePathPrefix","pathnameInfo","getNextPathnameInfo","domainLocale","detectDomainLocale","domains","getHostname","hostname","defaultLocale","getLocaleRedirect","parsedUrl","parseUrlUtil","replace","redirect","pathLocale","locale","urlParsed","setHeader","statusCode","RedirectStatusCode","TemporaryRedirect","end","on","_err","invokedOutputs","Set","invokeRender","invokePath","handleIndex","additionalRequestMeta","startsWith","query","__nextLocale","handleLocale","getMiddlewareMatchers","length","handlers","Error","addRequestMeta","key","initResult","renderServerOpts","requestHandler","err","NoFallbackError","handleRequest","e","isAbortError","origUrl","pathHasPrefix","parse","hotReloaderResult","hotReloader","run","finished","resHeaders","bodyStream","matchedOutput","resolveRoutes","isUpgradeReq","signal","signalFromNodeResponse","closed","type","Object","keys","result","destination","format","PermanentRedirect","pipeToNodeResponse","protocol","getRequestMeta","proxyRequest","undefined","cloneBodyStream","experimental","proxyTimeout","fsPath","itemPath","appFiles","has","pageFiles","invokeStatus","invokeError","getHeader","method","serveStatic","root","itemsRoot","etag","generateEtags","POSSIBLE_ERROR_CODE_FROM_SERVE_STATIC","validErrorStatus","add","invokeOutput","appNotFound","serverFields","hasAppNotFound","getItem","UNDERSCORE_NOT_FOUND_ROUTE","DecodeError","console","error","Number","err2","testProxy","wrapRequestHandlerWorker","interceptTestApis","server","setAppIsrStatus","bind","experimentalTestProxy","experimentalHttpsServer","bundlerService","quiet","routerServerHandler","logError","isPostpone","Log","getResolveRoutes","ensureMiddleware","upgradeHandler","socket","head","assetPrefix","hmrPrefix","normalizedAssetPrefix","URL","canParse","isHMRRequest","ensureLeadingSlash","onHMR","client","send","JSON","stringify","action","HMR_ACTIONS_SENT_TO_BROWSER","APP_ISR_MANIFEST","data","appIsrManifest","MockedResponse","resWriter"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6982, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6987, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/app-info-log.ts"],"sourcesContent":["import { loadEnvConfig } from '@next/env'\nimport * as Log from '../../build/output/log'\nimport { bold, purple } from '../../lib/picocolors'\nimport {\n  PHASE_DEVELOPMENT_SERVER,\n  PHASE_PRODUCTION_BUILD,\n} from '../../shared/lib/constants'\nimport loadConfig, { getEnabledExperimentalFeatures } from '../config'\n\nexport function logStartInfo({\n  networkUrl,\n  appUrl,\n  envInfo,\n  expFeatureInfo,\n  maxExperimentalFeatures = Infinity,\n}: {\n  networkUrl: string | null\n  appUrl: string | null\n  envInfo?: string[]\n  expFeatureInfo?: string[]\n  maxExperimentalFeatures?: number\n}) {\n  Log.bootstrap(\n    `${bold(\n      purple(`${Log.prefixes.ready} Next.js ${process.env.__NEXT_VERSION}`)\n    )}${process.env.TURBOPACK ? ' (Turbopack)' : ''}`\n  )\n  if (appUrl) {\n    Log.bootstrap(`- Local:        ${appUrl}`)\n  }\n  if (networkUrl) {\n    Log.bootstrap(`- Network:      ${networkUrl}`)\n  }\n  if (envInfo?.length) Log.bootstrap(`- Environments: ${envInfo.join(', ')}`)\n\n  if (expFeatureInfo?.length) {\n    Log.bootstrap(`- Experiments (use with caution):`)\n    // only show a maximum number of flags\n    for (const exp of expFeatureInfo.slice(0, maxExperimentalFeatures)) {\n      Log.bootstrap(`  · ${exp}`)\n    }\n    /* indicate if there are more than the maximum shown no. flags */\n    if (expFeatureInfo.length > maxExperimentalFeatures) {\n      Log.bootstrap(`  · ...`)\n    }\n  }\n\n  // New line after the bootstrap info\n  Log.info('')\n}\n\nexport async function getStartServerInfo(\n  dir: string,\n  dev: boolean\n): Promise<{\n  envInfo?: string[]\n  expFeatureInfo?: string[]\n}> {\n  let expFeatureInfo: string[] = []\n  await loadConfig(\n    dev ? PHASE_DEVELOPMENT_SERVER : PHASE_PRODUCTION_BUILD,\n    dir,\n    {\n      onLoadUserConfig(userConfig) {\n        const userNextConfigExperimental = getEnabledExperimentalFeatures(\n          userConfig.experimental\n        )\n        expFeatureInfo = userNextConfigExperimental.sort(\n          (a, b) => a.length - b.length\n        )\n      },\n    }\n  )\n\n  // we need to reset env if we are going to create\n  // the worker process with the esm loader so that the\n  // initial env state is correct\n  let envInfo: string[] = []\n  const { loadedEnvFiles } = loadEnvConfig(dir, true, console, false)\n  if (loadedEnvFiles.length > 0) {\n    envInfo = loadedEnvFiles.map((f) => f.path)\n  }\n\n  return {\n    envInfo,\n    expFeatureInfo,\n  }\n}\n"],"names":["getStartServerInfo","logStartInfo","networkUrl","appUrl","envInfo","expFeatureInfo","maxExperimentalFeatures","Infinity","Log","bootstrap","bold","purple","prefixes","ready","process","env","__NEXT_VERSION","TURBOPACK","length","join","exp","slice","info","dir","dev","loadConfig","PHASE_DEVELOPMENT_SERVER","PHASE_PRODUCTION_BUILD","onLoadUserConfig","userConfig","userNextConfigExperimental","getEnabledExperimentalFeatures","experimental","sort","a","b","loadedEnvFiles","loadEnvConfig","console","map","f","path"],"mappings":";;;;;;;;;;;;;;;IAmDsBA,kBAAkB,EAAA;eAAlBA;;IA1CNC,YAAY,EAAA;eAAZA;;;qBATc;6DACT;4BACQ;2BAItB;gEACoD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEpD,SAASA,aAAa,EAC3BC,UAAU,EACVC,MAAM,EACNC,OAAO,EACPC,cAAc,EACdC,0BAA0BC,QAAQ,EAOnC;IACCC,KAAIC,SAAS,CACX,GAAGC,CAAAA,GAAAA,YAAAA,IAAI,EACLC,CAAAA,GAAAA,YAAAA,MAAM,EAAC,GAAGH,KAAII,QAAQ,CAACC,KAAK,CAAC,SAAS,EAAEC,QAAQC,EAAAA,CAAG,CAACC,GAAAA,WAAc,EAAE,KAClEF,qBAAAA,EAAQC,GAAG,CAACE,SAAS,GAAG,qCAAA,cAAiB,IAAI;IAEnD,IAAId,QAAQ;QACVK,KAAIC,SAAS,CAAC,CAAC,gBAAgB,EAAEN,QAAQ;IAC3C;IACA,IAAID,YAAY;QACdM,KAAIC,SAAS,CAAC,CAAC,gBAAgB,EAAEP,YAAY;IAC/C;IACA,IAAIE,WAAAA,OAAAA,KAAAA,IAAAA,QAASc,MAAM,EAAEV,KAAIC,SAAS,CAAC,CAAC,gBAAgB,EAAEL,QAAQe,IAAI,CAAC,OAAO;IAE1E,IAAId,kBAAAA,OAAAA,KAAAA,IAAAA,eAAgBa,MAAM,EAAE;QAC1BV,KAAIC,SAAS,CAAC,CAAC,iCAAiC,CAAC;QACjD,sCAAsC;QACtC,KAAK,MAAMW,OAAOf,eAAegB,KAAK,CAAC,GAAGf,yBAA0B;YAClEE,KAAIC,SAAS,CAAC,CAAC,IAAI,EAAEW,KAAK;QAC5B;QACA,+DAA+D,GAC/D,IAAIf,eAAea,MAAM,GAAGZ,yBAAyB;YACnDE,KAAIC,SAAS,CAAC,CAAC,OAAO,CAAC;QACzB;IACF;IAEA,oCAAoC;IACpCD,KAAIc,IAAI,CAAC;AACX;AAEO,eAAetB,mBACpBuB,GAAW,EACXC,GAAY;IAKZ,IAAInB,iBAA2B,EAAE;IACjC,MAAMoB,CAAAA,GAAAA,QAAAA,OAAU,EACdD,MAAME,WAAAA,wBAAwB,GAAGC,WAAAA,sBAAsB,EACvDJ,KACA;QACEK,kBAAiBC,UAAU;YACzB,MAAMC,6BAA6BC,CAAAA,GAAAA,QAAAA,8BAA8B,EAC/DF,WAAWG,YAAY;YAEzB3B,iBAAiByB,2BAA2BG,IAAI,CAC9C,CAACC,GAAGC,IAAMD,EAAEhB,MAAM,GAAGiB,EAAEjB,MAAM;QAEjC;IACF;IAGF,iDAAiD;IACjD,qDAAqD;IACrD,+BAA+B;IAC/B,IAAId,UAAoB,EAAE;IAC1B,MAAM,EAAEgC,cAAc,EAAE,GAAGC,CAAAA,GAAAA,KAAAA,aAAa,EAACd,KAAK,MAAMe,SAAS;IAC7D,IAAIF,eAAelB,MAAM,GAAG,GAAG;QAC7Bd,UAAUgC,eAAeG,GAAG,CAAC,CAACC,IAAMA,EAAEC,IAAI;IAC5C;IAEA,OAAO;QACLrC;QACAC;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 7098, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7103, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/start-server.ts"],"sourcesContent":["import { getNetworkHost } from '../../lib/get-network-host'\n\nif (performance.getEntriesByName('next-start').length === 0) {\n  performance.mark('next-start')\n}\nimport '../next'\nimport '../require-hook'\n\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { SelfSignedCertificate } from '../../lib/mkcert'\nimport type { WorkerRequestHandler, WorkerUpgradeHandler } from './types'\n\nimport fs from 'fs'\nimport v8 from 'v8'\nimport path from 'path'\nimport http from 'http'\nimport https from 'https'\nimport os from 'os'\nimport Watchpack from 'next/dist/compiled/watchpack'\nimport * as Log from '../../build/output/log'\nimport setupDebug from 'next/dist/compiled/debug'\nimport {\n  RESTART_EXIT_CODE,\n  getFormattedDebugAddress,\n  getNodeDebugType,\n} from './utils'\nimport { formatHostname } from './format-hostname'\nimport { initialize } from './router-server'\nimport { CONFIG_FILES } from '../../shared/lib/constants'\nimport { getStartServerInfo, logStartInfo } from './app-info-log'\nimport { validateTurboNextConfig } from '../../lib/turbopack-warning'\nimport { type Span, trace, flushAllTraces } from '../../trace'\nimport { isPostpone } from './router-utils/is-postpone'\nimport { isIPv6 } from './is-ipv6'\nimport { AsyncCallbackSet } from './async-callback-set'\nimport type { NextServer } from '../next'\n\nconst debug = setupDebug('next:start-server')\nlet startServerSpan: Span | undefined\n\nexport interface StartServerOptions {\n  dir: string\n  port: number\n  isDev: boolean\n  hostname?: string\n  allowRetry?: boolean\n  customServer?: boolean\n  minimalMode?: boolean\n  keepAliveTimeout?: number\n  // this is dev-server only\n  selfSignedCertificate?: SelfSignedCertificate\n}\n\nexport async function getRequestHandlers({\n  dir,\n  port,\n  isDev,\n  onDevServerCleanup,\n  server,\n  hostname,\n  minimalMode,\n  keepAliveTimeout,\n  experimentalHttpsServer,\n  quiet,\n}: {\n  dir: string\n  port: number\n  isDev: boolean\n  onDevServerCleanup: ((listener: () => Promise<void>) => void) | undefined\n  server?: import('http').Server\n  hostname?: string\n  minimalMode?: boolean\n  keepAliveTimeout?: number\n  experimentalHttpsServer?: boolean\n  quiet?: boolean\n}): ReturnType<typeof initialize> {\n  return initialize({\n    dir,\n    port,\n    hostname,\n    onDevServerCleanup,\n    dev: isDev,\n    minimalMode,\n    server,\n    keepAliveTimeout,\n    experimentalHttpsServer,\n    startServerSpan,\n    quiet,\n  })\n}\n\nexport async function startServer(\n  serverOptions: StartServerOptions\n): Promise<void> {\n  const {\n    dir,\n    isDev,\n    hostname,\n    minimalMode,\n    allowRetry,\n    keepAliveTimeout,\n    selfSignedCertificate,\n  } = serverOptions\n  let { port } = serverOptions\n\n  process.title = `next-server (v${process.env.__NEXT_VERSION})`\n  let handlersReady = () => {}\n  let handlersError = () => {}\n\n  let handlersPromise: Promise<void> | undefined = new Promise<void>(\n    (resolve, reject) => {\n      handlersReady = resolve\n      handlersError = reject\n    }\n  )\n  let requestHandler: WorkerRequestHandler = async (\n    req: IncomingMessage,\n    res: ServerResponse\n  ): Promise<void> => {\n    if (handlersPromise) {\n      await handlersPromise\n      return requestHandler(req, res)\n    }\n    throw new Error('Invariant request handler was not setup')\n  }\n  let upgradeHandler: WorkerUpgradeHandler = async (\n    req,\n    socket,\n    head\n  ): Promise<void> => {\n    if (handlersPromise) {\n      await handlersPromise\n      return upgradeHandler(req, socket, head)\n    }\n    throw new Error('Invariant upgrade handler was not setup')\n  }\n\n  let nextServer: NextServer | undefined\n\n  // setup server listener as fast as possible\n  if (selfSignedCertificate && !isDev) {\n    throw new Error(\n      'Using a self signed certificate is only supported with `next dev`.'\n    )\n  }\n\n  async function requestListener(req: IncomingMessage, res: ServerResponse) {\n    try {\n      if (handlersPromise) {\n        await handlersPromise\n        handlersPromise = undefined\n      }\n      await requestHandler(req, res)\n    } catch (err) {\n      res.statusCode = 500\n      res.end('Internal Server Error')\n      Log.error(`Failed to handle request for ${req.url}`)\n      console.error(err)\n    } finally {\n      if (isDev) {\n        if (\n          v8.getHeapStatistics().used_heap_size >\n          0.8 * v8.getHeapStatistics().heap_size_limit\n        ) {\n          Log.warn(\n            `Server is approaching the used memory threshold, restarting...`\n          )\n          trace('server-restart-close-to-memory-threshold', undefined, {\n            'memory.heapSizeLimit': String(\n              v8.getHeapStatistics().heap_size_limit\n            ),\n            'memory.heapUsed': String(v8.getHeapStatistics().used_heap_size),\n          }).stop()\n          await flushAllTraces()\n          process.exit(RESTART_EXIT_CODE)\n        }\n      }\n    }\n  }\n\n  const server = selfSignedCertificate\n    ? https.createServer(\n        {\n          key: fs.readFileSync(selfSignedCertificate.key),\n          cert: fs.readFileSync(selfSignedCertificate.cert),\n        },\n        requestListener\n      )\n    : http.createServer(requestListener)\n\n  if (keepAliveTimeout) {\n    server.keepAliveTimeout = keepAliveTimeout\n  }\n  server.on('upgrade', async (req, socket, head) => {\n    try {\n      await upgradeHandler(req, socket, head)\n    } catch (err) {\n      socket.destroy()\n      Log.error(`Failed to handle request for ${req.url}`)\n      console.error(err)\n    }\n  })\n\n  let portRetryCount = 0\n\n  server.on('error', (err: NodeJS.ErrnoException) => {\n    if (\n      allowRetry &&\n      port &&\n      isDev &&\n      err.code === 'EADDRINUSE' &&\n      portRetryCount < 10\n    ) {\n      Log.warn(`Port ${port} is in use, trying ${port + 1} instead.`)\n      port += 1\n      portRetryCount += 1\n      server.listen(port, hostname)\n    } else {\n      Log.error(`Failed to start server`)\n      console.error(err)\n      process.exit(1)\n    }\n  })\n\n  let cleanupListeners = isDev ? new AsyncCallbackSet() : undefined\n\n  await new Promise<void>((resolve) => {\n    server.on('listening', async () => {\n      const nodeDebugType = getNodeDebugType()\n\n      const addr = server.address()\n      const actualHostname = formatHostname(\n        typeof addr === 'object'\n          ? addr?.address || hostname || 'localhost'\n          : addr\n      )\n      const formattedHostname =\n        !hostname || actualHostname === '0.0.0.0'\n          ? 'localhost'\n          : actualHostname === '[::]'\n            ? '[::1]'\n            : formatHostname(hostname)\n\n      port = typeof addr === 'object' ? addr?.port || port : port\n\n      const networkHostname =\n        hostname ?? getNetworkHost(isIPv6(actualHostname) ? 'IPv6' : 'IPv4')\n\n      const protocol = selfSignedCertificate ? 'https' : 'http'\n\n      const networkUrl = networkHostname\n        ? `${protocol}://${formatHostname(networkHostname)}:${port}`\n        : null\n\n      const appUrl = `${protocol}://${formattedHostname}:${port}`\n\n      if (nodeDebugType) {\n        const formattedDebugAddress = getFormattedDebugAddress()\n        Log.info(\n          `the --${nodeDebugType} option was detected, the Next.js router server should be inspected at ${formattedDebugAddress}.`\n        )\n      }\n\n      // Store the selected port to:\n      // - expose it to render workers\n      // - re-use it for automatic dev server restarts with a randomly selected port\n      process.env.PORT = port + ''\n\n      process.env.__NEXT_PRIVATE_ORIGIN = appUrl\n\n      // Only load env and config in dev to for logging purposes\n      let envInfo: string[] | undefined\n      let expFeatureInfo: string[] | undefined\n      if (isDev) {\n        const startServerInfo = await getStartServerInfo(dir, isDev)\n        envInfo = startServerInfo.envInfo\n        expFeatureInfo = startServerInfo.expFeatureInfo\n      }\n      logStartInfo({\n        networkUrl,\n        appUrl,\n        envInfo,\n        expFeatureInfo,\n        maxExperimentalFeatures: 3,\n      })\n\n      Log.event(`Starting...`)\n\n      try {\n        let cleanupStarted = false\n        const cleanup = () => {\n          if (cleanupStarted) {\n            // We can get duplicate signals, e.g. when `ctrl+c` is used in an\n            // interactive shell (i.e. bash, zsh), the shell will recursively\n            // send SIGINT to children. The parent `next-dev` process will also\n            // send us SIGINT.\n            return\n          }\n          cleanupStarted = true\n          ;(async () => {\n            debug('start-server process cleanup')\n\n            // first, stop accepting new connections and finish pending requests,\n            // because they might affect `nextServer.close()` (e.g. by scheduling an `after`)\n            await new Promise<void>((res) =>\n              server.close((err) => {\n                if (err) console.error(err)\n                res()\n              })\n            )\n\n            // now that no new requests can come in, clean up the rest\n            await Promise.all([\n              nextServer?.close().catch(console.error),\n              cleanupListeners?.runAll().catch(console.error),\n            ])\n\n            debug('start-server process cleanup finished')\n            process.exit(0)\n          })()\n        }\n        const exception = (err: Error) => {\n          if (isPostpone(err)) {\n            // React postpones that are unhandled might end up logged here but they're\n            // not really errors. They're just part of rendering.\n            return\n          }\n\n          // This is the render worker, we keep the process alive\n          console.error(err)\n        }\n        // Make sure commands gracefully respect termination signals (e.g. from Docker)\n        // Allow the graceful termination to be manually configurable\n        if (!process.env.NEXT_MANUAL_SIG_HANDLE) {\n          process.on('SIGINT', cleanup)\n          process.on('SIGTERM', cleanup)\n        }\n        process.on('rejectionHandled', () => {\n          // It is ok to await a Promise late in Next.js as it allows for better\n          // prefetching patterns to avoid waterfalls. We ignore loggining these.\n          // We should've already errored in anyway unhandledRejection.\n        })\n        process.on('uncaughtException', exception)\n        process.on('unhandledRejection', exception)\n\n        const initResult = await getRequestHandlers({\n          dir,\n          port,\n          isDev,\n          onDevServerCleanup: cleanupListeners\n            ? cleanupListeners.add.bind(cleanupListeners)\n            : undefined,\n          server,\n          hostname,\n          minimalMode,\n          keepAliveTimeout,\n          experimentalHttpsServer: !!selfSignedCertificate,\n        })\n        requestHandler = initResult.requestHandler\n        upgradeHandler = initResult.upgradeHandler\n        nextServer = initResult.server\n\n        const startServerProcessDuration =\n          performance.mark('next-start-end') &&\n          performance.measure(\n            'next-start-duration',\n            'next-start',\n            'next-start-end'\n          ).duration\n\n        handlersReady()\n        const formatDurationText =\n          startServerProcessDuration > 2000\n            ? `${Math.round(startServerProcessDuration / 100) / 10}s`\n            : `${Math.round(startServerProcessDuration)}ms`\n\n        Log.event(`Ready in ${formatDurationText}`)\n\n        if (process.env.TURBOPACK) {\n          await validateTurboNextConfig({\n            dir: serverOptions.dir,\n            isDev: true,\n          })\n        }\n      } catch (err) {\n        // fatal error if we can't setup\n        handlersError()\n        console.error(err)\n        process.exit(1)\n      }\n\n      resolve()\n    })\n    server.listen(port, hostname)\n  })\n\n  if (isDev) {\n    function watchConfigFiles(\n      dirToWatch: string,\n      onChange: (filename: string) => void\n    ) {\n      const wp = new Watchpack()\n      wp.watch({\n        files: CONFIG_FILES.map((file) => path.join(dirToWatch, file)),\n      })\n      wp.on('change', onChange)\n    }\n    watchConfigFiles(dir, async (filename) => {\n      if (process.env.__NEXT_DISABLE_MEMORY_WATCHER) {\n        Log.info(\n          `Detected change, manual restart required due to '__NEXT_DISABLE_MEMORY_WATCHER' usage`\n        )\n        return\n      }\n\n      Log.warn(\n        `Found a change in ${path.basename(\n          filename\n        )}. Restarting the server to apply the changes...`\n      )\n      process.exit(RESTART_EXIT_CODE)\n    })\n  }\n}\n\nif (process.env.NEXT_PRIVATE_WORKER && process.send) {\n  process.addListener('message', async (msg: any) => {\n    if (msg && typeof msg && msg.nextWorkerOptions && process.send) {\n      startServerSpan = trace('start-dev-server', undefined, {\n        cpus: String(os.cpus().length),\n        platform: os.platform(),\n        'memory.freeMem': String(os.freemem()),\n        'memory.totalMem': String(os.totalmem()),\n        'memory.heapSizeLimit': String(v8.getHeapStatistics().heap_size_limit),\n      })\n      await startServerSpan.traceAsyncFn(() =>\n        startServer(msg.nextWorkerOptions)\n      )\n      const memoryUsage = process.memoryUsage()\n      startServerSpan.setAttribute('memory.rss', String(memoryUsage.rss))\n      startServerSpan.setAttribute(\n        'memory.heapTotal',\n        String(memoryUsage.heapTotal)\n      )\n      startServerSpan.setAttribute(\n        'memory.heapUsed',\n        String(memoryUsage.heapUsed)\n      )\n      process.send({ nextServerReady: true, port: process.env.PORT })\n    }\n  })\n  process.send({ nextWorkerReady: true })\n}\n"],"names":["getRequestHandlers","startServer","performance","getEntriesByName","length","mark","debug","setupDebug","startServerSpan","dir","port","isDev","onDevServerCleanup","server","hostname","minimalMode","keepAliveTimeout","experimentalHttpsServer","quiet","initialize","dev","serverOptions","allowRetry","selfSignedCertificate","process","title","env","__NEXT_VERSION","handlersReady","handlersError","handlersPromise","Promise","resolve","reject","requestHandler","req","res","Error","upgradeHandler","socket","head","nextServer","requestListener","undefined","err","statusCode","end","Log","error","url","console","v8","getHeapStatistics","used_heap_size","heap_size_limit","warn","trace","String","stop","flushAllTraces","exit","RESTART_EXIT_CODE","https","createServer","key","fs","readFileSync","cert","http","on","destroy","portRetryCount","code","listen","cleanupListeners","AsyncCallbackSet","nodeDebugType","getNodeDebugType","addr","address","actualHostname","formatHostname","formattedHostname","networkHostname","getNetworkHost","isIPv6","protocol","networkUrl","appUrl","formattedDebugAddress","getFormattedDebugAddress","info","PORT","__NEXT_PRIVATE_ORIGIN","envInfo","expFeatureInfo","startServerInfo","getStartServerInfo","logStartInfo","maxExperimentalFeatures","event","cleanupStarted","cleanup","close","all","catch","runAll","exception","isPostpone","NEXT_MANUAL_SIG_HANDLE","initResult","add","bind","startServerProcessDuration","measure","duration","formatDurationText","Math","round","TURBOPACK","validateTurboNextConfig","watchConfigFiles","dirToWatch","onChange","wp","Watchpack","watch","files","CONFIG_FILES","map","file","path","join","filename","__NEXT_DISABLE_MEMORY_WATCHER","basename","NEXT_PRIVATE_WORKER","send","addListener","msg","nextWorkerOptions","cpus","os","platform","freemem","totalmem","traceAsyncFn","memoryUsage","setAttribute","rss","heapTotal","heapUsed","nextServerReady","nextWorkerReady"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7461, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7466, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/module-loader/node-module-loader.ts"],"sourcesContent":["import type { ModuleLoader } from './module-loader'\n\n/**\n * Loads a module using `await require(id)`.\n */\nexport class NodeModuleLoader implements ModuleLoader {\n  public async load<M>(id: string): Promise<M> {\n    if (process.env.NEXT_RUNTIME !== 'edge') {\n      // Need to `await` to cover the case that route is marked ESM modules by ESM escalation.\n      return await (process.env.NEXT_MINIMAL\n        ? // @ts-ignore\n          __non_webpack_require__(id)\n        : require(id))\n    }\n\n    throw new Error('NodeModuleLoader is not supported in edge runtime.')\n  }\n}\n"],"names":["NodeModuleLoader","load","id","process","env","NEXT_RUNTIME","NEXT_MINIMAL","__non_webpack_require__","require","Error"],"mappings":";;;;+BAKaA,oBAAAA;;;eAAAA;;;AAAN,MAAMA;IACX,MAAaC,KAAQC,EAAU,EAAc;QAC3C,IAAIC,QAAQC,GAAG,CAACC,YAAY,KAAK,OAAQ;YACvC,wFAAwF;YACxF,OAAO,MAAOF,CAAAA,QAAQC,GAAG,CAACE,YAAY,GAElCC,wBAAwBL,MACxBM,QAAQN;;;;gBAAE;QAChB;;IAGF;AACF","ignoreList":[0]}},
    {"offset": {"line": 7489, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7494, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DEV-%20DD/Documents/learning-code-javascript/nextjs/01-primeiro-projeto/node_modules/next/src/server/lib/module-loader/route-module-loader.ts"],"sourcesContent":["import type { RouteModule } from '../../route-modules/route-module'\nimport type { ModuleLoader } from './module-loader'\n\nimport { NodeModuleLoader } from './node-module-loader'\n\nexport interface AppLoaderModule<M extends RouteModule = RouteModule> {\n  routeModule: M\n}\n\nexport class RouteModuleLoader {\n  static async load<M extends RouteModule>(\n    id: string,\n    loader: ModuleLoader = new NodeModuleLoader()\n  ): Promise<M> {\n    const module: AppLoaderModule<M> = await loader.load(id)\n    if ('routeModule' in module) {\n      return module.routeModule\n    }\n\n    throw new Error(`Module \"${id}\" does not export a routeModule.`)\n  }\n}\n"],"names":["RouteModuleLoader","load","id","loader","NodeModuleLoader","module","routeModule","Error"],"mappings":";;;;+BASaA,qBAAAA;;;eAAAA;;;kCANoB;AAM1B,MAAMA;IACX,aAAaC,KACXC,EAAU,EACVC,SAAuB,IAAIC,kBAAAA,gBAAgB,EAAE,EACjC;QACZ,MAAMC,SAA6B,MAAMF,OAAOF,IAAI,CAACC;QACrD,IAAI,iBAAiBG,QAAQ;YAC3B,OAAOA,OAAOC,WAAW;QAC3B;QAEA,MAAM,IAAIC,MAAM,CAAC,QAAQ,EAAEL,GAAG,gCAAgC,CAAC;IACjE;AACF","ignoreList":[0]}},
    {"offset": {"line": 7514, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}